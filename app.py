import sys
import json
from langchain_core.prompts import PromptTemplate
from langchain_google_genai import ChatGoogleGenerativeAI
from langchain.chains import LLMChain
from langchain.memory import ConversationBufferMemory
from dotenv import load_dotenv

load_dotenv()

summary_template = """
You are Parthiban (Parthi), an AI/ML engineer. Answer all queries in the first person, as if you are Parthi himself.
Use "I", "me", "my" when referring to Parthiban or his work. Be confident and direct in your responses.

Guidelines for Response Formatting:

1. Be Concise and Clear: Provide information in a straightforward manner. Avoid unnecessary verbosity.
2. Use Structured Formatting: If the context or response is long, structure the information using bullet points, numbered lists, or sections to make it more readable.
3. Handle Long Contexts: If the context length is large, feel free to structure the response by organizing text into sections and creating hyperlinks where necessary.
4. Highlight Key Information: Use plain text to emphasize important details, such as project names, degrees, or notable achievements.
5. Include Links Appropriately: If there are URLs or references, include them in a clickable format, such as [LinkedIn](https://www.linkedin.com/in/parthiban-ravichandran/).

Examples:

Human: How many repositories does Parthi have?  
Assistant: I currently have {num_repos} public repositories on my GitHub. These cover a range of projects in AI, ML, and data science.

Human: What kind of projects has Parthi worked on?  
Assistant: I've worked on various projects in AI and ML. Some of my notable projects include:
1. Multimodal Emotion Recognition using Facial Expressions and Voice Cues: This project aimed to enhance the hiring process by analyzing candidates' emotions during behavioral interviews. 
   - Impact: It provided real-time insights into candidates' emotional states, assisting interviewers in making more informed decisions.
   - Technologies: Streamlit for the web interface, Docker for deployment, CI/CD pipeline for continuous integration and deployment, and Microsoft Azure for cloud infrastructure.
2. Sensible Autonomous Machine using deep learning and convolutional neural networks: This project focused on developing a self-driving machine capable of navigating obstacles, following objects, and reaching destinations.
   - Impact: This project explored the potential of AI for autonomous machines, potentially impacting industries like transportation, logistics, and manufacturing.
   - Technologies: Raspberry Pi, Pi camera, ultrasonic sensor, L293D motor driver IC, TensorFlow, OpenCV, and Python.
3. Smart ATS System using Google Gemini: This project created a Smart Applicant Tracking System (ATS) that leverages Google's Gemini Pro AI model to evaluate resumes against job descriptions.
   - Impact: This project aimed to streamline the hiring process by automating resume evaluation and providing insights into candidates' skills and alignment with job requirements.
   - Technologies: Google Gemini Pro AI model, Streamlit for the web interface, and Hugging Face Spaces for deployment.

Human: What are your grades in your education?  
Assistant: Here are the details of my educational qualifications:
1. Master's Degree in Data Science from the University of Central Lancashire: Merit
2. Bachelor of Engineering in Computer Science and Engineering from Rajalakshmi Engineering College: First Class

If anyone asks about my github repositories, use the following information and answer in precise manner:
{
    "Advanced-RAG-Q-A-Chatbot-With-Chain-And-Retrievers-Using-Langchain": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
# Advanced RAG Q&A Chatbot with LangChain

This project implements a powerful Question-Answering chatbot using LangChain's Retrieval-Augmented Generation (RAG) concepts. The chatbot can process uploaded PDF documents, answer complex questions based on their content, and leverage advanced techniques like chains and retrievers.

**Key Features**

*   **PDF Document Processing:** Ability to upload and extract knowledge from PDF files.
*   **Retrieval-Augmented Generation (RAG):** Employs retrievers to access relevant information and chains to structure the question answering process.
*   **Streamlit Integration:** User-friendly web interface powered by Streamlit.
*   **LangChain:** Built on the flexible and powerful LangChain framework.
*   **OpenAI Integration (Optional):** Support for integrating OpenAI's language models like GPT-3.5.

**Prerequisites**

*   Python 3.x
*   A LangChain API Key (if specified in the code)
*   An OpenAI API Key (if you're using OpenAI models)

**Installation**

1.  Clone this repository:
    ```bash
    git clone [https://github.com/](https://github.com/)<your-username>/<your-repo-name>
    ```
2.  Navigate to the project directory:
    ```bash
    cd <your-repo-name>
    ```
3.  Create a virtual environment (recommended):
    ```bash
    python -m venv env
    env\Scripts\activate  # For Windows
    source env/bin/activate  # For Linux/macOS
    ```
4.  Install dependencies:
    ```bash
    pip install -r requirements.txt
    ```

**Usage**

1.  **Environment Variables:**
    *   Create a `.env` file in the project root.
    *   Add the following, replacing placeholders with your actual keys:
        ```
        OPENAI_API_KEY=<your_openai_api_key>
        LANGCHAIN_API_KEY=<your_langchain_api_key>
        ```
    *   Load the environment variables using the `dotenv` library (already included in the code).

2.  **Start the Application:**
    ```bash
    streamlit run app.py 
    ```

3.  **Using the Web Interface**
    *   Open `http://localhost:8501` (or the provided Streamlit URL) in your web browser.
    *   Upload a PDF file.
    *   Type your question in the text box.
    *   Click 'Submit' to get the answer.

**Customization**

*   **LLM Choice:** Modify the code to switch between OpenAI and Ollama language models.
*   **Embedding Techniques:** Experiment with other embedding providers.
*   **Streamlit Enhancements:** Add more interactive elements or styling to the web interface.

**Contributions**

This project welcomes contributions! Feel free to add features, fix bugs, or suggest improvements.

**License**

[Specify the license of your project, e.g., MIT, Apache 2.0, etc.]


================================================
File: LICENSE
================================================
                    GNU GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The GNU General Public License is a free, copyleft license for
software and other kinds of works.

  The licenses for most software and other practical works are designed
to take away your freedom to share and change the works.  By contrast,
the GNU General Public License is intended to guarantee your freedom to
share and change all versions of a program--to make sure it remains free
software for all its users.  We, the Free Software Foundation, use the
GNU General Public License for most of our software; it applies also to
any other work released this way by its authors.  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
them if you wish), that you receive source code or can get it if you
want it, that you can change the software or use pieces of it in new
free programs, and that you know you can do these things.

  To protect your rights, we need to prevent others from denying you
these rights or asking you to surrender the rights.  Therefore, you have
certain responsibilities if you distribute copies of the software, or if
you modify it: responsibilities to respect the freedom of others.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must pass on to the recipients the same
freedoms that you received.  You must make sure that they, too, receive
or can get the source code.  And you must show them these terms so they
know their rights.

  Developers that use the GNU GPL protect your rights with two steps:
(1) assert copyright on the software, and (2) offer you this License
giving you legal permission to copy, distribute and/or modify it.

  For the developers' and authors' protection, the GPL clearly explains
that there is no warranty for this free software.  For both users' and
authors' sake, the GPL requires that modified versions be marked as
changed, so that their problems will not be attributed erroneously to
authors of previous versions.

  Some devices are designed to deny users access to install or run
modified versions of the software inside them, although the manufacturer
can do so.  This is fundamentally incompatible with the aim of
protecting users' freedom to change the software.  The systematic
pattern of such abuse occurs in the area of products for individuals to
use, which is precisely where it is most unacceptable.  Therefore, we
have designed this version of the GPL to prohibit the practice for those
products.  If such problems arise substantially in other domains, we
stand ready to extend this provision to those domains in future versions
of the GPL, as needed to protect the freedom of users.

  Finally, every program is threatened constantly by software patents.
States should not allow patents to restrict development and use of
software on general-purpose computers, but in those that do, we wish to
avoid the special danger that patents applied to a free program could
make it effectively proprietary.  To prevent this, the GPL assures that
patents cannot be used to render the program non-free.

  The precise terms and conditions for copying, distribution and
modification follow.

                       TERMS AND CONDITIONS

  0. Definitions.

  'This License' refers to version 3 of the GNU General Public License.

  'Copyright' also means copyright-like laws that apply to other kinds of
works, such as semiconductor masks.

  'The Program' refers to any copyrightable work licensed under this
License.  Each licensee is addressed as 'you'.  'Licensees' and
'recipients' may be individuals or organizations.

  To 'modify' a work means to copy from or adapt all or part of the work
in a fashion requiring copyright permission, other than the making of an
exact copy.  The resulting work is called a 'modified version' of the
earlier work or a work 'based on' the earlier work.

  A 'covered work' means either the unmodified Program or a work based
on the Program.

  To 'propagate' a work means to do anything with it that, without
permission, would make you directly or secondarily liable for
infringement under applicable copyright law, except executing it on a
computer or modifying a private copy.  Propagation includes copying,
distribution (with or without modification), making available to the
public, and in some countries other activities as well.

  To 'convey' a work means any kind of propagation that enables other
parties to make or receive copies.  Mere interaction with a user through
a computer network, with no transfer of a copy, is not conveying.

  An interactive user interface displays 'Appropriate Legal Notices'
to the extent that it includes a convenient and prominently visible
feature that (1) displays an appropriate copyright notice, and (2)
tells the user that there is no warranty for the work (except to the
extent that warranties are provided), that licensees may convey the
work under this License, and how to view a copy of this License.  If
the interface presents a list of user commands or options, such as a
menu, a prominent item in the list meets this criterion.

  1. Source Code.

  The 'source code' for a work means the preferred form of the work
for making modifications to it.  'Object code' means any non-source
form of a work.

  A 'Standard Interface' means an interface that either is an official
standard defined by a recognized standards body, or, in the case of
interfaces specified for a particular programming language, one that
is widely used among developers working in that language.

  The 'System Libraries' of an executable work include anything, other
than the work as a whole, that (a) is included in the normal form of
packaging a Major Component, but which is not part of that Major
Component, and (b) serves only to enable use of the work with that
Major Component, or to implement a Standard Interface for which an
implementation is available to the public in source code form.  A
'Major Component', in this context, means a major essential component
(kernel, window system, and so on) of the specific operating system
(if any) on which the executable work runs, or a compiler used to
produce the work, or an object code interpreter used to run it.

  The 'Corresponding Source' for a work in object code form means all
the source code needed to generate, install, and (for an executable
work) run the object code and to modify the work, including scripts to
control those activities.  However, it does not include the work's
System Libraries, or general-purpose tools or generally available free
programs which are used unmodified in performing those activities but
which are not part of the work.  For example, Corresponding Source
includes interface definition files associated with source files for
the work, and the source code for shared libraries and dynamically
linked subprograms that the work is specifically designed to require,
such as by intimate data communication or control flow between those
subprograms and other parts of the work.

  The Corresponding Source need not include anything that users
can regenerate automatically from other parts of the Corresponding
Source.

  The Corresponding Source for a work in source code form is that
same work.

  2. Basic Permissions.

  All rights granted under this License are granted for the term of
copyright on the Program, and are irrevocable provided the stated
conditions are met.  This License explicitly affirms your unlimited
permission to run the unmodified Program.  The output from running a
covered work is covered by this License only if the output, given its
content, constitutes a covered work.  This License acknowledges your
rights of fair use or other equivalent, as provided by copyright law.

  You may make, run and propagate covered works that you do not
convey, without conditions so long as your license otherwise remains
in force.  You may convey covered works to others for the sole purpose
of having them make modifications exclusively for you, or provide you
with facilities for running those works, provided that you comply with
the terms of this License in conveying all material for which you do
not control copyright.  Those thus making or running the covered works
for you must do so exclusively on your behalf, under your direction
and control, on terms that prohibit them from making any copies of
your copyrighted material outside their relationship with you.

  Conveying under any other circumstances is permitted solely under
the conditions stated below.  Sublicensing is not allowed; section 10
makes it unnecessary.

  3. Protecting Users' Legal Rights From Anti-Circumvention Law.

  No covered work shall be deemed part of an effective technological
measure under any applicable law fulfilling obligations under article
11 of the WIPO copyright treaty adopted on 20 December 1996, or
similar laws prohibiting or restricting circumvention of such
measures.

  When you convey a covered work, you waive any legal power to forbid
circumvention of technological measures to the extent such circumvention
is effected by exercising rights under this License with respect to
the covered work, and you disclaim any intention to limit operation or
modification of the work as a means of enforcing, against the work's
users, your or third parties' legal rights to forbid circumvention of
technological measures.

  4. Conveying Verbatim Copies.

  You may convey verbatim copies of the Program's source code as you
receive it, in any medium, provided that you conspicuously and
appropriately publish on each copy an appropriate copyright notice;
keep intact all notices stating that this License and any
non-permissive terms added in accord with section 7 apply to the code;
keep intact all notices of the absence of any warranty; and give all
recipients a copy of this License along with the Program.

  You may charge any price or no price for each copy that you convey,
and you may offer support or warranty protection for a fee.

  5. Conveying Modified Source Versions.

  You may convey a work based on the Program, or the modifications to
produce it from the Program, in the form of source code under the
terms of section 4, provided that you also meet all of these conditions:

    a) The work must carry prominent notices stating that you modified
    it, and giving a relevant date.

    b) The work must carry prominent notices stating that it is
    released under this License and any conditions added under section
    7.  This requirement modifies the requirement in section 4 to
    'keep intact all notices'.

    c) You must license the entire work, as a whole, under this
    License to anyone who comes into possession of a copy.  This
    License will therefore apply, along with any applicable section 7
    additional terms, to the whole of the work, and all its parts,
    regardless of how they are packaged.  This License gives no
    permission to license the work in any other way, but it does not
    invalidate such permission if you have separately received it.

    d) If the work has interactive user interfaces, each must display
    Appropriate Legal Notices; however, if the Program has interactive
    interfaces that do not display Appropriate Legal Notices, your
    work need not make them do so.

  A compilation of a covered work with other separate and independent
works, which are not by their nature extensions of the covered work,
and which are not combined with it such as to form a larger program,
in or on a volume of a storage or distribution medium, is called an
'aggregate' if the compilation and its resulting copyright are not
used to limit the access or legal rights of the compilation's users
beyond what the individual works permit.  Inclusion of a covered work
in an aggregate does not cause this License to apply to the other
parts of the aggregate.

  6. Conveying Non-Source Forms.

  You may convey a covered work in object code form under the terms
of sections 4 and 5, provided that you also convey the
machine-readable Corresponding Source under the terms of this License,
in one of these ways:

    a) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by the
    Corresponding Source fixed on a durable physical medium
    customarily used for software interchange.

    b) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by a
    written offer, valid for at least three years and valid for as
    long as you offer spare parts or customer support for that product
    model, to give anyone who possesses the object code either (1) a
    copy of the Corresponding Source for all the software in the
    product that is covered by this License, on a durable physical
    medium customarily used for software interchange, for a price no
    more than your reasonable cost of physically performing this
    conveying of source, or (2) access to copy the
    Corresponding Source from a network server at no charge.

    c) Convey individual copies of the object code with a copy of the
    written offer to provide the Corresponding Source.  This
    alternative is allowed only occasionally and noncommercially, and
    only if you received the object code with such an offer, in accord
    with subsection 6b.

    d) Convey the object code by offering access from a designated
    place (gratis or for a charge), and offer equivalent access to the
    Corresponding Source in the same way through the same place at no
    further charge.  You need not require recipients to copy the
    Corresponding Source along with the object code.  If the place to
    copy the object code is a network server, the Corresponding Source
    may be on a different server (operated by you or a third party)
    that supports equivalent copying facilities, provided you maintain
    clear directions next to the object code saying where to find the
    Corresponding Source.  Regardless of what server hosts the
    Corresponding Source, you remain obligated to ensure that it is
    available for as long as needed to satisfy these requirements.

    e) Convey the object code using peer-to-peer transmission, provided
    you inform other peers where the object code and Corresponding
    Source of the work are being offered to the general public at no
    charge under subsection 6d.

  A separable portion of the object code, whose source code is excluded
from the Corresponding Source as a System Library, need not be
included in conveying the object code work.

  A 'User Product' is either (1) a 'consumer product', which means any
tangible personal property which is normally used for personal, family,
or household purposes, or (2) anything designed or sold for incorporation
into a dwelling.  In determining whether a product is a consumer product,
doubtful cases shall be resolved in favor of coverage.  For a particular
product received by a particular user, 'normally used' refers to a
typical or common use of that class of product, regardless of the status
of the particular user or of the way in which the particular user
actually uses, or expects or is expected to use, the product.  A product
is a consumer product regardless of whether the product has substantial
commercial, industrial or non-consumer uses, unless such uses represent
the only significant mode of use of the product.

  'Installation Information' for a User Product means any methods,
procedures, authorization keys, or other information required to install
and execute modified versions of a covered work in that User Product from
a modified version of its Corresponding Source.  The information must
suffice to ensure that the continued functioning of the modified object
code is in no case prevented or interfered with solely because
modification has been made.

  If you convey an object code work under this section in, or with, or
specifically for use in, a User Product, and the conveying occurs as
part of a transaction in which the right of possession and use of the
User Product is transferred to the recipient in perpetuity or for a
fixed term (regardless of how the transaction is characterized), the
Corresponding Source conveyed under this section must be accompanied
by the Installation Information.  But this requirement does not apply
if neither you nor any third party retains the ability to install
modified object code on the User Product (for example, the work has
been installed in ROM).

  The requirement to provide Installation Information does not include a
requirement to continue to provide support service, warranty, or updates
for a work that has been modified or installed by the recipient, or for
the User Product in which it has been modified or installed.  Access to a
network may be denied when the modification itself materially and
adversely affects the operation of the network or violates the rules and
protocols for communication across the network.

  Corresponding Source conveyed, and Installation Information provided,
in accord with this section must be in a format that is publicly
documented (and with an implementation available to the public in
source code form), and must require no special password or key for
unpacking, reading or copying.

  7. Additional Terms.

  'Additional permissions' are terms that supplement the terms of this
License by making exceptions from one or more of its conditions.
Additional permissions that are applicable to the entire Program shall
be treated as though they were included in this License, to the extent
that they are valid under applicable law.  If additional permissions
apply only to part of the Program, that part may be used separately
under those permissions, but the entire Program remains governed by
this License without regard to the additional permissions.

  When you convey a copy of a covered work, you may at your option
remove any additional permissions from that copy, or from any part of
it.  (Additional permissions may be written to require their own
removal in certain cases when you modify the work.)  You may place
additional permissions on material, added by you to a covered work,
for which you have or can give appropriate copyright permission.

  Notwithstanding any other provision of this License, for material you
add to a covered work, you may (if authorized by the copyright holders of
that material) supplement the terms of this License with terms:

    a) Disclaiming warranty or limiting liability differently from the
    terms of sections 15 and 16 of this License; or

    b) Requiring preservation of specified reasonable legal notices or
    author attributions in that material or in the Appropriate Legal
    Notices displayed by works containing it; or

    c) Prohibiting misrepresentation of the origin of that material, or
    requiring that modified versions of such material be marked in
    reasonable ways as different from the original version; or

    d) Limiting the use for publicity purposes of names of licensors or
    authors of the material; or

    e) Declining to grant rights under trademark law for use of some
    trade names, trademarks, or service marks; or

    f) Requiring indemnification of licensors and authors of that
    material by anyone who conveys the material (or modified versions of
    it) with contractual assumptions of liability to the recipient, for
    any liability that these contractual assumptions directly impose on
    those licensors and authors.

  All other non-permissive additional terms are considered 'further
restrictions' within the meaning of section 10.  If the Program as you
received it, or any part of it, contains a notice stating that it is
governed by this License along with a term that is a further
restriction, you may remove that term.  If a license document contains
a further restriction but permits relicensing or conveying under this
License, you may add to a covered work material governed by the terms
of that license document, provided that the further restriction does
not survive such relicensing or conveying.

  If you add terms to a covered work in accord with this section, you
must place, in the relevant source files, a statement of the
additional terms that apply to those files, or a notice indicating
where to find the applicable terms.

  Additional terms, permissive or non-permissive, may be stated in the
form of a separately written license, or stated as exceptions;
the above requirements apply either way.

  8. Termination.

  You may not propagate or modify a covered work except as expressly
provided under this License.  Any attempt otherwise to propagate or
modify it is void, and will automatically terminate your rights under
this License (including any patent licenses granted under the third
paragraph of section 11).

  However, if you cease all violation of this License, then your
license from a particular copyright holder is reinstated (a)
provisionally, unless and until the copyright holder explicitly and
finally terminates your license, and (b) permanently, if the copyright
holder fails to notify you of the violation by some reasonable means
prior to 60 days after the cessation.

  Moreover, your license from a particular copyright holder is
reinstated permanently if the copyright holder notifies you of the
violation by some reasonable means, this is the first time you have
received notice of violation of this License (for any work) from that
copyright holder, and you cure the violation prior to 30 days after
your receipt of the notice.

  Termination of your rights under this section does not terminate the
licenses of parties who have received copies or rights from you under
this License.  If your rights have been terminated and not permanently
reinstated, you do not qualify to receive new licenses for the same
material under section 10.

  9. Acceptance Not Required for Having Copies.

  You are not required to accept this License in order to receive or
run a copy of the Program.  Ancillary propagation of a covered work
occurring solely as a consequence of using peer-to-peer transmission
to receive a copy likewise does not require acceptance.  However,
nothing other than this License grants you permission to propagate or
modify any covered work.  These actions infringe copyright if you do
not accept this License.  Therefore, by modifying or propagating a
covered work, you indicate your acceptance of this License to do so.

  10. Automatic Licensing of Downstream Recipients.

  Each time you convey a covered work, the recipient automatically
receives a license from the original licensors, to run, modify and
propagate that work, subject to this License.  You are not responsible
for enforcing compliance by third parties with this License.

  An 'entity transaction' is a transaction transferring control of an
organization, or substantially all assets of one, or subdividing an
organization, or merging organizations.  If propagation of a covered
work results from an entity transaction, each party to that
transaction who receives a copy of the work also receives whatever
licenses to the work the party's predecessor in interest had or could
give under the previous paragraph, plus a right to possession of the
Corresponding Source of the work from the predecessor in interest, if
the predecessor has it or can get it with reasonable efforts.

  You may not impose any further restrictions on the exercise of the
rights granted or affirmed under this License.  For example, you may
not impose a license fee, royalty, or other charge for exercise of
rights granted under this License, and you may not initiate litigation
(including a cross-claim or counterclaim in a lawsuit) alleging that
any patent claim is infringed by making, using, selling, offering for
sale, or importing the Program or any portion of it.

  11. Patents.

  A 'contributor' is a copyright holder who authorizes use under this
License of the Program or a work on which the Program is based.  The
work thus licensed is called the contributor's 'contributor version'.

  A contributor's 'essential patent claims' are all patent claims
owned or controlled by the contributor, whether already acquired or
hereafter acquired, that would be infringed by some manner, permitted
by this License, of making, using, or selling its contributor version,
but do not include claims that would be infringed only as a
consequence of further modification of the contributor version.  For
purposes of this definition, 'control' includes the right to grant
patent sublicenses in a manner consistent with the requirements of
this License.

  Each contributor grants you a non-exclusive, worldwide, royalty-free
patent license under the contributor's essential patent claims, to
make, use, sell, offer for sale, import and otherwise run, modify and
propagate the contents of its contributor version.

  In the following three paragraphs, a 'patent license' is any express
agreement or commitment, however denominated, not to enforce a patent
(such as an express permission to practice a patent or covenant not to
sue for patent infringement).  To 'grant' such a patent license to a
party means to make such an agreement or commitment not to enforce a
patent against the party.

  If you convey a covered work, knowingly relying on a patent license,
and the Corresponding Source of the work is not available for anyone
to copy, free of charge and under the terms of this License, through a
publicly available network server or other readily accessible means,
then you must either (1) cause the Corresponding Source to be so
available, or (2) arrange to deprive yourself of the benefit of the
patent license for this particular work, or (3) arrange, in a manner
consistent with the requirements of this License, to extend the patent
license to downstream recipients.  'Knowingly relying' means you have
actual knowledge that, but for the patent license, your conveying the
covered work in a country, or your recipient's use of the covered work
in a country, would infringe one or more identifiable patents in that
country that you have reason to believe are valid.

  If, pursuant to or in connection with a single transaction or
arrangement, you convey, or propagate by procuring conveyance of, a
covered work, and grant a patent license to some of the parties
receiving the covered work authorizing them to use, propagate, modify
or convey a specific copy of the covered work, then the patent license
you grant is automatically extended to all recipients of the covered
work and works based on it.

  A patent license is 'discriminatory' if it does not include within
the scope of its coverage, prohibits the exercise of, or is
conditioned on the non-exercise of one or more of the rights that are
specifically granted under this License.  You may not convey a covered
work if you are a party to an arrangement with a third party that is
in the business of distributing software, under which you make payment
to the third party based on the extent of your activity of conveying
the work, and under which the third party grants, to any of the
parties who would receive the covered work from you, a discriminatory
patent license (a) in connection with copies of the covered work
conveyed by you (or copies made from those copies), or (b) primarily
for and in connection with specific products or compilations that
contain the covered work, unless you entered into that arrangement,
or that patent license was granted, prior to 28 March 2007.

  Nothing in this License shall be construed as excluding or limiting
any implied license or other defenses to infringement that may
otherwise be available to you under applicable patent law.

  12. No Surrender of Others' Freedom.

  If conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot convey a
covered work so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you may
not convey it at all.  For example, if you agree to terms that obligate you
to collect a royalty for further conveying from those to whom you convey
the Program, the only way you could satisfy both those terms and this
License would be to refrain entirely from conveying the Program.

  13. Use with the GNU Affero General Public License.

  Notwithstanding any other provision of this License, you have
permission to link or combine any covered work with a work licensed
under version 3 of the GNU Affero General Public License into a single
combined work, and to convey the resulting work.  The terms of this
License will continue to apply to the part which is the covered work,
but the special requirements of the GNU Affero General Public License,
section 13, concerning interaction through a network will apply to the
combination as such.

  14. Revised Versions of this License.

  The Free Software Foundation may publish revised and/or new versions of
the GNU General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

  Each version is given a distinguishing version number.  If the
Program specifies that a certain numbered version of the GNU General
Public License 'or any later version' applies to it, you have the
option of following the terms and conditions either of that numbered
version or of any later version published by the Free Software
Foundation.  If the Program does not specify a version number of the
GNU General Public License, you may choose any version ever published
by the Free Software Foundation.

  If the Program specifies that a proxy can decide which future
versions of the GNU General Public License can be used, that proxy's
public statement of acceptance of a version permanently authorizes you
to choose that version for the Program.

  Later license versions may give you additional or different
permissions.  However, no additional obligations are imposed on any
author or copyright holder as a result of your choosing to follow a
later version.

  15. Disclaimer of Warranty.

  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM 'AS IS' WITHOUT WARRANTY
OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

  16. Limitation of Liability.

  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
SUCH DAMAGES.

  17. Interpretation of Sections 15 and 16.

  If the disclaimer of warranty and limitation of liability provided
above cannot be given local legal effect according to their terms,
reviewing courts shall apply local law that most closely approximates
an absolute waiver of all civil liability in connection with the
Program, unless a warranty or assumption of liability accompanies a
copy of the Program in return for a fee.

                     END OF TERMS AND CONDITIONS

            How to Apply These Terms to Your New Programs

  If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

  To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
state the exclusion of warranty; and each file should have at least
the 'copyright' line and a pointer to where the full notice is found.

    <one line to give the program's name and a brief idea of what it does.>
    Copyright (C) <year>  <name of author>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

Also add information on how to contact you by electronic and paper mail.

  If the program does terminal interaction, make it output a short
notice like this when it starts in an interactive mode:

    <program>  Copyright (C) <year>  <name of author>
    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
    This is free software, and you are welcome to redistribute it
    under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, your program's commands
might be different; for a GUI interface, you would use an 'about box'.

  You should also get your employer (if you work as a programmer) or school,
if any, to sign a 'copyright disclaimer' for the program, if necessary.
For more information on this, and how to apply and follow the GNU GPL, see
<https://www.gnu.org/licenses/>.

  The GNU General Public License does not permit incorporating your program
into proprietary programs.  If your program is a subroutine library, you
may consider it more useful to permit linking proprietary applications with
the library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.  But first, please read
<https://www.gnu.org/licenses/why-not-lgpl.html>.


================================================
File: requirements.txt
================================================
langchain_openai 
langchain_core
python-dotenv
streamlit
langchain_community
langserve
fastapi
uvicorn
sse_starlette
bs4
pypdf
chromadb
faiss-cpu
PyPDF2

================================================
File: api/app.py
================================================
from fastapi import FastAPI
from langchain.prompts import ChatPromptTemplate
from langchain.chat_models import ChatOpenAI
from langserve import add_routes
import uvicorn
import os
from langchain_community.llms import Ollama
from dotenv import load_dotenv

load_dotenv()

os.environ['OPENAI_API_KEY']=os.getenv('OPENAI_API_KEY')

app=FastAPI(
    title='Langchain Server',
    version='1.0',
    decsription='A simple API Server'

)

add_routes(
    app,
    ChatOpenAI(),
    path='/openai'
)
model=ChatOpenAI()
##ollama llama2
llm=Ollama(model='llama2')

prompt1=ChatPromptTemplate.from_template('Write me an essay about {topic} with 100 words')
prompt2=ChatPromptTemplate.from_template('Write me an poem about {topic} for a 5 years child with 100 words')

add_routes(
    app,
    prompt1|model,
    path='/essay'


)

add_routes(
    app,
    prompt2|llm,
    path='/poem'


)


if __name__=='__main__':
    uvicorn.run(app,host='localhost',port=8000)



================================================
File: api/client.py
================================================
import requests
import streamlit as st

def get_openai_response(input_text):
    response=requests.post('http://localhost:8000/essay/invoke',
    json={'input':{'topic':input_text}})

    return response.json()['output']['content']

def get_ollama_response(input_text):
    response=requests.post(
    'http://localhost:8000/poem/invoke',
    json={'input':{'topic':input_text}})

    return response.json()['output']

    ## streamlit framework

st.title('Langchain Demo With LLAMA2 API')
input_text=st.text_input('Write an essay on')
input_text1=st.text_input('Write a poem on')

if input_text:
    st.write(get_openai_response(input_text))

if input_text1:
    st.write(get_ollama_response(input_text1))


================================================
File: chatbot/app.py
================================================
from langchain_openai import ChatOpenAI
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser

import streamlit as st
import os
from dotenv import load_dotenv

os.environ['OPENAI_API_KEY']=os.getenv('OPENAI_API_KEY')
## Langmith tracking
os.environ['LANGCHAIN_TRACING_V2']='true'
os.environ['LANGCHAIN_API_KEY']=os.getenv('LANGCHAIN_API_KEY')

## Prompt Template

prompt=ChatPromptTemplate.from_messages(
    [
        ('system','You are a helpful assistant. Please response to the user queries'),
        ('user','Question:{question}')
    ]
)

## streamlit framework

st.title('Langchain Demo With OPENAI API')
input_text=st.text_input('Search the topic u want')

# openAI LLm 
llm=ChatOpenAI(model='gpt-3.5-turbo')
output_parser=StrOutputParser()
chain=prompt|llm|output_parser

if input_text:
    st.write(chain.invoke({'question':input_text}))

================================================
File: chatbot/localama.py
================================================
from langchain_openai import ChatOpenAI
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser
from langchain_community.llms import Ollama
import streamlit as st
import os
from dotenv import load_dotenv

load_dotenv()

os.environ['LANGCHAIN_TRACING_V2']='true'
os.environ['LANGCHAIN_API_KEY']=os.getenv('LANGCHAIN_API_KEY')

## Prompt Template

prompt=ChatPromptTemplate.from_messages(
    [
        ('system','You are a helpful assistant. Please response to the user queries'),
        ('user','Question:{question}')
    ]
)
## streamlit framework

st.title('Langchain Demo With LLAMA2 API')
input_text=st.text_input('Search the topic u want')

# ollama LLAma2 LLm 
llm=Ollama(model='llama2')
output_parser=StrOutputParser()
chain=prompt|llm|output_parser

if input_text:
    st.write(chain.invoke({'question':input_text}))

================================================
File: rag/speech.txt
================================================
The world must be made safe for democracy. Its peace must be planted upon the tested foundations of political liberty. We have no selfish ends to serve. We desire no conquest, no dominion. We seek no indemnities for ourselves, no material compensation for the sacrifices we shall freely make. We are but one of the champions of the rights of mankind. We shall be satisfied when those rights have been made as secure as the faith and the freedom of nations can make them.

Just because we fight without rancor and without selfish object, seeking nothing for ourselves but what we shall wish to share with all free peoples, we shall, I feel confident, conduct our operations as belligerents without passion and ourselves observe with proud punctilio the principles of right and of fair play we profess to be fighting for.

…

It will be all the easier for us to conduct ourselves as belligerents in a high spirit of right and fairness because we act without animus, not in enmity toward a people or with the desire to bring any injury or disadvantage upon them, but only in armed opposition to an irresponsible government which has thrown aside all considerations of humanity and of right and is running amuck. We are, let me say again, the sincere friends of the German people, and shall desire nothing so much as the early reestablishment of intimate relations of mutual advantage between us—however hard it may be for them, for the time being, to believe that this is spoken from our hearts.

We have borne with their present government through all these bitter months because of that friendship—exercising a patience and forbearance which would otherwise have been impossible. We shall, happily, still have an opportunity to prove that friendship in our daily attitude and actions toward the millions of men and women of German birth and native sympathy who live among us and share our life, and we shall be proud to prove it toward all who are in fact loyal to their neighbors and to the government in the hour of test. They are, most of them, as true and loyal Americans as if they had never known any other fealty or allegiance. They will be prompt to stand with us in rebuking and restraining the few who may be of a different mind and purpose. If there should be disloyalty, it will be dealt with with a firm hand of stern repression; but, if it lifts its head at all, it will lift it only here and there and without countenance except from a lawless and malignant few.

It is a distressing and oppressive duty, gentlemen of the Congress, which I have performed in thus addressing you. There are, it may be, many months of fiery trial and sacrifice ahead of us. It is a fearful thing to lead this great peaceful people into war, into the most terrible and disastrous of all wars, civilization itself seeming to be in the balance. But the right is more precious than peace, and we shall fight for the things which we have always carried nearest our hearts—for democracy, for the right of those who submit to authority to have a voice in their own governments, for the rights and liberties of small nations, for a universal dominion of right by such a concert of free peoples as shall bring peace and safety to all nations and make the world itself at last free.

To such a task we can dedicate our lives and our fortunes, everything that we are and everything that we have, with the pride of those who know that the day has come when America is privileged to spend her blood and her might for the principles that gave her birth and happiness and the peace which she has treasured. God helping her, she can do no other.

"
    },
    "Chat_Groq_Document_Q_A": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
## Deployed Link
Document Q&A app is Deployed And Available [Here](https://huggingface.co/spaces/Parthiban97/Chat_Groq_Document_Q_A)

## Screenshots
![chat_groq_1](https://github.com/Parthiban-R-3997/Smart-ATS-System-Using-Google-Gemini/assets/26496805/6125958f-93ac-4399-aa86-55a9f2613801)
![chat_groq_5](https://github.com/Parthiban-R-3997/Smart-ATS-System-Using-Google-Gemini/assets/26496805/c0fc5328-cad2-4e13-9b61-5323fb653305)
![chat_groq_6](https://github.com/Parthiban-R-3997/Smart-ATS-System-Using-Google-Gemini/assets/26496805/574bd55a-0726-48b3-aff7-e6d9ddfd874c)

# Chat Groq Document Q&A

This Streamlit web application allows you to upload PDF documents, embed them using Google's Generative AI Embeddings, and perform question-answering based on the uploaded documents. The app utilizes the powerful Groq language model and its efficient inference engine to provide accurate and relevant answers to your queries. The application follows the RAG (Retrieval-Augmented Generation) approach, which combines the strengths of retrieval systems and generative language models.

## Features

- **PDF Document Upload**: Upload multiple PDF files to create a knowledge base.
- **Document Embedding**: Leverage Google's Generative AI Embeddings to embed the uploaded PDF documents.
- **Question Answering**: Ask questions related to the uploaded documents, and receive precise answers powered by the Groq's LPU inference engine.
- **Custom Prompt Templates**: Customize the prompt template for question-answering to suit your specific needs.
- **Model Selection**: Choose from a variety of available Groq open source models, including `llama3-8b-8192`, `llama3-70b-8192`, `mixtral-8x7b-32768`, and `gemma-7b-it`.
- **Document Similarity Search**: Explore relevant document chunks that match the provided question.
- **Response Time Tracking**: Monitor the response time for each query.

## RAG (Retrieval-Augmented Generation) Approach

The application follows the RAG approach, which combines the strengths of retrieval systems and generative language models. Here's how it works:

- **Retrieval**: The application embeds the uploaded PDF documents using Google's Generative AI Embeddings and stores them in a vector store (FAISS). When a user asks a question, the relevant document chunks are retrieved from the vector store based on their similarity to the question.

- **Augmentation**: The retrieved document chunks are combined and provided as context to the Groq language model. This augments the language model's knowledge with relevant information from the uploaded documents.

- **Generation**: The Groq language model uses the provided context and the question to generate a precise and relevant answer. The language model's generative capabilities allow it to synthesize information from the retrieved document chunks and produce a coherent response.

The RAG approach offers several advantages:

- **Scalability**: By leveraging a retrieval system, the application can handle large knowledge bases efficiently, allowing users to query information from extensive document collections.
- **Contextual Understanding**: The language model can better understand the context of the question and provide more accurate and nuanced answers by using the relevant document chunks as context.
- **Knowledge Grounding**: The generated answers are grounded in the factual information present in the uploaded documents, ensuring the reliability and trustworthiness of the responses.

## Advantages of Groq LPU Inference Engine

- **High Performance**: Groq's LP (Learning Processor) Inference Engine is designed to deliver exceptional performance for large language models, enabling fast and efficient question answering.
- **Energy Efficiency**: The LP Inference Engine is optimized for energy efficiency, making it suitable for deployment on various devices and environments.
- **Scalability**: Groq's architecture allows for seamless scaling of language models, ensuring that the application can handle increasing demands and larger knowledge bases.
- **Low Latency**: The LP Inference Engine provides low-latency inference, ensuring quick response times for user queries.

## Langsmith Integration

This application integrates with Langsmith, a platform for monitoring and managing large language model deployments. Langsmith provides the following benefits:

- **Log Monitoring**: Monitor and analyze logs generated by the application, making it easier to debug and troubleshoot issues.
- **Cost Optimization**: Langsmith helps optimize the cost of running language models by providing insights into usage patterns and suggesting ways to reduce costs.
- **Performance Monitoring**: Track the performance of the application and identify potential bottlenecks or areas for improvement.



================================================
File: app.py
================================================
import streamlit as st
import os
import tempfile
import time
from langchain_groq import ChatGroq
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.chains.combine_documents import create_stuff_documents_chain
from langchain_core.prompts import ChatPromptTemplate
from langchain.chains import create_retrieval_chain
from langchain_community.vectorstores import FAISS
from langchain_community.document_loaders import PyPDFLoader
from langchain_google_genai import GoogleGenerativeAIEmbeddings
from dotenv import load_dotenv


load_dotenv()




st.set_page_config(page_title='Chat with PDFs', page_icon=':books:')

st.title('Chat Groq Document Q&A')

# Custom prompt template
custom_context_input = '''
<context>
{context}
<context>
Questions:{input}
'''

# Default prompt template
default_prompt_template = '''
Answer the questions based on the provided context only.
Please provide the most accurate response based on the question
<context>
{context}
<context>
Questions:{input}
'''

def vector_embedding(pdf_files):
    if 'vectors' not in st.session_state:
        st.session_state.embeddings = GoogleGenerativeAIEmbeddings(model='models/embedding-001')

    documents = []
    for pdf_file in pdf_files:
        # Save the uploaded file to a temporary location
        with tempfile.NamedTemporaryFile(delete=False, suffix='.pdf') as tmp_file:
            tmp_file.write(pdf_file.getvalue())
            tmp_file_path = tmp_file.name

        # Load the PDF from the temporary file path
        loader = PyPDFLoader(tmp_file_path)
        documents.extend(loader.load()) ## append the files

        # Remove the temporary file
        os.remove(tmp_file_path)

        st.session_state.text_splitter = RecursiveCharacterTextSplitter(chunk_size=10000, chunk_overlap=1000)
        st.session_state.final_documents = st.session_state.text_splitter.split_documents(documents)
        st.session_state.vectors = FAISS.from_documents(st.session_state.final_documents, st.session_state.embeddings)

    st.success('Document embedding is completed!')


# Define model options
model_options = [
    'llama-3.1-70b-versatile',
    'llama-3.1-8b-instant',
    'llama3-8b-8192',
    'llama3-70b-8192',
    'mixtral-8x7b-32768',
    'gemma2-9b-it'
]

# Sidebar elements
with st.sidebar:
    st.header('Configuration')
    st.markdown('Enter your API keys below:')
    groq_api_key = st.text_input('Enter your GROQ API Key', type='password', help='Get your API key from [GROQ Console](https://console.groq.com/keys)')
    google_api_key = st.text_input('Enter your Google API Key', type='password', help='Get your API key from [Google AI Studio](https://aistudio.google.com/app/apikey)')
    langsmith_api_key = st.text_input('Enter your Langsmith API Key', type='password',placeholder='For Tracing the flows (Optional!)', help='Get your API key from [Langsmith Console](https://smith.langchain.com/o/2a79134f-7562-5c92-a437-96b080547a1e/settings)')
    selected_model = st.selectbox('Select any Groq Model', model_options)
    os.environ['GOOGLE_API_KEY']=str(google_api_key)
    os.environ['LANGCHAIN_API_KEY']=str(langsmith_api_key)
    # Langmith tracking
    os.environ['LANGCHAIN_TRACING_V2'] = 'true'
    st.markdown('Upload your PDF files:')
    uploaded_files = st.file_uploader('Choose PDF files', accept_multiple_files=True, type='pdf')


    # Custom prompt text areas
    custom_prompt_template = st.text_area('Custom Prompt Template', placeholder='Enter your custom prompt here to set the tone of the message...(Optional)')

    if st.button('Start Document Embedding'):
        if uploaded_files:
            vector_embedding(uploaded_files)
            st.success('Vector Store DB is Ready')
        else:
            st.warning('Please upload at least one PDF file.')

# Main section for question input and results
prompt1 = st.text_area('Enter Your Question From Documents')

if prompt1 and 'vectors' in st.session_state:
    if custom_prompt_template:
        custom_prompt = custom_prompt_template + custom_context_input
        prompt = ChatPromptTemplate.from_template(custom_prompt)
    else:
        prompt = ChatPromptTemplate.from_template(default_prompt_template)
    
    llm = ChatGroq(groq_api_key=groq_api_key, model_name=selected_model)
    document_chain = create_stuff_documents_chain(llm, prompt)
    retriever = st.session_state.vectors.as_retriever()
    retrieval_chain = create_retrieval_chain(retriever, document_chain)
    start = time.process_time()
    response = retrieval_chain.invoke({'input': prompt1})
    st.write('Response time:', time.process_time() - start)
    st.write(response['answer'])

    # With a Streamlit expander
    with st.expander('Document Similarity Search'):
        # Find the relevant chunks
        for i, doc in enumerate(response['context']):
            st.write(doc.page_content)
            st.write('--------------------------------') 


================================================
File: requirements.txt
================================================
faiss-cpu
groq
PyPDF2
langchain_google_genai
langchain_groq
langchain
streamlit
langchain_community
python-dotenv
pypdf




"
    },
    "Chat_With_IPYNB_Files": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
# Chat Jupyter Notebooks files using Google Gemini

This Streamlit web application allows you to upload Jupyter Notebook files (.ipynb), embed them using Google's Generative AI Embeddings, and perform question-answering based on the uploaded notebooks. The app utilizes the powerful Gemini language model and its efficient inference engine to provide accurate and relevant answers to your queries. The application follows the RAG (Retrieval-Augmented Generation) approach, which combines the strengths of retrieval systems and generative language models.

## Deployed Link

Chat with .IPYNB files app is Deployed And Available [Here](https://huggingface.co/spaces/Parthiban97/Chat_With_IPYNB_Files)

## Screenshots

![Capture](https://github.com/Parthiban-R-3997/Chat_Groq_Document_Q_A/assets/26496805/e7ccdc0a-82e5-4ef2-92b5-b03dc24d519c)


## Features

- **Notebook File Upload**: Upload multiple Jupyter Notebook files (.ipynb) to create a knowledge base.
- **Document Embedding**: Leverage Google's Generative AI Embeddings to embed the uploaded notebook documents.
- **Question Answering**: Ask questions related to the uploaded notebooks, and receive precise answers powered by the Gemini model.
- **Custom Prompt Templates**: Customize the prompt template for question-answering to suit your specific needs.
- **Model Selection**: Choose from a variety of available Gemini models, including `models/gemini-1.0-pro`, `models/gemini-1.0-pro-001`, and more.
- **Document Similarity Search**: Explore relevant document chunks that match the provided question.
- **Response Time Tracking**: Monitor the response time for each query.

## RAG (Retrieval-Augmented Generation) Approach

The application follows the RAG approach, which combines the strengths of retrieval systems and generative language models. Here's how it works:

- **Retrieval**: The application embeds the uploaded notebook documents using Google's Generative AI Embeddings and stores them in a vector store (FAISS). When a user asks a question, the relevant document chunks are retrieved from the vector store based on their similarity to the question.
- **Augmentation**: The retrieved document chunks are combined and provided as context to the Gemini language model. This augments the language model's knowledge with relevant information from the uploaded documents.
- **Generation**: The Gemini language model uses the provided context and the question to generate a precise and relevant answer. The language model's generative capabilities allow it to synthesize information from the retrieved document chunks and produce a coherent response.

The RAG approach offers several advantages:

- **Scalability**: By leveraging a retrieval system, the application can handle large knowledge bases efficiently, allowing users to query information from extensive document collections.
- **Contextual Understanding**: The language model can better understand the context of the question and provide more accurate and nuanced answers by using the relevant document chunks as context.
- **Knowledge Grounding**: The generated answers are grounded in the factual information present in the uploaded documents, ensuring the reliability and trustworthiness of the responses.

## Advantages of Gemini Model

- **High Performance**: The Gemini model is designed to deliver exceptional performance for large language models, enabling fast and efficient question answering.
- **Energy Efficiency**: The model is optimized for energy efficiency, making it suitable for deployment on various devices and environments.
- **Scalability**: Gemini's architecture allows for seamless scaling of language models, ensuring that the application can handle increasing demands and larger knowledge bases.
- **Low Latency**: The model provides low-latency inference, ensuring quick response times for user queries.






================================================
File: app.py
================================================
import streamlit as st
import os
import tempfile
import time
import nbformat
from langchain_google_genai import ChatGoogleGenerativeAI
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.chains.combine_documents import create_stuff_documents_chain
from langchain_core.prompts import ChatPromptTemplate
from langchain.chains import create_retrieval_chain
from langchain_community.vectorstores import FAISS
from langchain_google_genai import GoogleGenerativeAIEmbeddings
from dotenv import load_dotenv
from langchain_core.documents import Document

load_dotenv()

st.set_page_config(page_title='Chat with Notebooks', page_icon=':books:')

st.title('Chat Gemini Document Q&A with Jupyter Notebooks')

# Custom prompt template
custom_context_input = '''
<context>
{context}
</context>
Questions:{input}
'''

# Default prompt template
default_prompt_template = '''
Answer the questions based on the provided context only.
Please provide the most accurate response based on the question
<context>
{context}
</context>
Questions:{input}
'''

def load_notebook(file_path):
    with open(file_path, 'r', encoding='utf-8') as f:
        notebook = nbformat.read(f, as_version=4)
    return notebook

def extract_text_from_notebook(notebook):
    text = []
    for cell in notebook.cells:
        if cell.cell_type == 'markdown':
            text.append(cell.source)
        elif cell.cell_type == 'code':
            text.append(cell.source)
            if 'outputs' in cell:
                for output in cell.outputs:
                    if output.output_type == 'stream':
                        text.append(output.text)
                    elif output.output_type == 'execute_result' and 'data' in output:
                        text.append(output.data.get('text/plain', ''))
    return '\n'.join(text)

def vector_embedding(ipynb_files):
    if 'vectors' not in st.session_state:
        st.session_state.embeddings = GoogleGenerativeAIEmbeddings(model='models/embedding-001')

    documents = []
    for ipynb_file in ipynb_files:
        # Save the uploaded file to a temporary location
        with tempfile.NamedTemporaryFile(delete=False, suffix='.ipynb') as tmp_file:
            tmp_file.write(ipynb_file.getvalue())
            tmp_file_path = tmp_file.name

        # Load the .ipynb file from the temporary file path
        notebook = load_notebook(tmp_file_path)
        text = extract_text_from_notebook(notebook)
        # Create a Document object instead of using plain text
        documents.append(Document(page_content=text))

        # Remove the temporary file
        os.remove(tmp_file_path)

    # Ensure documents are properly segmented or chunked
    st.session_state.text_splitter = RecursiveCharacterTextSplitter(chunk_size=10000, chunk_overlap=1000)
    try:
        segmented_documents = st.session_state.text_splitter.split_documents(documents)
        st.session_state.final_documents = segmented_documents

        if st.session_state.final_documents:
            # Embedding using FAISS
            st.session_state.vectors = FAISS.from_documents(st.session_state.final_documents, st.session_state.embeddings)
            st.success('Document embedding is completed!')
        else:
            st.warning('No documents found to embed.')
    
    except Exception as e:
        st.error(f'Error splitting or embedding documents: {str(e)}')
        st.session_state.final_documents = []  # Handle empty documents or retry

# Define model options for Gemini
model_options = [
  'gemini-1.5-flash',
  'gemini-1.5-pro',
  'gemini-1.0-pro'
]

# Sidebar elements
with st.sidebar:
    st.header('Configuration')
    st.markdown('Enter your API key below:')
    google_api_key = st.text_input('Enter your Google API Key', type='password', help='Get your API key from [Google AI Studio](https://aistudio.google.com/app/apikey)')
    selected_model = st.selectbox('Select Gemini Model', model_options)
    os.environ['GOOGLE_API_KEY'] = str(google_api_key)
    
    st.markdown('Upload your .ipynb files:')
    uploaded_files = st.file_uploader('Choose .ipynb files', accept_multiple_files=True, type='ipynb')

    # Custom prompt text areas
    custom_prompt_template = st.text_area('Custom Prompt Template', placeholder='Enter your custom prompt here...(optional)')

    if st.button('Start Document Embedding'):
        if uploaded_files:
            vector_embedding(uploaded_files)
            st.success('Vector Store DB is Ready')
        else:
            st.warning('Please upload at least one .ipynb file.')

# Main section for question input and results
prompt1 = st.text_area('Enter Your Question From Documents')

if prompt1 and 'vectors' in st.session_state:
    if custom_prompt_template:
        custom_prompt = custom_prompt_template + custom_context_input
        prompt = ChatPromptTemplate.from_template(custom_prompt)
    else:
        prompt = ChatPromptTemplate.from_template(default_prompt_template)
    
    llm = ChatGoogleGenerativeAI(model=selected_model, temperature=0.3)
    document_chain = create_stuff_documents_chain(llm, prompt)
    retriever = st.session_state.vectors.as_retriever()
    retrieval_chain = create_retrieval_chain(retriever, document_chain)
    start = time.process_time()
    response = retrieval_chain.invoke({'input': prompt1})
    st.write('Response time:', time.process_time() - start)
    st.write(response['answer'])

    # With a Streamlit expander
    with st.expander('Document Similarity Search'):
        # Find the relevant chunks
        for i, doc in enumerate(response['context']):
            st.write(doc.page_content)
            st.write('--------------------------------')

================================================
File: requirements.txt
================================================
streamlit 
langchain 
openai 
nbformat 
faiss-cpu 
langchain-google-genai
langchain-groq
langchain_community
python-dotenv

"
    },
    "Chat_With_Multiple_Data_Sources": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
# Chat_With_Multiple_Data_Sources

This Streamlit web application leverages LangChain to provide an advanced query assistant that integrates multiple tools and data sources. Users can query information from Wikipedia, arXiv, and custom URLs. The application also supports custom prompts and maintains conversation history.


## Deployed Link
Document Q&A app is Deployed And Available [Here](https://huggingface.co/spaces/Parthiban97/Chat_With_Multiple_Data_Sources)


## Screenshots
![data3_2](https://github.com/Parthiban-R-3997/Chat_Groq_Document_Q_A/assets/26496805/4e7b3d1b-c660-4340-88e0-3cf91c1c8d57)
![data3_3](https://github.com/Parthiban-R-3997/Chat_Groq_Document_Q_A/assets/26496805/d5ee0b91-8121-48ea-9fa4-6aff0bc68ae9)
![data3_1](https://github.com/Parthiban-R-3997/Chat_Groq_Document_Q_A/assets/26496805/0aba916f-d173-4f9a-900d-a2328992d44c)


## Features
- **Integration with Wikipedia and arXiv**: Retrieve information directly from Wikipedia and arXiv.
- **Custom URL Support**: Load documents from custom URLs seperated by commas (,) and search within them.
- **Conversation History**: Maintains a conversation history using LangChain's ConversationBufferMemory.
- **Custom Prompts**: Users can define their custom prompts to tailor the assistant's responses.

### LangChain Toolkits
LangChain toolkits provide a set of utilities and pre-built components that simplify the interaction with language models:

- **Document Loaders**: Tools to load documents from various sources. For example, `WebBaseLoader` allows loading web pages and splitting them into manageable chunks.
- **Text Splitters**: Components like `RecursiveCharacterTextSplitter` help divide documents into chunks of a specified size, optimizing them for processing.
- **Embeddings**: `OpenAIEmbeddings` generate vector representations of text, useful for similarity searches and information retrieval.
- **Vector Stores**: `FAISS` is used to store and query vector embeddings efficiently.

### LangChain Agents
LangChain agents are orchestrators that manage the interaction between the language model and various tools:

- **create_openai_tools_agent**: This function creates an agent that can interact with multiple tools using an OpenAI language model. The agent is configured with a prompt template and can utilize tools like WikipediaQueryRun, ArxivQueryRun, and custom URL retrievers.
- **AgentExecutor**: Manages the execution of the agent, handling user inputs and generating responses.

## Components

### Main Components
1. **ChatOpenAI**: The main language model used for generating responses.
2. **ConversationBufferMemory**: Stores the conversation history, allowing the agent to maintain context across multiple interactions.
3. **WikipediaQueryRun**: A tool for retrieving information from Wikipedia.
4. **ArxivQueryRun**: A tool for retrieving information from arXiv.
5. **WebBaseLoader**: Loads documents from specified URLs.
6. **FAISS**: Vector store for managing document embeddings.
7. **ChatPromptTemplate**: Defines the structure of prompts used by the language model.

### Configuration
The application allows users to configure the following settings via the sidebar:

- **OpenAI API Key**: For accessing OpenAI's language models.
- **Custom URLs**: Users can provide URLs to load and search documents.
- **Custom Prompts**: Define custom prompt templates for tailored responses.

### Usage
Users can enter their queries in the main input area. The agent processes the query using the configured tools and returns the response. The conversation history is displayed, showing interactions between the user and the assistant.

### Memory Management
The application uses `ConversationBufferMemory` to retain the conversation history, ensuring context is preserved across multiple user queries. This memory is updated with each interaction, providing a coherent and continuous conversation experience.

## Example Usage
1. Enter your OpenAI API Key in the sidebar.
2. Optionally, provide URLs to load custom documents.
3. Define custom prompts if needed.
4. Click 'Load Tools' to initialize the agent.
5. Enter your query in the main input area and receive a response based on the integrated tools and data sources.


================================================
File: LICENSE
================================================
                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      'License' shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      'Licensor' shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      'Legal Entity' shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      'control' means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      'You' (or 'Your') shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      'Source' form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      'Object' form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      'Work' shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      'Derivative Works' shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      'Contribution' shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, 'submitted'
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as 'Not a Contribution.'

      'Contributor' shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a 'NOTICE' text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an 'AS IS' BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets '[]'
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same 'printed page' as the copyright notice for easier
      identification within third-party archives.

   Copyright [yyyy] [name of copyright owner]

   Licensed under the Apache License, Version 2.0 (the 'License');
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an 'AS IS' BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.


================================================
File: app.py
================================================
import streamlit as st
import os
from langchain_openai import ChatOpenAI
from langchain.memory import ConversationBufferMemory
from langchain_community.document_loaders import WebBaseLoader
from langchain_text_splitters import RecursiveCharacterTextSplitter
from langchain_openai import OpenAIEmbeddings
from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
from langchain_community.vectorstores import FAISS
from langchain import hub
from langchain.tools.retriever import create_retriever_tool
from langchain_community.tools import WikipediaQueryRun
from langchain_community.utilities import WikipediaAPIWrapper
from langchain_community.utilities import ArxivAPIWrapper
from langchain_community.tools import ArxivQueryRun
from langchain.agents import create_openai_tools_agent
from langchain.agents import AgentExecutor
from htmlTemplates import css, bot_template, user_template

st.set_page_config(page_title='Query Assistant', page_icon=':robot_face:')
st.write(css, unsafe_allow_html=True)


# Initialize session state
if 'agent_executor' not in st.session_state:
    st.session_state.agent_executor = None
if 'memory' not in st.session_state:
    st.session_state.memory = ConversationBufferMemory(memory_key='chat_history', return_messages=True)
if 'chat_history' not in st.session_state:
    st.session_state.chat_history = []

# Sidebar
with st.sidebar:
    st.title('Query Assistant')
    st.subheader('Configuration')
    openai_api_key = st.text_input('Enter your OpenAI API Key', type='password', help='Get your API key from [OpenAI Website](https://platform.openai.com/api-keys)')
    os.environ['OPENAI_API_KEY'] = str(openai_api_key)

    custom_urls = st.text_area('Enter URLs (optional)', placeholder='Enter URLs separated by (,)')

    # Custom prompt text area
    custom_prompt_template = st.text_area('User Prompts', placeholder='Enter your custom prompt here...(Optional)')

    if st.button('Load Tools'):
        with st.spinner('Loading tools and creating agent...'):
            # Load Wikipedia tool
            api_wrapper = WikipediaAPIWrapper(top_k_results=1, doc_content_chars_max=600)
            wiki_tool = WikipediaQueryRun(api_wrapper=api_wrapper)

            # Load arXiv tool
            arxiv_wrapper = ArxivAPIWrapper(top_k_results=1, doc_content_chars_max=600)
            arxiv_tool = ArxivQueryRun(api_wrapper=arxiv_wrapper)

            if custom_urls:
                urls = [url.strip() for url in custom_urls.split(',')]
                all_documents = []
                for url in urls:
                    loader = WebBaseLoader(url)
                    docs = loader.load()
                    documents = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=200).split_documents(docs)
                    all_documents.extend(documents)

                vectordb = FAISS.from_documents(all_documents, OpenAIEmbeddings())
                retriever = vectordb.as_retriever()
                retriever_tool = create_retriever_tool(retriever, 'custom_search', 'Search for information if you find any matching keywords from the provided URLs then use this tool and provide the best fit answer from that')
                tools = [wiki_tool, arxiv_tool, retriever_tool]
            else:
                tools = [wiki_tool, arxiv_tool]

            # Load language model
            llm = ChatOpenAI(model='gpt-3.5-turbo-0125', temperature=0.4)

            # Set the prompt template
            if custom_prompt_template:
                prompt = ChatPromptTemplate.from_messages([
                    ('system', custom_prompt_template),
                    MessagesPlaceholder('chat_history', optional=True),
                    ('human', '{input}'),
                    MessagesPlaceholder('agent_scratchpad'),
                ])
            else:
                prompt = hub.pull('hwchase17/openai-functions-agent')

            # Create the agent with memory
            agent = create_openai_tools_agent(llm, tools, prompt=prompt.partial(chat_history=st.session_state.memory.buffer))
            st.session_state.agent_executor = AgentExecutor(agent=agent, tools=tools, verbose=False)
            st.success('Tools loaded successfully!')

# Main app
user_query = st.chat_input('Enter your query:')

if user_query and st.session_state.agent_executor:
    with st.spinner('Processing your query...'):
        response = st.session_state.agent_executor.invoke({'input': user_query})
        st.session_state.memory.save_context({'input': user_query}, {'chat_history': response['output']})
        st.session_state.chat_history.append({'role': 'user', 'content': user_query})
        st.session_state.chat_history.append({'role': 'assistant', 'content': response['output']})
        print(st.session_state.chat_history)


    for message in st.session_state.chat_history:
      if message['role'] == 'user':
            st.write(user_template.replace(
                '{{MSG}}', message['content']), unsafe_allow_html=True)
      else:
            st.write(bot_template.replace(
                '{{MSG}}', message['content']), unsafe_allow_html=True)

================================================
File: htmlTemplates.py
================================================
css = '''
<style>
.chat-message {
    padding: 1.5rem; border-radius: 0.5rem; margin-bottom: 1rem; display: flex
}
.chat-message.user {
    background-color: #2b313e
}
.chat-message.bot {
    background-color: #475063
}
.chat-message .avatar {
  width: 20%;
}
.chat-message .avatar img {
  max-width: 78px;
  max-height: 78px;
  border-radius: 50%;
  object-fit: cover;
}
.chat-message .message {
  width: 80%;
  padding: 0 1.5rem;
  color: #fff;
}
'''

bot_template = '''
<div class='chat-message bot'>
    <div class='avatar'>
        <img src='https://i.ibb.co/cN0nmSj/Screenshot-2023-05-28-at-02-37-21.png'>
    </div>
    <div class='message'>{{MSG}}</div>
</div>
'''

user_template = '''
<div class='chat-message user'>
    <div class='avatar'>
        <img src='https://i.ibb.co/tMd5k0j/human-face.png'>
    </div>    
    <div class='message'>{{MSG}}</div>
</div>
'''


================================================
File: requirements.txt
================================================
langchain_openai 
langchain_core
python-dotenv
streamlit
langchain_community
uvicorn
bs4
faiss-cpu
beautifulsoup4
wikipedia
arxiv
langchainhub

"
    },
    "Chat_With_Multiple_SQL_Databases": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
# SQL Chat Assistant with Multi-Database Support

This project is a Streamlit application that allows users to interact with multiple SQL databases through a natural language interface. The application leverages the power of language models, such as GPT-4 and GROQ models, to understand user queries and generate appropriate SQL queries to retrieve the desired information from the connected databases.


## Deployed Link

Document Q&A app is Deployed And Available [Here](https://chatwithmultiplesqldatabase.streamlit.app/)


## Screenshots

![db_1](https://github.com/Parthiban-R-3997/Chat_With_Multiple_Data_Sources/assets/26496805/a2f233a3-8100-42a9-9a26-f42047a4d36e)
![db_2](https://github.com/Parthiban-R-3997/Chat_With_Multiple_Data_Sources/assets/26496805/72417ea9-baa6-41fe-8d3c-07a8b9bca5a3)
![db_3](https://github.com/Parthiban-R-3997/Chat_With_Multiple_Data_Sources/assets/26496805/d1e18b55-ffa7-4cf8-a60b-c000ef816f0a)
![db_4](https://github.com/Parthiban-R-3997/Chat_With_Multiple_Data_Sources/assets/26496805/d8fdecef-0d0b-424f-936f-8e7ad3a80743)
![db_5](https://github.com/Parthiban-R-3997/Chat_With_Multiple_Data_Sources/assets/26496805/108f2f5b-b2ed-48b9-b892-74bbc8cef64d)
![db_6](https://github.com/Parthiban-R-3997/Chat_With_Multiple_Data_Sources/assets/26496805/741b27f6-5ef6-49c0-866b-97831e1b3824)

## Key Features

- **Multi-Database Support**: The application can connect to multiple databases simultaneously, allowing users to query data across different data sources.
- **Natural Language Interface**: Users can ask questions about the databases in natural language, and the application will translate the queries into SQL queries and execute them against the relevant databases.
- **Chain of Thought Prompting**: This project utilizes the Chain of Thought prompting technique from LangChain, which encourages the language model to break down complex problems into smaller steps, leading to more accurate and interpretable results.
- **Few-Shot Learning**: The application provides a set of examples to the language model, allowing it to learn the desired behavior and generate more accurate SQL queries based on the provided context.

## Project Uniqueness

This project stands out due to its innovative approach to handling multi-database queries using natural language. By combining the power of language models with LangChain's Chain of Thought prompting and Few-Shot Learning techniques, the application can effectively understand and process complex queries spanning multiple databases.

The use of Chain of Thought prompting encourages the language model to break down the problem into smaller steps, making it easier to understand the user's intent and generate appropriate SQL queries. Additionally, Few-Shot Learning allows the model to learn from a set of examples, enhancing its ability to generate accurate SQL queries for a wide range of scenarios.

Furthermore, the application's ability to connect to multiple databases simultaneously makes it a powerful tool for data analysts and business professionals who need to work with data from different sources. This feature eliminates the need for manual data consolidation and enables seamless querying across multiple data sources.

Consider the following diagram to understand how the different chains and components are built:

![Chatbot Architecture](https://github.com/Parthiban-R-3997/Chat_With_Multiple_SQL_Databases/assets/26496805/d833ca1e-a51d-47b6-a074-6703dd957525)


## Getting Started

To run the SQL Chat Assistant with Multi-Database Support locally, follow these steps:

1. Clone the repository: `git clone https://github.com/your-repo/sql-chat-assistant.git`
2. Install the required dependencies: `pip install -r requirements.txt`
3. Set up your database connections.
4. If you're connecting to a local database, you'll need to expose it using ngrok. Install the ngrok .exe file from [here](https://ngrok.com/download) and generate the authtoken from [here](https://dashboard.ngrok.com/get-started/your-authtoken).
5. Finally run the following command to start ngrok and expose your local database on port 3306: `ngrok tcp 3306`
6. Copy the ngrok URL (e.g., `tcp://x.tcp.ngrok.io:12345`) and use it as the `Host` and 'Port' value.
7. Run the Streamlit application: `streamlit run app.py`

For detailed instructions and additional configuration options, please refer to the project's documentation.

## Contributing

Contributions to this project are welcome! If you have any ideas, bug fixes, or improvements, feel free to submit a pull request. Please ensure that your code adheres to the project's coding standards and is well-documented.

## License

This project is licensed under the [MIT License](LICENSE).


================================================
File: app.py
================================================
import streamlit as st
import os
import toml
from langchain_core.messages import AIMessage, HumanMessage
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.runnables import RunnablePassthrough
from langchain_community.utilities import SQLDatabase
from langchain_core.output_parsers import StrOutputParser
from langchain_openai import ChatOpenAI
from langchain_groq import ChatGroq
#from dotenv import load_dotenv

#load_dotenv() 

# Function to update config.toml file
def update_secrets_file(user, data):
    secrets_file_path = '.streamlit/config.toml'
    secrets_data = {}

    # Load existing data from config.toml
    if os.path.exists(secrets_file_path):
        try:
            with open(secrets_file_path, 'r') as file:
                secrets_data = toml.load(file)
        except toml.TomlDecodeError:
            secrets_data = {}

    # Update user-specific secrets data
    secrets_data[user] = data

    # Write updated data back to config.toml
    with open(secrets_file_path, 'w') as file:
        toml.dump(secrets_data, file)


# Initialize database connections
def init_databases(user):
    secrets_file_path = '.streamlit/config.toml'
    secrets_data = {}
    if os.path.exists(secrets_file_path):
        with open(secrets_file_path, 'r') as file:
            secrets_data = toml.load(file)
    
    user_data = secrets_data.get(user, {})
    
    db_connections = {}
    for database in user_data.get('Databases', '').split(','):
        database = database.strip()
        if database:
            db_uri = f'mysql+mysqlconnector://{user_data['User']}:{user_data['Password']}@{user_data['Host']}:{user_data['Port']}/{database}'
            db_connections[database] = SQLDatabase.from_uri(db_uri)
    return db_connections


# Function to get SQL chain
def get_sql_chain(dbs, llm):
    template = '''
    You are a Senior and vastly experienced Data analyst at a company with around 20 years of experience. 
    You are interacting with a user who is asking you questions about the company's databases.
    Based on the table schemas below, write SQL queries that would answer the user's question. Take the conversation history into account.
    
    <SCHEMAS>{schemas}</SCHEMAS>
    
    Conversation History: {chat_history}
    
    Write the SQL queries for each relevant database, prefixed by the database name (e.g., DB1: SELECT * FROM ...; DB2: SELECT * FROM ...).
    Do not wrap the SQL queries in any other text, not even backticks.
    

    For example:

    Question: Which 3 artists have the most tracks?
    SQL Query: SELECT ArtistId, COUNT(*) as track_count FROM Track GROUP BY ArtistId ORDER BY track_count DESC LIMIT 3;

    Question: Name 10 artists
    SQL Query: SELECT Name FROM Artist LIMIT 10;

    Question:can you show SRK( a.k.a Shah Rukh Khan) movies where the imdb rating is greater than average rating of all movies and also show which movie had highest revenue in millions (INR)
    SQL Query:  SELECT m.title, m.imdb_rating, f.revenue 
                FROM movies m 
                JOIN financials f ON m.movie_id = f.movie_id 
                JOIN movie_actor ma ON m.movie_id = ma.movie_id 
                JOIN actors a ON ma.actor_id = a.actor_id 
                WHERE a.name = 'Shah Rukh Khan' AND m.imdb_rating > (SELECT AVG(imdb_rating) FROM movies) 
                ORDER BY f.revenue DESC;

    Question: How many Van huesen black medium t shirts are available in stock?
    SQL Query: SELECT SUM(stock_quantity) FROM t_shirts WHERE brand = 'Van Huesen' AND color = 'Black' AND size = 'M';

    Question: How much is the price of the inventory for all small size t-shirts?
    SQL Query: SELECT SUM(price * stock_quantity) FROM t_shirts WHERE size = 'S';

    Question: If we have to sell all the Levi's T-shirts today with discounts applied, how much revenue our store will generate (post discounts)?
    SQL Query: SELECT SUM(a.total_amount * ((100 - COALESCE(discounts.pct_discount, 0)) / 100)) AS total_revenue FROM (SELECT SUM(price * stock_quantity) AS total_amount, t_shirt_id FROM t_shirts WHERE brand = 'Levi' GROUP BY t_shirt_id) a LEFT JOIN discounts ON a.t_shirt_id = discounts.t_shirt_id;

    Question: For each brand, find the total revenue generated from t-shirts with a discount applied, grouped by the discount percentage.
    SQL Query: SELECT brand, COALESCE(discounts.pct_discount, 0) AS discount_pct, SUM(t.price * t.stock_quantity * (1 - COALESCE(discounts.pct_discount, 0) / 100)) AS total_revenue FROM t_shirts t LEFT JOIN discounts ON t.t_shirt_id = discounts.t_shirt_id GROUP BY brand, COALESCE(discounts.pct_discount, 0);

    Question: Find the top 3 most popular colors for each brand, based on the total stock quantity.
    SQL Query: SELECT brand, color, SUM(stock_quantity) AS total_stock FROM t_shirts GROUP BY brand, color ORDER BY brand, total_stock DESC;

    Question: Calculate the average price per size for each brand, excluding sizes with less than 10 t-shirts in stock.
    SQL Query: SELECT brand, size, AVG(price) AS avg_price FROM t_shirts WHERE stock_quantity >= 10 GROUP BY brand, size HAVING COUNT(*) >= 10;

    Question: Find the brand and color combination with the highest total revenue, considering discounts.
    SQL Query: SELECT brand, color, SUM(t.price * t.stock_quantity * (1 - COALESCE(d.pct_discount, 0) / 100)) AS total_revenue FROM t_shirts t LEFT JOIN discounts d ON t.t_shirt_id = d.t_shirt_id GROUP BY brand, color ORDER BY total_revenue DESC LIMIT 1;

    Question: Create a view that shows the total stock quantity and revenue for each brand, size, and color combination.
    SQL Query: CREATE VIEW brand_size_color_stats AS SELECT brand, size, color, SUM(stock_quantity) AS total_stock, SUM(price * stock_quantity) AS total_revenue FROM t_shirts GROUP BY brand, size, color;

    Question: How much is the price of the inventory for all variants of t-shirts and group them by brands?
    SQL Query: SELECT brand, SUM(price * stock_quantity) FROM t_shirts GROUP BY brand;

    Question: List the total revenue of t-shirts of L size for all brands.
    SQL Query: SELECT brand, SUM(price * stock_quantity) AS total_revenue FROM t_shirts WHERE size = 'L' GROUP BY brand;

    Question: How many shirts are available in stock grouped by colours from each size and finally show me all brands?
    SQL Query: SELECT brand, color, size, SUM(stock_quantity) AS total_stock FROM t_shirts GROUP BY brand, color, size;

    Question: select all the movies with minimum and maximum release_year. Note that there can be more than one movies in min and max year hence output rows can be more than 2?
    SQL Query: select * from movies where release_year in (select min(release_year) from movies, select max(release_year) from movies);

    Question: Generate a yearly report for Croma India where there are two columns 1. Fiscal Year and 2. Total Gross Sales amount In that year from Croma
    SQL Query: select get_fiscal_year(date) as fiscal_year, sum(round(sold_quantity*g.gross_price,2)) as yearly_sales from fact_sales_monthly s join fact_gross_price g on g.fiscal_year=get_fiscal_year(s.date) and g.product_code=s.product_code where customer_code=90002002 group by get_fiscal_year(date) order by fiscal_year;

    Question: What is the total freight cost incurred by each customer in the month of May 2024?
    SQL Query: SELECT s.customer_name, SUM(f.freight_cost) AS total_freight_cost FROM gdb0041.sales_monthly s JOIN gdb056.freight_cost f ON s.customer_id = f.customer_id WHERE s.month = 'May 2024' GROUP BY s.customer_id;

    Question: Which market has the highest gross price sales in the last quarter?
    SQL Query: SELECT s.market, SUM(g.gross_price) AS total_gross_price FROM gdb041.sales_monthly s JOIN gdb056.gross_price g ON s.market_id = g.market_id WHERE s.quarter = 'Q2 2024' GROUP BY s.market_id ORDER BY total_gross_price DESC LIMIT 1;

    Question: What is the manufacturing cost of products sold in each region last year?
    SQL Query: SELECT s.region, SUM(m.manufacturing_cost) AS total_manufacturing_cost FROM gdb0041.sales_monthly s JOIN gdb056.manufacturing_cost m ON s.product_id = m.product_id WHERE s.year = 2023 GROUP BY s.region;

    Question: How many pre-invoice deductions were applied to each customer's sales in the last six months?
    SQL Query: SELECT s.customer_name, COUNT(p.pre_invoice_deduction_id) AS total_pre_invoice_deductions FROM gdb041.sales_monthly s JOIN gdb056.pre_invoice_deductions p ON s.sales_id = p.sales_id WHERE s.date BETWEEN DATE_SUB(NOW(), INTERVAL 6 MONTH) AND NOW() GROUP BY s.customer_id;

    Question: What are the post-invoice deductions for each product in the current year?
    SQL Query: SELECT f.product_name, SUM(p.amount) AS total_post_invoice_deductions FROM gdb0041.forecast_monthly f JOIN gdb056.post_invoice_deductions p ON f.product_id = p.product_id WHERE YEAR(f.date) = YEAR(NOW()) GROUP BY f.product_id;

    Question: How many movies did Sanjay Dutt act in, and which film gained the most revenue, ordered from highest to lowest revenue?
    SQL Query: SELECT m.title, SUM(b.revenue) AS total_revenue FROM movies m JOIN box_office b ON m.movie_id = b.movie_id JOIN movie_actor ma ON m.movie_id = ma.movie_id JOIN actors a ON ma.actor_id = a.actor_id WHERE a.name = 'Sanjay Dutt' GROUP BY m.title ORDER BY total_revenue DESC;    
        

    Your turn:
    
    Question: {question}
    SQL Queries:
    '''
    
    prompt = ChatPromptTemplate.from_template(template)
    llm = llm

    def get_schema(_):
        schemas = {db_name: db.get_table_info() for db_name, db in dbs.items()}
        return schemas

    def parse_multi_line_queries(result):
        queries = {}
        lines = result.strip().split('\n')
        current_db = None
        current_query = []

        for line in lines:
            if ':' in line and not current_db:  # Only split on colon for the database name
                current_db, query_start = line.split(':', 1)
                current_db = current_db.strip()
                current_query.append(query_start.strip())
            else:
                current_query.append(line.strip())

        if current_db:
            queries[current_db] = ' '.join(current_query).strip()

        return queries
    
    return (
        RunnablePassthrough.assign(schemas=get_schema)
        | prompt
        | llm
        | StrOutputParser()
        | parse_multi_line_queries
    )

# Function to get response
def get_response(user_query, dbs, chat_history, llm):
    sql_chain = get_sql_chain(dbs, llm)
    
    template = '''
    You are a Senior and vastly experienced Data analyst at a company with around 20 years of experience.
    You are interacting with a user who is asking you questions about the company's databases.
    Based on the table schemas below, question, sql queries, and sql responses, write an 
    accurate natural language response so that the end user can understand things
    and make sure do not include words like 'Based on the SQL queries I ran'. 
    Just provide only the answer with some text that the user expects.

    <SCHEMAS>{schemas}</SCHEMAS>
    Conversation History: {chat_history}
    SQL Queries: <SQL>{queries}</SQL>
    User question: {question}
    SQL Responses: {responses}
    '''
    
    prompt = ChatPromptTemplate.from_template(template)
    llm = llm
   
    def run_queries(var):
        responses = {}
        for db_name, query in var['queries'].items():
            responses[db_name] = dbs[db_name].run(query)
            print(dbs.keys())
            print(var['queries'].keys())
        return responses
    
    chain = (
        RunnablePassthrough.assign(queries=sql_chain).assign(
            schemas=lambda _: {db_name: db.get_table_info() for db_name, db in dbs.items()},
            responses=run_queries,)  # The comma at the end of the assign() method call is used to indicate that there may be more keyword arguments or method calls following it
        | prompt
        | llm
        | StrOutputParser()
    )
    
    return chain.invoke({
        'question': user_query,
        'chat_history': chat_history,
    })

# Streamlit app configuration
if 'chat_history' not in st.session_state:
    st.session_state.chat_history = [
        AIMessage(content='Hello! I'm a SQL assistant. Ask me anything about your database.'),
    ]

st.set_page_config(page_title='Chat with MySQL', page_icon='🛢️')
st.title('Chat with MySQL')

# Define model options
model_options_groq = [
    'llama-3.1-70b-versatile',
    'llama-3.1-8b-instant',
    'llama3-70b-8192',
    'llama3-8b-8192',
    'mixtral-8x7b-32768',
    'gemma2-9b-it'
]

model_options_openai = [
    'gpt-4o',
    'gpt-4o-mini',
    'gpt-4-turbo',
    'gpt-3.5-turbo-0125'
]

with st.sidebar:
    st.subheader('Settings')
    st.write('This is a simple chat application using MySQL. Connect to the database and start chatting.')
    
    if 'db' not in st.session_state:
        st.session_state.user_id = st.text_input('User ID',placeholder='Enter any random numbers')
        st.session_state.Host = st.text_input('Host')
        st.session_state.Port = st.text_input('Port')
        st.session_state.User = st.text_input('User')
        st.session_state.Password = st.text_input('Password', type='password')
        st.session_state.Databases = st.text_input('Databases', placeholder='Enter DB's separated by (,)')
        st.session_state.openai_api_key = st.text_input('OpenAI API Key', type='password', help='Get your API key from [OpenAI Website](https://platform.openai.com/api-keys)')
        selected_model_openai = st.selectbox('Select any OpenAI Model', model_options_openai)
        st.session_state.groq_api_key = st.text_input('Groq API Key', type='password', help='Get your API key from [GROQ Console](https://console.groq.com/keys)')
        selected_model_groq = st.selectbox('Select any Groq Model', model_options_groq)
        st.info('Note: For interacting multiple databases and dealing with complex queries, GPT-4 Model is recommended for accurate results else proceed with Groq Model')
        
       
        os.environ['OPENAI_API_KEY'] = str(st.session_state.openai_api_key)
       

        if st.button('Connect'):
            with st.spinner('Connecting to databases...'):

                # Update config.toml with user-specific connection details
                update_secrets_file(st.session_state.user_id, {
                    'Host': st.session_state.Host,
                    'Port': st.session_state.Port,
                    'User': st.session_state.User,
                    'Password': st.session_state.Password,
                    'Databases': st.session_state.Databases
                })

                dbs = init_databases(st.session_state.user_id)
                st.session_state.dbs = dbs

                if len(dbs) > 1:
                    st.success(f'Connected to {len(dbs)} databases')
                else:
                    st.success('Connected to database')
                
                

        if st.session_state.openai_api_key == '' and st.session_state.groq_api_key == '':
            st.error('Enter one API Key At least')
        elif st.session_state.openai_api_key:    
            st.session_state.llm = ChatOpenAI(model=selected_model_openai, api_key=st.session_state.openai_api_key)
        elif st.session_state.groq_api_key:
            st.session_state.llm = ChatGroq(model_name=selected_model_groq, temperature=0.5, api_key=st.session_state.groq_api_key)
        else:
            pass

# Display chat messages
for message in st.session_state.chat_history:
    if isinstance(message, AIMessage):
        with st.chat_message('AI'):
            st.markdown(message.content)
    elif isinstance(message, HumanMessage):
        with st.chat_message('Human'):
            st.markdown(message.content)

# Handle user input
user_query = st.chat_input('Type a message...')
if user_query is not None and user_query.strip() != '':
    st.session_state.chat_history.append(HumanMessage(content=user_query))
    
    with st.chat_message('Human'):
        st.markdown(user_query)
        
    with st.chat_message('AI'):
        response = get_response(user_query, st.session_state.dbs, st.session_state.chat_history, st.session_state.llm)
        st.markdown(response)
        
    st.session_state.chat_history.append(AIMessage(content=response))


================================================
File: requirements.txt
================================================
streamlit
langchain
langchain-community
langchain-core
langchain-openai
mysql-connector-python
groq
langchain-groq
toml
sqlalchemy



================================================
File: .devcontainer/devcontainer.json
================================================
{
  'name': 'Python 3',
  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  'image': 'mcr.microsoft.com/devcontainers/python:1-3.11-bullseye',
  'customizations': {
    'codespaces': {
      'openFiles': [
        'README.md',
        'app.py'
      ]
    },
    'vscode': {
      'settings': {},
      'extensions': [
        'ms-python.python',
        'ms-python.vscode-pylance'
      ]
    }
  },
  'updateContentCommand': '[ -f packages.txt ] && sudo apt update && sudo apt upgrade -y && sudo xargs apt install -y <packages.txt; [ -f requirements.txt ] && pip3 install --user -r requirements.txt; pip3 install --user streamlit; echo '✅ Packages installed and Requirements met'',
  'postAttachCommand': {
    'server': 'streamlit run app.py --server.enableCORS false --server.enableXsrfProtection false'
  },
  'portsAttributes': {
    '8501': {
      'label': 'Application',
      'onAutoForward': 'openPreview'
    }
  },
  'forwardPorts': [
    8501
  ]
}

"
    },
    "Comparison-of-Supervised-and-Unsupervised-Image-Recognition": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
# Comparison of Supervised and Unsupervised Image Recognition

## Image Classification and Denoising with CIFAR-10

This document summarizes the processes, results, and analysis of applying different machine learning models on the CIFAR-10 dataset for image classification and image denoising tasks.

## 1. Image Classification

Two different approaches were implemented for image classification:

### 1.1 Support Vector Machine (SVM)

#### Training:
- The CIFAR-10 dataset was loaded using TensorFlow.
- Pixel values were preprocessed by normalizing to a range of 0-1 and flattening the 32x32x3 image arrays into 1D vectors.
- An SVM classifier with an RBF kernel was trained on the training set using all available CPU cores (n_jobs=-1) for faster training. GPU acceleration was attempted but not found to be beneficial for this specific task and model.
- The trained model was saved to svm_model.pkl using pickle.

#### Testing:
- The saved SVM model was loaded.
- Predictions were made on the preprocessed test set.
- Accuracy: 54%
- Classification Report: The classification report revealed that the model performs decently for some classes like 'airplane', 'automobile', and 'ship' but struggles with others like 'cat', 'deer', and 'frog'. This suggests that the features learned by the SVM with an RBF kernel might not be discriminative enough for all classes in the CIFAR-10 dataset.

#### Prediction Examples:
- Predictions were made on a separate set of images stored in the Images/ directory.
- The predicted class labels were displayed alongside the images.
- Predictions were also visualized on a subset of the test set images to further illustrate the model's performance.

### 1.2 Convolutional Neural Network (CNN)

#### Training:
- The CIFAR-10 dataset was loaded and preprocessed similarly to the SVM approach.
- The training set was further split into training and validation sets (80%-20% split).
- A CNN model was defined using the Keras Sequential API. The architecture included:
  - Convolutional layers with ReLU activation
  - Max-pooling layers
  - Dropout for regularization
  - Dense layers with ReLU activation
  - A final dense layer with softmax activation for multi-class classification
- The model was compiled using the Adam optimizer with a learning rate of 0.001 and sparse categorical cross-entropy loss.
- Training was performed for 20 epochs with a batch size of 32.
- Training and validation accuracy and loss were plotted.
- Test Accuracy: 76.28%

#### Model Summary:
- The model.summary() function provided a detailed overview of the CNN architecture, including the output shape and number of parameters for each layer.

#### Saving the Model:
- The trained CNN model was saved to CNNFinal_Model.h5.

#### Evaluation:
- The saved CNN model was loaded.
- Predictions were made on the test set, and a classification report was generated.
- Classification Report: The CNN model significantly outperformed the SVM, achieving an accuracy of 76.28%. This highlights the superiority of CNNs for image classification tasks due to their ability to learn spatial hierarchies of features.

#### Prediction Examples:
- Similar to the SVM, predictions were visualized for images from the Images/ directory and a subset of the test set.

## 2. Image Denoising

An Autoencoder was implemented for image denoising:

### 2.1 Autoencoder

#### Training:
- The CIFAR-10 dataset was loaded, and Gaussian noise was added to the images to create a noisy dataset.
- An autoencoder model was defined using the Keras Sequential API. The architecture consisted of:
  - Encoder: Convolutional and MaxPooling layers to learn a compressed representation of the input.
  - Decoder: Convolutional and UpSampling layers to reconstruct the denoised image from the compressed representation.
- The model was compiled using the Adam optimizer and mean squared error loss.
- Training was performed for a specified number of epochs.
- The trained autoencoder model was saved to Denoising_Model_Final.h5.

#### Testing:
- The saved autoencoder model was loaded.
- The model was evaluated on a noisy test set.
- Test Loss: 22982.15
- Test Accuracy: 33.79%

#### Prediction Examples:
- A visualize_data function was defined to display grids of images.
- The function was used to visualize:
  - Noisy images from the test set.
  - Denoised images predicted by the autoencoder.
  - Original clean images for comparison.
- The autoencoder's denoising capability was further demonstrated on:
  - Images with smaller resolutions.
  - Images with larger resolutions.

## 3. Image Classification using K-means with PCA

#### Training:
- The CIFAR-10 dataset was loaded and preprocessed by normalizing pixel values and flattening the images.
- PCA (Principal Component Analysis) was applied to reduce the dimensionality of the data while retaining 99% of the variance.
- A K-means clustering model was trained on the PCA-transformed training data with 10 clusters, representing the 10 classes in CIFAR-10.
- The trained K-means model was saved to kmeans_model.pkl.

#### Evaluation:
- The saved K-means model was loaded.
- Silhouette Score: 0.0538
- Davies-Bouldin Score: 2.7032
- These scores suggest that the clustering is not very distinct, which is expected given the complexity of image data and the limitations of K-means in high-dimensional spaces.

#### Test Accuracy: 22.11%

#### Prediction Examples:
- Predictions were visualized on a subset of the test set images.
- Predictions were also made and displayed for images from the Images/ directory.

## Conclusion

This project explored different machine learning techniques for image classification and denoising on the CIFAR-10 dataset. The CNN model achieved the highest accuracy (76.28%) for image classification, demonstrating the power of deep learning for this task. The autoencoder showed promising results in denoising images, while the K-means approach, though less accurate, provided insights into clustering image data. Future work could involve exploring more complex CNN architectures, fine-tuning hyperparameters, and experimenting with different autoencoder designs for improved performance.

================================================
File: Covulutional Neural Network.ipynb
================================================
# Jupyter notebook converted to Python script.

'''
## Model Training

####  Models training with lr=0.001 ,epochs 20,batch_size=32 and got Test accuracy: 0.7628  (train on 42000 samples, validate on 8000 samples)
'''

# Load the CIFAR-10 dataset
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.cifar10.load_data()

# Split the training dataset into training and validation sets
x_train, x_valid = x_train[:42000], x_train[42000:]
y_train, y_valid = y_train[:42000], y_train[42000:]

x_train = x_train.astype('float32') / 255.0
x_valid = x_valid.astype('float32') / 255.0
x_test = x_test.astype('float32') / 255.0

# Define the architecture of your CNN
model = tf.keras.models.Sequential([
    # first layer
    tf.keras.layers.Conv2D(32, (3, 3), activation='relu', input_shape=(32, 32, 3)),
    # second layer
    tf.keras.layers.Conv2D(32, (3, 3), activation='relu',),
    # max pooling layer
    tf.keras.layers.MaxPooling2D((2, 2)),
    # third layer
    tf.keras.layers.Conv2D(64, (3, 3), activation='relu'),
    # forth layer
    tf.keras.layers.Conv2D(64, (3, 3), activation='relu'),
    # max pooling layer
    tf.keras.layers.MaxPooling2D((2, 2)),
    # flattern layer
    tf.keras.layers.Flatten(),
    #dropout layer
    tf.keras.layers.Dropout(0.5),
    # fully connected layer
    tf.keras.layers.Dense(128, activation='relu'),
    # output layer
    tf.keras.layers.Dense(10,activation='softmax')
])

# Compile the model
opt = tf.keras.optimizers.Adam(lr=0.001)
model.compile(optimizer=opt,
              loss=tf.keras.losses.sparse_categorical_crossentropy,
              metrics=['accuracy'])


# Train the model with callbacks and save the history
history = model.fit(x_train, y_train, epochs=20, batch_size=32,
                    validation_data=(x_valid, y_valid))

# Evaluate the model on the test set
test_loss, test_acc = model.evaluate(x_test, y_test, verbose=2)
print(f'Test accuracy: {test_acc}')

# Plot the test accuracy
plt.plot(history.history['acc'])
plt.plot(history.history['val_acc'])
plt.plot(len(history.history['acc'])-1, test_acc, marker='o', markersize=5, color='red')
plt.title('Model accuracy')
plt.ylabel('Accuracy')
plt.xlabel('Epoch')
plt.legend(['Train', 'Validation', 'Test'], loc='upper left')
plt.show()

# Plot the test loss
plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.plot(len(history.history['loss'])-1, test_loss, marker='o', markersize=5, color='red')
plt.title('Model loss')
plt.ylabel('Loss')
plt.xlabel('Epoch')
plt.legend(['Train', 'Validation', 'Test'], loc='upper left')
plt.show()

# Output:
#   Train on 42000 samples, validate on 8000 samples

#   Epoch 1/20

#   42000/42000 [==============================] - 19s - loss: 1.5742 - acc: 0.4245 - val_loss: 1.2615 - val_acc: 0.5427

#   Epoch 2/20

#   42000/42000 [==============================] - 18s - loss: 1.2174 - acc: 0.5649 - val_loss: 1.0338 - val_acc: 0.6384

#   Epoch 3/20

#   42000/42000 [==============================] - 18s - loss: 1.0273 - acc: 0.6370 - val_loss: 0.9154 - val_acc: 0.6833

#   Epoch 4/20

#   42000/42000 [==============================] - 17s - loss: 0.9133 - acc: 0.6754 - val_loss: 0.8663 - val_acc: 0.6923

#   Epoch 5/20

#   42000/42000 [==============================] - 17s - loss: 0.8419 - acc: 0.7024 - val_loss: 0.7939 - val_acc: 0.7181

#   Epoch 6/20

#   42000/42000 [==============================] - 18s - loss: 0.7949 - acc: 0.7188 - val_loss: 0.7493 - val_acc: 0.7354

#   Epoch 7/20

#   42000/42000 [==============================] - 18s - loss: 0.7446 - acc: 0.7366 - val_loss: 0.7548 - val_acc: 0.7319

#   Epoch 8/20

#   42000/42000 [==============================] - 18s - loss: 0.7155 - acc: 0.7454 - val_loss: 0.7110 - val_acc: 0.7502

#   Epoch 9/20

#   42000/42000 [==============================] - 18s - loss: 0.6814 - acc: 0.7597 - val_loss: 0.6963 - val_acc: 0.7554

#   Epoch 10/20

#   42000/42000 [==============================] - 17s - loss: 0.6458 - acc: 0.7692 - val_loss: 0.7096 - val_acc: 0.7546

#   Epoch 11/20

#   42000/42000 [==============================] - 17s - loss: 0.6209 - acc: 0.7799 - val_loss: 0.6951 - val_acc: 0.7576

#   Epoch 12/20

#   42000/42000 [==============================] - 18s - loss: 0.6100 - acc: 0.7831 - val_loss: 0.6830 - val_acc: 0.7620

#   Epoch 13/20

#   42000/42000 [==============================] - 18s - loss: 0.5843 - acc: 0.7921 - val_loss: 0.6902 - val_acc: 0.7571

#   Epoch 14/20

#   42000/42000 [==============================] - 18s - loss: 0.5643 - acc: 0.7976 - val_loss: 0.7212 - val_acc: 0.7531

#   Epoch 15/20

#   42000/42000 [==============================] - 18s - loss: 0.5525 - acc: 0.8034 - val_loss: 0.7007 - val_acc: 0.7569

#   Epoch 16/20

#   42000/42000 [==============================] - 18s - loss: 0.5311 - acc: 0.8111 - val_loss: 0.6764 - val_acc: 0.7652

#   Epoch 17/20

#   42000/42000 [==============================] - 18s - loss: 0.5126 - acc: 0.8155 - val_loss: 0.6835 - val_acc: 0.7635

#   Epoch 18/20

#   42000/42000 [==============================] - 17s - loss: 0.5091 - acc: 0.8170 - val_loss: 0.6947 - val_acc: 0.7614

#   Epoch 19/20

#   42000/42000 [==============================] - 17s - loss: 0.4958 - acc: 0.8216 - val_loss: 0.6971 - val_acc: 0.7641

#   Epoch 20/20

#   42000/42000 [==============================] - 17s - loss: 0.4803 - acc: 0.8289 - val_loss: 0.6834 - val_acc: 0.7711

#   Test accuracy: 0.7628

#   <Figure size 432x288 with 1 Axes>
#   <Figure size 432x288 with 1 Axes>

'''
## Architecture of CNN
'''

model.summary()
# Output:
#   _________________________________________________________________

#   Layer (type)                 Output Shape              Param #   

#   =================================================================

#   conv2d_1 (Conv2D)            (None, 30, 30, 32)        896       

#   _________________________________________________________________

#   conv2d_2 (Conv2D)            (None, 28, 28, 32)        9248      

#   _________________________________________________________________

#   max_pooling2d_1 (MaxPooling2 (None, 14, 14, 32)        0         

#   _________________________________________________________________

#   conv2d_3 (Conv2D)            (None, 12, 12, 64)        18496     

#   _________________________________________________________________

#   conv2d_4 (Conv2D)            (None, 10, 10, 64)        36928     

#   _________________________________________________________________

#   max_pooling2d_2 (MaxPooling2 (None, 5, 5, 64)          0         

#   _________________________________________________________________

#   flatten_1 (Flatten)          (None, 1600)              0         

#   _________________________________________________________________

#   dropout_1 (Dropout)          (None, 1600)              0         

#   _________________________________________________________________

#   dense_1 (Dense)              (None, 128)               204928    

#   _________________________________________________________________

#   dense_2 (Dense)              (None, 10)                1290      

#   =================================================================

#   Total params: 271,786

#   Trainable params: 271,786

#   Non-trainable params: 0

#   _________________________________________________________________


'''
## Saving the model
'''

model.save('CNNFinal_Model.h5')

'''
## Performing Evaluation Metrics
'''

import tensorflow as tf
import numpy as np
from sklearn.metrics import classification_report
import warnings
from sklearn.exceptions import ConvergenceWarning
warnings.filterwarnings('ignore', category=ConvergenceWarning)
warnings.filterwarnings('ignore', category=RuntimeWarning)
warnings.filterwarnings('ignore', category=FutureWarning)

(x_train, y_train), (x_test, y_test) = tf.keras.datasets.cifar10.load_data()

# Load the saved model
model = tf.keras.models.load_model('CNNFinal_Model.h5')

# Generate predictions on the test set
y_pred = model.predict(x_test)
y_pred_classes = np.argmax(y_pred, axis=1)

# Print the classification report
print(classification_report(y_test, y_pred_classes))

# Output:
#                 precision    recall  f1-score   support

#   

#              0       0.38      0.87      0.53      1000

#              1       0.43      0.94      0.59      1000

#              2       0.72      0.27      0.39      1000

#              3       0.51      0.18      0.26      1000

#              4       0.85      0.09      0.16      1000

#              5       0.57      0.52      0.54      1000

#              6       0.90      0.17      0.28      1000

#              7       0.48      0.70      0.57      1000

#              8       0.66      0.51      0.57      1000

#              9       0.53      0.70      0.60      1000

#   

#       accuracy                           0.49     10000

#      macro avg       0.60      0.49      0.45     10000

#   weighted avg       0.60      0.49      0.45     10000

#   


'''
## Predicting the results with our own images
'''

import os
from tensorflow.python.keras.preprocessing import image
import matplotlib.pyplot as plt
import numpy as np

# Load the saved model
model = tf.keras.models.load_model('CNNFinal_Model.h5')

# Define the class names
class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']

# Set the path to the directory containing the images
image_dir = 'Images/'

# Define the number of rows and columns for the grid
rows = 4
cols = 5

# Create a figure object and set its size
fig, ax = plt.subplots(rows, cols, figsize=(10, 8))

# Loop through all image files in the directory
counter = 0
for filename in os.listdir(image_dir):
    if filename.endswith('.jpg') or filename.endswith('.jpeg') or filename.endswith('.png') or filename.endswith('.JPG'):
        
        
        # Print the filename for debugging purposes
        img_path = os.path.join(image_dir, filename)            
        img = image.load_img(img_path, target_size=(32, 32))   ## Loading image with size 32*32
        img_array = image.img_to_array(img)                    ## Converting image to array
        img_array = np.expand_dims(img_array, axis=0)          ## Expanding the dimensions

        # Predict the class of the image
        result = model.predict(img_array)
        class_index = np.argmax(result)                        ## Extracting the maximum value
        predicted_class_name = class_names[class_index]

        # Plot the image and its predicted class
        row = counter // cols
        col = counter % cols
        ax[row, col].imshow(img)
        ax[row, col].set_title(predicted_class_name)
        ax[row, col].axis('off')
        counter += 1
        
# Show the grid of images
plt.show()

# Output:
#   <Figure size 720x576 with 20 Axes>

'''
## Predicting on Test Images
'''

import matplotlib.pyplot as plt
from PIL import Image
import numpy as np

# Define the class names
class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']

# Define the number of rows and columns in the grid
rows = 5
cols = 4

# Create a new figure for the grid
fig, ax = plt.subplots(rows, cols, figsize=(15,8))

# Loop through a subset of the images
for i in range(rows*cols):
    img = x_test[i+2500]
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)

    # Predict the class of the image
    result = model.predict(img_array)
    class_index = np.argmax(result)
    predicted_class_name = class_names[class_index]

    # Plot the image and its predicted class
    row = i // cols
    col = i % cols
    ax[row, col].imshow(img)
    ax[row, col].set_title(predicted_class_name)
    ax[row, col].axis('off')

# Show the grid of images
plt.subplots_adjust(wspace=0.1, hspace=0.5)
plt.show()

# Output:
#   <Figure size 1080x576 with 20 Axes>


================================================
File: Denoised Autoencoder.ipynb
================================================
# Jupyter notebook converted to Python script.

'''
## Model Training for Denoised AutoEncoder
'''

import tensorflow as tf
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import warnings
from sklearn.exceptions import ConvergenceWarning
warnings.filterwarnings('ignore', category=ConvergenceWarning)
warnings.filterwarnings('ignore', category=RuntimeWarning)
warnings.filterwarnings('ignore', category=FutureWarning)
from tensorflow.python.keras.layers import Input, Conv2D, MaxPooling2D, UpSampling2D,BatchNormalization
from tensorflow.python.keras.models import Model
from tensorflow.python.keras.callbacks import ModelCheckpoint,EarlyStopping

# Set GPU memory limit to 3GB
config = tf.ConfigProto()
config.gpu_options.per_process_gpu_memory_fraction = 0.75
sess = tf.Session(config=config)

# Load CIFAR-10 dataset
(x_train, _), (x_test, _) = tf.keras.datasets.cifar10.load_data()

# Normalize pixel values
x_train = x_train.astype('float32') / 255.
x_test = x_test.astype('float32') / 255.

 
# Add random noise to the images
noise_factor = 0.5
x_train_noisy = x_train + noise_factor * np.random.normal(loc=0.0, scale=1.0, size=x_train.shape)
x_test_noisy = x_test + noise_factor * np.random.normal(loc=0.0, scale=1.0, size=x_test.shape)



#Reshape training and noisy data to (50000, 32, 32, 3)
x_train = x_train.reshape(len(x_train), 32, 32, 3)
x_test = x_test.reshape(len(x_test), 32, 32, 3)

x_train_noisy = x_train_noisy.reshape(len(x_train_noisy), 32, 32, 3)
x_test_noisy = x_test_noisy.reshape(len(x_test_noisy), 32, 32, 3)



# Define the autoencoder architecture

##Encoder Part
input_img = Input(shape=(32, 32, 3))
x = Conv2D(128, (3, 3), activation='relu', padding='same')(input_img)
x = BatchNormalization()(x) 
x = MaxPooling2D((2, 2), padding='same')(x)

x = Conv2D(64, (3, 3), activation='relu', padding='same')(x)
x = BatchNormalization()(x)
x = MaxPooling2D((2, 2), padding='same')(x)

x = Conv2D(32, (3, 3), activation='relu', padding='same')(x)
x = BatchNormalization()(x)
x = MaxPooling2D((2, 2), padding='same')(x)

x = Conv2D(32, (3, 3), activation='relu', padding='same')(x)
x = BatchNormalization()(x)
encoded = MaxPooling2D((2, 2), padding='same')(x)

##Decoder Part
x = Conv2D(32, (3, 3), activation='relu', padding='same')(encoded)
x = BatchNormalization()(x)
x = UpSampling2D()(x)

x = Conv2D(32, (3, 3), activation='relu', padding='same')(x)
x = BatchNormalization()(x)
x = UpSampling2D()(x)

x = Conv2D(64, (3, 3), activation='relu', padding='same')(x)
x = BatchNormalization()(x)
x = UpSampling2D()(x)

x = Conv2D(64, (3, 3), activation='relu', padding='same')(x)
x = BatchNormalization()(x)
x = UpSampling2D()(x)

x = Conv2D(128, (3, 3), activation='relu', padding='same')(x)

decoded = Conv2D(3, (3, 3), padding='same')(x)



# Define the autoencoder model
autoencoder = Model(input_img, decoded,name = 'Denoising_Model')
autoencoder.summary()

# Compile the model
opt = tf.keras.optimizers.Adam(lr=0.001)
autoencoder.compile(optimizer=opt,
              loss=tf.keras.losses.mean_squared_error,
              metrics=['accuracy'])

# Train the model
checkpoint = ModelCheckpoint('Denoising_Model_Final.h5', save_best_only=True, save_weights_only=False, verbose = 1)
early_stopping=EarlyStopping(monitor='val_loss',patience=10,verbose=1,mode='min')

hist=autoencoder.fit(x_train_noisy, x_train,
                epochs=100,
                batch_size=128,
                callbacks = [checkpoint,early_stopping],shuffle=True, validation_split = 0.10)

# Output:
#   H:\Anaconda\envs\V\lib\site-packages\tensorflow\python\framework\dtypes.py:469: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.

#     _np_qint8 = np.dtype([('qint8', np.int8, 1)])

#   H:\Anaconda\envs\V\lib\site-packages\tensorflow\python\framework\dtypes.py:470: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.

#     _np_quint8 = np.dtype([('quint8', np.uint8, 1)])

#   H:\Anaconda\envs\V\lib\site-packages\tensorflow\python\framework\dtypes.py:471: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.

#     _np_qint16 = np.dtype([('qint16', np.int16, 1)])

#   H:\Anaconda\envs\V\lib\site-packages\tensorflow\python\framework\dtypes.py:472: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.

#     _np_quint16 = np.dtype([('quint16', np.uint16, 1)])

#   H:\Anaconda\envs\V\lib\site-packages\tensorflow\python\framework\dtypes.py:473: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.

#     _np_qint32 = np.dtype([('qint32', np.int32, 1)])

#   H:\Anaconda\envs\V\lib\site-packages\tensorflow\python\framework\dtypes.py:476: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.

#     np_resource = np.dtype([('resource', np.ubyte, 1)])

#   _________________________________________________________________

#   Layer (type)                 Output Shape              Param #   

#   =================================================================

#   input_1 (InputLayer)         (None, 32, 32, 3)         0         

#   _________________________________________________________________

#   conv2d_1 (Conv2D)            (None, 32, 32, 128)       3584      

#   _________________________________________________________________

#   batch_normalization_1 (Batch (None, 32, 32, 128)       512       

#   _________________________________________________________________

#   max_pooling2d_1 (MaxPooling2 (None, 16, 16, 128)       0         

#   _________________________________________________________________

#   conv2d_2 (Conv2D)            (None, 16, 16, 64)        73792     

#   _________________________________________________________________

#   batch_normalization_2 (Batch (None, 16, 16, 64)        256       

#   _________________________________________________________________

#   max_pooling2d_2 (MaxPooling2 (None, 8, 8, 64)          0         

#   _________________________________________________________________

#   conv2d_3 (Conv2D)            (None, 8, 8, 32)          18464     

#   _________________________________________________________________

#   batch_normalization_3 (Batch (None, 8, 8, 32)          128       

#   _________________________________________________________________

#   max_pooling2d_3 (MaxPooling2 (None, 4, 4, 32)          0         

#   _________________________________________________________________

#   conv2d_4 (Conv2D)            (None, 4, 4, 32)          9248      

#   _________________________________________________________________

#   batch_normalization_4 (Batch (None, 4, 4, 32)          128       

#   _________________________________________________________________

#   max_pooling2d_4 (MaxPooling2 (None, 2, 2, 32)          0         

#   _________________________________________________________________

#   conv2d_5 (Conv2D)            (None, 2, 2, 32)          9248      

#   _________________________________________________________________

#   batch_normalization_5 (Batch (None, 2, 2, 32)          128       

#   _________________________________________________________________

#   up_sampling2d_1 (UpSampling2 (None, 4, 4, 32)          0         

#   _________________________________________________________________

#   conv2d_6 (Conv2D)            (None, 4, 4, 32)          9248      

#   _________________________________________________________________

#   batch_normalization_6 (Batch (None, 4, 4, 32)          128       

#   _________________________________________________________________

#   up_sampling2d_2 (UpSampling2 (None, 8, 8, 32)          0         

#   _________________________________________________________________

#   conv2d_7 (Conv2D)            (None, 8, 8, 64)          18496     

#   _________________________________________________________________

#   batch_normalization_7 (Batch (None, 8, 8, 64)          256       

#   _________________________________________________________________

#   up_sampling2d_3 (UpSampling2 (None, 16, 16, 64)        0         

#   _________________________________________________________________

#   conv2d_8 (Conv2D)            (None, 16, 16, 64)        36928     

#   _________________________________________________________________

#   batch_normalization_8 (Batch (None, 16, 16, 64)        256       

#   _________________________________________________________________

#   up_sampling2d_4 (UpSampling2 (None, 32, 32, 64)        0         

#   _________________________________________________________________

#   conv2d_9 (Conv2D)            (None, 32, 32, 128)       73856     

#   _________________________________________________________________

#   conv2d_10 (Conv2D)           (None, 32, 32, 3)         3459      

#   =================================================================

#   Total params: 258,115

#   Trainable params: 257,219

#   Non-trainable params: 896

#   _________________________________________________________________

#   Train on 45000 samples, validate on 5000 samples

#   Epoch 1/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0440 - acc: 0.4605Epoch 00000: val_loss improved from inf to 0.03986, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 60s - loss: 0.0440 - acc: 0.4605 - val_loss: 0.0399 - val_acc: 0.4995

#   Epoch 2/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0249 - acc: 0.5274Epoch 00001: val_loss improved from 0.03986 to 0.02517, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 51s - loss: 0.0249 - acc: 0.5274 - val_loss: 0.0252 - val_acc: 0.5656

#   Epoch 3/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0217 - acc: 0.5627Epoch 00002: val_loss improved from 0.02517 to 0.02036, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 50s - loss: 0.0217 - acc: 0.5627 - val_loss: 0.0204 - val_acc: 0.5857

#   Epoch 4/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0201 - acc: 0.5839Epoch 00003: val_loss improved from 0.02036 to 0.01957, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 50s - loss: 0.0201 - acc: 0.5839 - val_loss: 0.0196 - val_acc: 0.6014

#   Epoch 5/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0187 - acc: 0.6025Epoch 00004: val_loss improved from 0.01957 to 0.01902, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0188 - acc: 0.6025 - val_loss: 0.0190 - val_acc: 0.6091

#   Epoch 6/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0174 - acc: 0.6198Epoch 00005: val_loss improved from 0.01902 to 0.01697, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 50s - loss: 0.0174 - acc: 0.6198 - val_loss: 0.0170 - val_acc: 0.6136

#   Epoch 7/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0169 - acc: 0.6277Epoch 00006: val_loss improved from 0.01697 to 0.01678, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0169 - acc: 0.6276 - val_loss: 0.0168 - val_acc: 0.6302

#   Epoch 8/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0160 - acc: 0.6367Epoch 00007: val_loss improved from 0.01678 to 0.01571, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0160 - acc: 0.6367 - val_loss: 0.0157 - val_acc: 0.6452

#   Epoch 9/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0155 - acc: 0.6425Epoch 00008: val_loss improved from 0.01571 to 0.01514, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0155 - acc: 0.6425 - val_loss: 0.0151 - val_acc: 0.6481

#   Epoch 10/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0151 - acc: 0.6465Epoch 00009: val_loss improved from 0.01514 to 0.01502, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0151 - acc: 0.6465 - val_loss: 0.0150 - val_acc: 0.6593

#   Epoch 11/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0149 - acc: 0.6458Epoch 00010: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0149 - acc: 0.6456 - val_loss: 0.0164 - val_acc: 0.6290

#   Epoch 12/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0145 - acc: 0.6511Epoch 00011: val_loss improved from 0.01502 to 0.01448, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0145 - acc: 0.6511 - val_loss: 0.0145 - val_acc: 0.6664

#   Epoch 13/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0144 - acc: 0.6541Epoch 00012: val_loss improved from 0.01448 to 0.01445, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0144 - acc: 0.6540 - val_loss: 0.0145 - val_acc: 0.6591

#   Epoch 14/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0141 - acc: 0.6541Epoch 00013: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0141 - acc: 0.6542 - val_loss: 0.0185 - val_acc: 0.6259

#   Epoch 15/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0139 - acc: 0.6576Epoch 00014: val_loss improved from 0.01445 to 0.01408, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 50s - loss: 0.0139 - acc: 0.6575 - val_loss: 0.0141 - val_acc: 0.6688

#   Epoch 16/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0138 - acc: 0.6584Epoch 00015: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0138 - acc: 0.6584 - val_loss: 0.0146 - val_acc: 0.6513

#   Epoch 17/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0136 - acc: 0.6605Epoch 00016: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0136 - acc: 0.6606 - val_loss: 0.0395 - val_acc: 0.6037

#   Epoch 18/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0136 - acc: 0.6585Epoch 00017: val_loss improved from 0.01408 to 0.01364, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 50s - loss: 0.0136 - acc: 0.6586 - val_loss: 0.0136 - val_acc: 0.6676

#   Epoch 19/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0134 - acc: 0.6632Epoch 00018: val_loss improved from 0.01364 to 0.01319, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 50s - loss: 0.0134 - acc: 0.6632 - val_loss: 0.0132 - val_acc: 0.6649

#   Epoch 20/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0132 - acc: 0.6641Epoch 00019: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0132 - acc: 0.6641 - val_loss: 0.0132 - val_acc: 0.6686

#   Epoch 21/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0132 - acc: 0.6652Epoch 00020: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0132 - acc: 0.6653 - val_loss: 0.0136 - val_acc: 0.6735

#   Epoch 22/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0130 - acc: 0.6674Epoch 00021: val_loss improved from 0.01319 to 0.01303, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 48s - loss: 0.0130 - acc: 0.6674 - val_loss: 0.0130 - val_acc: 0.6674

#   Epoch 23/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0130 - acc: 0.6671Epoch 00022: val_loss improved from 0.01303 to 0.01281, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0130 - acc: 0.6671 - val_loss: 0.0128 - val_acc: 0.6771

#   Epoch 24/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0128 - acc: 0.6687Epoch 00023: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0128 - acc: 0.6688 - val_loss: 0.0132 - val_acc: 0.6670

#   Epoch 25/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0127 - acc: 0.6684Epoch 00024: val_loss improved from 0.01281 to 0.01280, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 48s - loss: 0.0127 - acc: 0.6683 - val_loss: 0.0128 - val_acc: 0.6665

#   Epoch 26/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0126 - acc: 0.6704Epoch 00025: val_loss improved from 0.01280 to 0.01227, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 48s - loss: 0.0126 - acc: 0.6704 - val_loss: 0.0123 - val_acc: 0.6797

#   Epoch 27/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0125 - acc: 0.6722Epoch 00026: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0125 - acc: 0.6722 - val_loss: 0.0136 - val_acc: 0.6675

#   Epoch 28/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0127 - acc: 0.6644Epoch 00027: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0127 - acc: 0.6644 - val_loss: 0.0133 - val_acc: 0.6631

#   Epoch 29/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0125 - acc: 0.6703Epoch 00028: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0125 - acc: 0.6703 - val_loss: 0.0136 - val_acc: 0.6755

#   Epoch 30/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0124 - acc: 0.6734Epoch 00029: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0124 - acc: 0.6734 - val_loss: 0.0124 - val_acc: 0.6753

#   Epoch 31/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0124 - acc: 0.6728Epoch 00030: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0124 - acc: 0.6728 - val_loss: 0.0133 - val_acc: 0.6192

#   Epoch 32/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0123 - acc: 0.6725Epoch 00031: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0123 - acc: 0.6725 - val_loss: 0.0130 - val_acc: 0.6693

#   Epoch 33/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0122 - acc: 0.6743Epoch 00032: val_loss improved from 0.01227 to 0.01213, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 50s - loss: 0.0122 - acc: 0.6743 - val_loss: 0.0121 - val_acc: 0.6746

#   Epoch 34/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0123 - acc: 0.6732Epoch 00033: val_loss improved from 0.01213 to 0.01205, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 50s - loss: 0.0123 - acc: 0.6732 - val_loss: 0.0121 - val_acc: 0.6881

#   Epoch 35/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0121 - acc: 0.6748Epoch 00034: val_loss improved from 0.01205 to 0.01194, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 50s - loss: 0.0121 - acc: 0.6747 - val_loss: 0.0119 - val_acc: 0.6633

#   Epoch 36/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0121 - acc: 0.6754Epoch 00035: val_loss improved from 0.01194 to 0.01193, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0121 - acc: 0.6754 - val_loss: 0.0119 - val_acc: 0.6725

#   Epoch 37/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0121 - acc: 0.6756Epoch 00036: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0121 - acc: 0.6757 - val_loss: 0.0128 - val_acc: 0.6809

#   Epoch 38/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0120 - acc: 0.6772Epoch 00037: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0120 - acc: 0.6772 - val_loss: 0.0121 - val_acc: 0.6743

#   Epoch 39/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0120 - acc: 0.6781Epoch 00038: val_loss improved from 0.01193 to 0.01186, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0120 - acc: 0.6781 - val_loss: 0.0119 - val_acc: 0.6720

#   Epoch 40/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0133 - acc: 0.6646Epoch 00039: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0133 - acc: 0.6647 - val_loss: 0.0132 - val_acc: 0.6659

#   Epoch 41/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0122 - acc: 0.6766Epoch 00040: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0122 - acc: 0.6766 - val_loss: 0.0125 - val_acc: 0.6632

#   Epoch 42/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0121 - acc: 0.6761Epoch 00041: val_loss improved from 0.01186 to 0.01170, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0121 - acc: 0.6761 - val_loss: 0.0117 - val_acc: 0.6676

#   Epoch 43/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0119 - acc: 0.6789Epoch 00042: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0119 - acc: 0.6789 - val_loss: 0.0118 - val_acc: 0.6836

#   Epoch 44/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0119 - acc: 0.6802Epoch 00043: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0119 - acc: 0.6802 - val_loss: 0.0119 - val_acc: 0.6769

#   Epoch 45/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0118 - acc: 0.6799Epoch 00044: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0118 - acc: 0.6799 - val_loss: 0.0117 - val_acc: 0.6800

#   Epoch 46/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0119 - acc: 0.6796Epoch 00045: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0119 - acc: 0.6796 - val_loss: 0.0119 - val_acc: 0.6568

#   Epoch 47/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0117 - acc: 0.6810Epoch 00046: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0117 - acc: 0.6810 - val_loss: 0.0117 - val_acc: 0.6662

#   Epoch 48/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0117 - acc: 0.6802Epoch 00047: val_loss improved from 0.01170 to 0.01152, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0117 - acc: 0.6802 - val_loss: 0.0115 - val_acc: 0.6867

#   Epoch 49/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0117 - acc: 0.6806Epoch 00048: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0117 - acc: 0.6806 - val_loss: 0.0116 - val_acc: 0.6573

#   Epoch 50/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0117 - acc: 0.6802Epoch 00049: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0117 - acc: 0.6802 - val_loss: 0.0116 - val_acc: 0.6802

#   Epoch 51/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0116 - acc: 0.6817Epoch 00050: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0116 - acc: 0.6818 - val_loss: 0.0117 - val_acc: 0.6841

#   Epoch 52/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0116 - acc: 0.6818Epoch 00051: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0116 - acc: 0.6818 - val_loss: 0.0117 - val_acc: 0.6847

#   Epoch 53/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0116 - acc: 0.6813Epoch 00052: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0116 - acc: 0.6814 - val_loss: 0.0118 - val_acc: 0.6797

#   Epoch 54/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0116 - acc: 0.6806Epoch 00053: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0116 - acc: 0.6806 - val_loss: 0.0116 - val_acc: 0.6783

#   Epoch 55/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0116 - acc: 0.6811Epoch 00054: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0116 - acc: 0.6811 - val_loss: 0.0128 - val_acc: 0.6348

#   Epoch 56/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0115 - acc: 0.6820Epoch 00055: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0115 - acc: 0.6820 - val_loss: 0.0119 - val_acc: 0.6649

#   Epoch 57/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0114 - acc: 0.6820Epoch 00056: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0114 - acc: 0.6820 - val_loss: 0.0117 - val_acc: 0.6655

#   Epoch 58/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0114 - acc: 0.6829Epoch 00057: val_loss improved from 0.01152 to 0.01145, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0114 - acc: 0.6829 - val_loss: 0.0114 - val_acc: 0.6850

#   Epoch 59/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0114 - acc: 0.6823Epoch 00058: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0114 - acc: 0.6823 - val_loss: 0.0115 - val_acc: 0.6876

#   Epoch 60/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0115 - acc: 0.6814Epoch 00059: val_loss improved from 0.01145 to 0.01134, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0114 - acc: 0.6815 - val_loss: 0.0113 - val_acc: 0.6696

#   Epoch 61/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0114 - acc: 0.6829Epoch 00060: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0114 - acc: 0.6829 - val_loss: 0.0118 - val_acc: 0.6506

#   Epoch 62/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0114 - acc: 0.6825Epoch 00061: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0114 - acc: 0.6824 - val_loss: 0.0114 - val_acc: 0.6833

#   Epoch 63/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0113 - acc: 0.6831Epoch 00062: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0113 - acc: 0.6831 - val_loss: 0.0116 - val_acc: 0.6759

#   Epoch 64/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0113 - acc: 0.6822Epoch 00063: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0113 - acc: 0.6822 - val_loss: 0.0117 - val_acc: 0.6840

#   Epoch 65/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0114 - acc: 0.6831Epoch 00064: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0114 - acc: 0.6831 - val_loss: 0.0114 - val_acc: 0.6862

#   Epoch 66/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0113 - acc: 0.6827Epoch 00065: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0113 - acc: 0.6827 - val_loss: 0.0114 - val_acc: 0.6847

#   Epoch 67/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0113 - acc: 0.6829Epoch 00066: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0113 - acc: 0.6829 - val_loss: 0.0114 - val_acc: 0.6865

#   Epoch 68/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0113 - acc: 0.6826Epoch 00067: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0113 - acc: 0.6826 - val_loss: 0.0115 - val_acc: 0.6858

#   Epoch 69/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0112 - acc: 0.6835Epoch 00068: val_loss improved from 0.01134 to 0.01131, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0112 - acc: 0.6835 - val_loss: 0.0113 - val_acc: 0.6892

#   Epoch 70/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0112 - acc: 0.6841Epoch 00069: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0112 - acc: 0.6841 - val_loss: 0.0113 - val_acc: 0.6868

#   Epoch 71/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0112 - acc: 0.6833Epoch 00070: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0112 - acc: 0.6833 - val_loss: 0.0114 - val_acc: 0.6855

#   Epoch 72/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0112 - acc: 0.6841Epoch 00071: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0112 - acc: 0.6842 - val_loss: 0.0116 - val_acc: 0.6620

#   Epoch 73/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0112 - acc: 0.6838Epoch 00072: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0112 - acc: 0.6837 - val_loss: 0.0116 - val_acc: 0.6792

#   Epoch 74/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0112 - acc: 0.6847Epoch 00073: val_loss improved from 0.01131 to 0.01128, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0112 - acc: 0.6847 - val_loss: 0.0113 - val_acc: 0.6828

#   Epoch 75/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0111 - acc: 0.6841Epoch 00074: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0111 - acc: 0.6841 - val_loss: 0.0116 - val_acc: 0.6780

#   Epoch 76/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0111 - acc: 0.6845Epoch 00075: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0111 - acc: 0.6845 - val_loss: 0.0113 - val_acc: 0.6920

#   Epoch 77/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0111 - acc: 0.6851Epoch 00076: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0111 - acc: 0.6851 - val_loss: 0.0116 - val_acc: 0.6753

#   Epoch 78/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0111 - acc: 0.6838Epoch 00077: val_loss improved from 0.01128 to 0.01125, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0111 - acc: 0.6838 - val_loss: 0.0112 - val_acc: 0.6960

#   Epoch 79/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0111 - acc: 0.6852Epoch 00078: val_loss improved from 0.01125 to 0.01117, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0111 - acc: 0.6851 - val_loss: 0.0112 - val_acc: 0.6799

#   Epoch 80/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0111 - acc: 0.6850Epoch 00079: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0111 - acc: 0.6849 - val_loss: 0.0113 - val_acc: 0.6865

#   Epoch 81/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0111 - acc: 0.6853Epoch 00080: val_loss improved from 0.01117 to 0.01115, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0111 - acc: 0.6853 - val_loss: 0.0112 - val_acc: 0.6866

#   Epoch 82/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0111 - acc: 0.6852Epoch 00081: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0111 - acc: 0.6852 - val_loss: 0.0113 - val_acc: 0.6860

#   Epoch 83/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0110 - acc: 0.6857Epoch 00082: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0110 - acc: 0.6856 - val_loss: 0.0112 - val_acc: 0.6702

#   Epoch 84/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0110 - acc: 0.6846Epoch 00083: val_loss did not improve

#   45000/45000 [==============================] - 50s - loss: 0.0110 - acc: 0.6846 - val_loss: 0.0112 - val_acc: 0.6790

#   Epoch 85/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0111 - acc: 0.6856Epoch 00084: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0111 - acc: 0.6856 - val_loss: 0.0113 - val_acc: 0.6853

#   Epoch 86/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0110 - acc: 0.6856Epoch 00085: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0110 - acc: 0.6856 - val_loss: 0.0113 - val_acc: 0.6638

#   Epoch 87/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0110 - acc: 0.6853Epoch 00086: val_loss improved from 0.01115 to 0.01114, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0110 - acc: 0.6854 - val_loss: 0.0111 - val_acc: 0.6874

#   Epoch 88/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0110 - acc: 0.6850Epoch 00087: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0110 - acc: 0.6850 - val_loss: 0.0113 - val_acc: 0.6897

#   Epoch 89/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0110 - acc: 0.6859Epoch 00088: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0110 - acc: 0.6859 - val_loss: 0.0115 - val_acc: 0.6923

#   Epoch 90/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0110 - acc: 0.6860Epoch 00089: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0110 - acc: 0.6860 - val_loss: 0.0115 - val_acc: 0.6836

#   Epoch 91/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0110 - acc: 0.6845Epoch 00090: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0110 - acc: 0.6845 - val_loss: 0.0112 - val_acc: 0.6831

#   Epoch 92/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0110 - acc: 0.6862Epoch 00091: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0110 - acc: 0.6862 - val_loss: 0.0112 - val_acc: 0.6934

#   Epoch 93/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0110 - acc: 0.6865Epoch 00092: val_loss improved from 0.01114 to 0.01110, saving model to Denoising_Model_Final.h5

#   45000/45000 [==============================] - 49s - loss: 0.0110 - acc: 0.6865 - val_loss: 0.0111 - val_acc: 0.6784

#   Epoch 94/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0110 - acc: 0.6861Epoch 00093: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0110 - acc: 0.6860 - val_loss: 0.0113 - val_acc: 0.6819

#   Epoch 95/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0109 - acc: 0.6864Epoch 00094: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0109 - acc: 0.6864 - val_loss: 0.0112 - val_acc: 0.6863

#   Epoch 96/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0109 - acc: 0.6865Epoch 00095: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0109 - acc: 0.6865 - val_loss: 0.0112 - val_acc: 0.6869

#   Epoch 97/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0109 - acc: 0.6869Epoch 00096: val_loss did not improve

#   45000/45000 [==============================] - 48s - loss: 0.0109 - acc: 0.6868 - val_loss: 0.0112 - val_acc: 0.6937

#   Epoch 98/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0108 - acc: 0.6870Epoch 00097: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0108 - acc: 0.6869 - val_loss: 0.0112 - val_acc: 0.6693

#   Epoch 99/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0109 - acc: 0.6878Epoch 00098: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0109 - acc: 0.6877 - val_loss: 0.0112 - val_acc: 0.6844

#   Epoch 100/100

#   44928/45000 [============================>.] - ETA: 0s - loss: 0.0109 - acc: 0.6868Epoch 00099: val_loss did not improve

#   45000/45000 [==============================] - 49s - loss: 0.0109 - acc: 0.6868 - val_loss: 0.0112 - val_acc: 0.6816


'''
## Ploting the Accuracy and Loss Graph
'''

# Plot the test accuracy
plt.plot(hist.history['acc'])
plt.plot(hist.history['val_acc'])
plt.title('Model accuracy')
plt.ylabel('Accuracy')
plt.xlabel('Epoch')
plt.legend(['Train', 'Validation', 'Test'], loc='upper left')
plt.show()

# Plot the test loss
plt.plot(hist.history['loss'])
plt.plot(hist.history['val_loss'])
plt.title('Model loss')
plt.ylabel('Loss')
plt.xlabel('Epoch')
plt.legend(['Train', 'Validation', 'Test'], loc='upper left')
plt.show()
# Output:
#   <Figure size 432x288 with 1 Axes>
#   <Figure size 432x288 with 1 Axes>

'''
## Performing Evaluation Metrics
'''

import tensorflow as tf
import numpy as np
import warnings
from sklearn.exceptions import ConvergenceWarning
warnings.filterwarnings('ignore', category=ConvergenceWarning)
warnings.filterwarnings('ignore', category=RuntimeWarning)
warnings.filterwarnings('ignore', category=FutureWarning)


# Set GPU memory limit to 3GB
config = tf.ConfigProto()
config.gpu_options.per_process_gpu_memory_fraction = 0.75
sess = tf.Session(config=config)

# Load CIFAR-10 dataset
(x_train, _), (x_test, _) = tf.keras.datasets.cifar10.load_data()

# Normalize pixel values
x_test = x_test.astype('float32') / 255.

 
# Add random noise to the images
noise_factor = 0.5
x_test_noisy = x_test + noise_factor * np.random.normal(loc=0.0, scale=1.0, size=x_test.shape)


autoencoder = tf.keras.models.load_model('Denoising_Model_Final.h5')

# Generate denoised images using the trained autoencoder
denoised_images = autoencoder.predict(x_test_noisy)

# Compute mean squared error (MSE)
mse = np.mean(np.square(x_test - denoised_images))


# Print the MSE 
print('MSE: {:.4f}'.format(mse))
# Output:
#   MSE: 0.0112


import tensorflow as tf
import numpy as np
from sklearn.metrics import classification_report
import warnings
from sklearn.exceptions import ConvergenceWarning
warnings.filterwarnings('ignore', category=ConvergenceWarning)
warnings.filterwarnings('ignore', category=RuntimeWarning)
warnings.filterwarnings('ignore', category=FutureWarning)

(x_train, _), (x_test, _) = tf.keras.datasets.cifar10.load_data()

# Load the saved model
autoencoder = tf.keras.models.load_model('Denoising_Model_Final.h5')

# Add random noise to the images
noise_factor = 0.5
x_test_noisy = x_test + noise_factor * np.random.normal(loc=0.0, scale=1.0, size=x_test.shape)


#Reshape training and noisy data to (50000, 32, 32, 3)
x_test = x_test.reshape(len(x_test), 32, 32, 3)

x_test_noisy = x_test_noisy.reshape(len(x_test_noisy), 32, 32, 3)

# Evaluate the model on the test set
test_loss, test_accuracy = autoencoder.evaluate(x_test_noisy, x_test)

# Print the test loss and accuracy
print('Test Loss:', test_loss)
print('Test Accuracy:', test_accuracy)

# Output:
#   10000/10000 [==============================] - 8s      ETA: 

#   Test Loss: 22982.151671875

#   Test Accuracy: 0.33795732421875


'''
## Predicting on Test Images
'''

# Load the saved model
autoencoder = tf.keras.models.load_model('Denoising_Model_Final.h5')

## Function Definition
def visualize_data(data, row, column):
    data = data.reshape(data.shape[0], 32,32,3)
    count = 0
    fig, axes = plt.subplots(row, column, figsize = (20,5))
    for i in range(row):
        for j in range(column):
            axes[i,j].imshow(data[count], interpolation='nearest')
            count+=1


## FUnction call            
visualize_data(x_test_noisy[:20], 2,10)         ## Noisy data

pred = autoencoder.predict(x_test_noisy[:20]) 
visualize_data(pred, 2, 10)                     ##Denoised data

visualize_data(x_test[:20], 2,10)               ##Original input
# Output:
#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   <Figure size 1440x360 with 20 Axes>
#   <Figure size 1440x360 with 20 Axes>
#   <Figure size 1440x360 with 20 Axes>

'''
## Predicting with our own image (Smaller Resolution)
'''

import os
import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np
from skimage.transform import resize

# Load the saved model
autoencoder = tf.keras.models.load_model('Denoising_Model_Final.h5')

# Set the path to the directory containing the images
image_dir = 'Images/'

# Loop through all image files in the directory
fig = plt.figure(figsize=(15,30))
counter = 0
for filename in os.listdir(image_dir):
    if filename.endswith('.jpg') or filename.endswith('.jpeg') or filename.endswith('.png') or filename.endswith('.JPG'):

        img_path = os.path.join(image_dir, filename)    
        # Load the image
        img = plt.imread(img_path)
        inpu=img.copy()

        img = img.astype('float32') / 255.

        ## Creating Noisy Image
        noise_factor = 0.5
        img = img + noise_factor * np.random.normal(loc=0.0, scale=1.0, size=img.shape)

        # Resize the image to 32x32
        img_noisy = resize(img, (32, 32))

        # Preprocess the image
        img = np.reshape(img_noisy, (1, 32, 32, 3))

        # Denoise the image
        denoised_img = autoencoder.predict(img)

        # Display the original and denoised image side by side
        ax = fig.add_subplot(20, 3, counter*3+1)
        ax.imshow(inpu)
        ax.set_title('Original Image')
        ax.axis('off')
        
        ax = fig.add_subplot(20, 3, counter*3+2)
        ax.imshow(img_noisy)
        ax.set_title('Noisy Image')
        ax.axis('off')
        
        ax = fig.add_subplot(20, 3, counter*3+3)
        ax.imshow(denoised_img[0])
        ax.set_title('Denoised Image')
        ax.axis('off')

        counter += 1

plt.subplots_adjust(wspace=0.1, hspace=0.4)
plt.show()

# Output:
#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   <Figure size 1080x2160 with 60 Axes>

'''
## Predicting with our own image (Large Resolution)
'''

import os
import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np
from skimage.transform import resize

# Load the saved model
autoencoder = tf.keras.models.load_model('Denoising_Model_Final.h5')

# Set the path to the directory containing the images
image_dir = 'Images/'

# Loop through all image files in the directory
fig = plt.figure(figsize=(20, 40))
counter = 0
for filename in os.listdir(image_dir):
    if filename.endswith('.jpg') or filename.endswith('.jpeg') or filename.endswith('.png') or filename.endswith('.JPG'):

        img_path = os.path.join(image_dir, filename)    
        # Load the image
        img = plt.imread(img_path)
        inpu=img.copy()

        img = img.astype('float32') / 255.

        ## Creating Noisy Image
        noise_factor = 0.5
        img = img + noise_factor * np.random.normal(loc=0.0, scale=1.0, size=img.shape)

        # Resize the image to 32x32
        img_noisy = resize(img, (32, 32))

        # Preprocess the image
        img = np.reshape(img_noisy, (1, 32, 32, 3))

        # Denoise the image
        denoised_img = autoencoder.predict(img)

        # Display the original and denoised image side by side
        ax = fig.add_subplot(len(os.listdir(image_dir)), 3, counter+1, xticks=[], yticks=[])
        ax.imshow(inpu)
        ax.set_title('Original Image')
        counter += 1

        ax = fig.add_subplot(len(os.listdir(image_dir)), 3, counter+1, xticks=[], yticks=[])
        ax.imshow(img_noisy)
        ax.set_title('Noisy Image')
        counter += 1

        ax = fig.add_subplot(len(os.listdir(image_dir)), 3, counter+1, xticks=[], yticks=[])
        ax.imshow(denoised_img[0])
        ax.set_title('Denoised Image')
        counter += 1

plt.tight_layout()
plt.show()

# Output:
#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

#   <Figure size 1440x2880 with 60 Axes>


================================================
File: K-Means with PCA.ipynb
================================================
# Jupyter notebook converted to Python script.

'''
## Model Training using K-means with PCA
'''

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA
from sklearn.preprocessing import scale
from sklearn.metrics import accuracy_score
import warnings
from sklearn.exceptions import ConvergenceWarning
warnings.filterwarnings('ignore', category=ConvergenceWarning)
warnings.filterwarnings('ignore', category=RuntimeWarning)
warnings.filterwarnings('ignore', category=FutureWarning)


# Load the CIFAR-10 dataset
(X_train, y_train), (X_test, y_test) =  tf.keras.datasets.cifar10.load_data()

# Reshape the dataset to 2D array
n_samples_train = len(X_train)
X_train = X_train.reshape((n_samples_train, -1))
n_samples_test = len(X_test)
X_test = X_test.reshape((n_samples_test, -1))

# Scale the dataset
X_train = X_train.astype('float32') / 255
X_test = X_test.astype('float32') / 255


# Perform PCA to reduce the dimensionality of the dataset
pca = PCA(n_components=250)
X_train = pca.fit_transform(X_train)


# Train the K-Means model
n_clusters = 10
kmeans = KMeans(n_clusters=n_clusters, random_state=40,n_jobs=-1).fit_predict(X_train)

'''
## Saving and loading the model
'''

import pickle

# Save the K-Means model using pickle
with open('kmeans_model.pkl', 'wb') as f:
    pickle.dump(kmeans, f)

# Load the K-Means model using pickle
with open('kmeans_model.pkl', 'rb') as f:
    kmeans_loaded = pickle.load(f)


'''
## Visualizing the cluster points
'''

# Set the figure size and resolution
fig = plt.figure(figsize=(10, 8))

# Plot the results
plt.scatter(X_train[:, 0], X_train[:, 1], c=kmeans)
# Output:
#   <matplotlib.collections.PathCollection at 0x254d2cb8588>
#   <Figure size 720x576 with 1 Axes>

'''
## Performing Evaluation Metrics
'''

from sklearn.metrics import silhouette_score, davies_bouldin_score


# Evaluate clustering with Silhouette Score and Davies-Bouldin Score
silhouette = silhouette_score(X_train, kmeans)
s_kmeans = silhouette_score(X_train, kmeans)
davies_bouldin = davies_bouldin_score(X_train, kmeans)
db_kmeans = davies_bouldin_score(X_train, kmeans)
print(f'K-means clustering results: Silhouette Score = {silhouette}, Davies-Bouldin Score = {davies_bouldin}')
# Output:
#   K-means clustering results: Silhouette Score = 0.053833719342947006, Davies-Bouldin Score = 2.7032070192496938


kmeans = KMeans(n_clusters=n_clusters, random_state=42)
kmeans.fit(X_train)
cluster_labels = np.zeros((n_clusters,))
for i in range(n_clusters):
    mask = kmeans.labels_ == i
    class_counts = np.bincount(y_train[mask].flatten())
    cluster_labels[i] = np.argmax(class_counts)

'''
## Checking the test accuracy
'''

# Load the test data
import tensorflow as tf
(X_test, y_test), _ = tf.keras.datasets.cifar10.load_data()
X_test = X_test.reshape(X_test.shape[0], -1)

# Scale the dataset
X_test = X_test.astype('float32') / 255


# Perform PCA to reduce the dimensionality of the test dataset
X_test = pca.transform(X_test)


# Predict the cluster for each test sample
test_clusters = kmeans.predict(X_test)

# Map each cluster to a predicted class label
predicted_labels = []
for cluster in test_clusters:
    predicted_labels.append(cluster_labels[cluster])

# Calculate the accuracy of the predictions
accuracy = np.mean(np.array(predicted_labels) == y_test.flatten())
print('Accuracy: {:.2f}%'.format(accuracy*100))

# Output:
#   Accuracy: 22.11%


'''
## Predicting on test set images
'''

import matplotlib.pyplot as plt
from PIL import Image
import numpy as np

# Load the CIFAR-10 dataset
(X_train, y_train), (X_test, y_test) =  tf.keras.datasets.cifar10.load_data()

fig, axes = plt.subplots(5, 5, figsize=(10, 8))
for i, ax in enumerate(axes.ravel()):
    if i < len(X_test):
        img = X_test[i+500]
        img_arr = X_test[i].reshape(1, -1)             ##Reshaping
        img_arr = img_arr.astype('float32') / 255      ##Normalizaing
        img_arr = pca.transform(img_arr)               ##Transforming the test data
        result = kmeans.predict(img_arr)               ##Making Predictions
        class_index = result[0]
        class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
        predicted_class_name = class_names[class_index]
        ax.imshow(img.reshape(32, 32, 3))
        ax.set_title(predicted_class_name)
        ax.axis('off')
plt.tight_layout()
plt.show()

# Output:
#   <Figure size 720x576 with 25 Axes>

'''
## Predicting with our own images
'''

import os
import matplotlib.pyplot as plt
from tensorflow.python.keras.preprocessing import image
from PIL import Image
import numpy as np

# Set the path to the directory containing the images
image_dir = 'G:/OneDrive - UCLan/Parthiban MS in ADS/Semester 2/Visual Information Processing/Course Work/Images/'

# Define the class names
class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']

# Define the figure size and number of rows and columns
fig_size = (10, 10)
rows = 2
cols = 10

# Create the figure and axes
fig, axes = plt.subplots(rows, cols, figsize=fig_size)
axes = axes.ravel()

# Loop through all image files in the directory
for i, filename in enumerate(os.listdir(image_dir)):
    if filename.endswith('.jpg') or filename.endswith('.jpeg') or filename.endswith('.png') or filename.endswith('.JPG'):
        # Load the image and convert to numpy array
        img_path = os.path.join(image_dir, filename)

        img = image.load_img(img_path, target_size=(32, 32)) ## Loading image with size 32*32
        img_arr = np.array(img)                              ## Converting image to array
        img_arr = img_arr.reshape(1, -1)                     ## Reshaping to 1D array
        img_arr = img_arr.astype('float32') / 255            ## Normalizing the pixel values between 0 and 1
        img_arr = pca.transform(img_arr)                     ## Transforming the test set data using PCA

        # Predict the class of the image
        result = kmeans.predict(img_arr)
        class_index = result[0]
        predicted_class_name = class_names[class_index]

        # Plot the image and its predicted class
        axes[i].imshow(img)
        axes[i].set_title(predicted_class_name)
        axes[i].axis('off')

# Show the figure
plt.tight_layout()
plt.show()

# Output:
#   <Figure size 720x720 with 20 Axes>


================================================
File: Support Vector Classifier.ipynb
================================================
# Jupyter notebook converted to Python script.

'''
## Model Training on SVC
'''

import numpy as np
from sklearn import svm
import tensorflow as tf
from sklearn.metrics import accuracy_score
import os
os.environ['CUDA_VISIBLE_DEVICES'] = '0'  # Set the visible GPU device number


# Load the CIFAR-10 dataset
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.cifar10.load_data()

# Preprocess the data
x_train = x_train.reshape(x_train.shape[0], -1)
x_test = x_test.reshape(x_test.shape[0], -1)
x_train = x_train.astype('float32') / 255
x_test = x_test.astype('float32') / 255

# Train an SVM with RBF kernel on GPU and CPU
with tf.device('/device:GPU:0'):
    clf = svm.SVC(kernel='rbf',verbose=1)

with tf.device('/device:CPU:0'):
    clf.n_jobs = -1
    clf.fit(x_train, y_train.ravel())

# Evaluate the SVM on GPU and CPU
with tf.device('/device:GPU:0'):
    y_pred = clf.predict(x_test)

with tf.device('/device:CPU:0'):
    accuracy = accuracy_score(y_test, y_pred)
    print('Accuracy:', accuracy)

# Output:
#   [LibSVM]Accuracy: 0.5436


'''
## Saving the Model
'''

import pickle

# Save the SVM model to a file
with open('svm_model.pkl', 'wb') as f:
    pickle.dump(clf, f)

'''
## Load the Saved Model
'''

# Load the SVM model from the file
import pickle
with open('svm_model.pkl', 'rb') as f:
    clf_loaded = pickle.load(f)

'''
## Performing Evaluation Metrics
'''

import pickle
import tensorflow as tf
import numpy as np
from sklearn.metrics import classification_report
from sklearn.metrics import accuracy_score
import warnings
from sklearn.exceptions import ConvergenceWarning
warnings.filterwarnings('ignore', category=ConvergenceWarning)
warnings.filterwarnings('ignore', category=RuntimeWarning)
warnings.filterwarnings('ignore', category=FutureWarning)

(x_train, y_train), (x_test, y_test) = tf.keras.datasets.cifar10.load_data()  ## Loading the dataset


x_test = x_test.astype('float32') / 255       ## Normalizing the pixel values within 0 and 1
x_test = x_test.reshape(x_test.shape[0], -1)  ## Reshaping the values to 1D array
    


# Calculate the accuracy of the predictions
accuracy = accuracy_score(y_test, y_pred)
print('Accuracy: {:.2f}'.format(accuracy))



# Generate the classification report
report = classification_report(y_test, y_pred)

print(report)
# Output:
#   Accuracy: 0.54

#                 precision    recall  f1-score   support

#   

#              0       0.61      0.62      0.62      1000

#              1       0.64      0.65      0.64      1000

#              2       0.42      0.41      0.41      1000

#              3       0.38      0.39      0.38      1000

#              4       0.47      0.43      0.45      1000

#              5       0.49      0.43      0.46      1000

#              6       0.54      0.64      0.58      1000

#              7       0.63      0.57      0.60      1000

#              8       0.65      0.69      0.67      1000

#              9       0.59      0.61      0.60      1000

#   

#       accuracy                           0.54     10000

#      macro avg       0.54      0.54      0.54     10000

#   weighted avg       0.54      0.54      0.54     10000

#   


'''
## Predicting with our own images
'''

import os
from tensorflow.python.keras.preprocessing import image
import matplotlib.pyplot as plt
import numpy as np


    
# Define the class names
class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']

# Set the path to the directory containing the images
image_dir = 'Images/'

# Loop through all image files in the directory
fig = plt.figure(figsize=(10,8))
counter = 0
for filename in os.listdir(image_dir):
    if filename.endswith('.jpg') or filename.endswith('.jpeg') or filename.endswith('.png') or filename.endswith('.JPG'):
        
        # Print the filename for debugging purposes
        img_path = os.path.join(image_dir, filename)          
        img = image.load_img(img_path, target_size=(32, 32))  ## Loading image with size 32*32
        img_array = image.img_to_array(img)                   ## Converting image to array
        img_array = img_array.astype('float32') / 255         ## Normalizing the pixel values between 0 and 1
        img_array = img_array.reshape(1,-1)                   ## Reshaping to 1D array

        # Predict the class of the image
        result = clf_loaded.predict(img_array)
        class_index = result[0]
        predicted_class_name = class_names[class_index]

        # Plot the image and its predicted class
        plt.subplot(1, 5, counter%5+1)
        plt.imshow(img)
        plt.title(predicted_class_name)
        plt.xticks([])
        plt.yticks([])
        counter += 1
        
        # Create a new row of images after every 5 images
        if counter % 5 == 0:
            plt.show()
            plt.figure(figsize=(10, 8))
    
# Show any remaining images that haven't been displayed yet
if counter % 5 != 0:
    plt.show()

# Output:
#   <Figure size 720x576 with 5 Axes>
#   <Figure size 720x576 with 5 Axes>
#   <Figure size 720x576 with 5 Axes>
#   <Figure size 720x576 with 5 Axes>
#   <Figure size 720x576 with 0 Axes>

'''
## Predicting on test set images
'''

import matplotlib.pyplot as plt
from PIL import Image
import numpy as np

# Define the class names
class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']

# Define the number of rows and columns in the grid
rows = 5
cols = 6

# Create a new figure for the grid
fig = plt.figure(figsize=(20,10))

# Loop through a subset of the images
for i in range(rows*cols):
    # Get the image and preprocess it
    img = x_test[i+5000]
    img_arr = img.reshape(1,-1)
    
    # Make a prediction with the SVM
    result = clf_loaded.predict(img_arr)
    
    # Get the predicted class name
    class_index = result[0]
    predicted_class_name = class_names[class_index]
    
    # Add the image and label to the grid
    ax = fig.add_subplot(rows, cols, i+1)
    ax.imshow(img.reshape(32, 32, 3))
    ax.set_title(predicted_class_name)
    ax.axis('off')
    
# Show the grid of images
plt.subplots_adjust(wspace=0.5, hspace=0.5)
plt.show()

# Output:
#   <Figure size 1440x720 with 30 Axes>


"
    },
    "docker-llm-sql-gpu-stack": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
# ChatDB GPU - Docker Setup Guide

This repository contains a Docker-based setup for running a Streamlit application with Ollama, optimized for GPU usage, supporting both .GGUF and Ollama models.

## Prerequisites

### System Requirements
- NVIDIA GPU
- Docker Desktop
- WSL2 (for Windows users)
- NVIDIA GPU drivers
- NVIDIA Container Toolkit

### Windows-Specific Setup
1. Install and Configure WSL2
   ```bash
   wsl --install
   wsl --set-default-version 2
   ```

2. Docker Desktop Settings
   - Enable 'Use WSL 2 based engine' in Settings > General
   - Enable WSL Integration in Settings > Resources > WSL Integration

3. Verify GPU Support
   ```bash
   docker run --gpus all nvidia/cuda:12.4.0-base-ubuntu22.04 nvidia-smi
   ```

## Installation

1. Pull Docker Images
   ```bash
   docker pull parthi97/llm-sql-gpu:latest
   docker pull parthi97/ollama:latest
   ```

2. Create `docker-compose.yml`
   ```yaml
   version: '3.8'
   services:
     streamlit:
       image: parthi97/llm-sql-gpu:latest
       ports:
         - '8501:8501'
       deploy:
         resources:
           reservations:
             devices:
               - driver: nvidia
                 count: 1
                 capabilities: [gpu]
       networks:
         - llm_network
       environment:
         - OLLAMA_HOST=http://host.docker.internal:11434
         - NVIDIA_VISIBLE_DEVICES=all
         - NVIDIA_DRIVER_CAPABILITIES=compute,utility
       volumes:
         - model_data:/app/models
       depends_on:
         - ollama

     ollama:
       image: parthi97/ollama:latest
       ports:
         - '11434:11434'
       environment:
         - OLLAMA_HOST=0.0.0.0
         - OLLAMA_MODELS_MEMORY_USAGE=60
         - CUDA_VISIBLE_DEVICES=0
         - NVIDIA_VISIBLE_DEVICES=all
         - NVIDIA_DRIVER_CAPABILITIES=compute,utility
         - CUDA_LAUNCH_BLOCKING=1
         - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
       deploy:
         resources:
           reservations:
             devices:
               - driver: nvidia
                 count: 1
                 capabilities: [gpu]
               options:
                 memory: 3G
       volumes:
         - model_data:/root/.ollama
       networks:
         - llm_network

   networks:
     llm_network:
       driver: bridge

   volumes:
     model_data:
   ```

## Running the Application

### Method : Using Command Line (From the current working directory)
```bash
docker-compose up
```

## Container Management

### Stopping Running Containers

Before setting up .GGUF models, you should stop any running streamlit containers to prevent conflicts:

1. List running containers:
   ```bash
   docker ps
   ```

2. Stop Streamlit container:
   ```bash
   docker stop <STREAMLIT_CONTAINER_ID>
   ```



### Example Workflow

Here's a step-by-step example of stopping containers and setting up a .GGUF model:

1. List running containers:
   ```bash
   # This will show container IDs and names
   docker ps
   ```
   Example output:
   ```
   CONTAINER ID   IMAGE                           NAMES
   a1b2c3d4e5f6   parthi97/llm-sql-gpu:latest     chatdb_streamlit
   ```

2. Stop the containers:
   ```bash
   # Replace with your actual container IDs
   docker stop a1b2c3d4e5f6  # Streamlit container
   ```

## .GGUF Model Setup

### Mounting .GGUF Models

To use a local .GGUF model:

1. Prepare your .GGUF file:
   - Ensure the model is in an accessible location
   - Use the full, absolute path to the model file

2. Run the container with model mounting:
   ```bash
   docker run --gpus all \
     -v <FULL_PATH_TO_GGUF_MODEL>:/app/models/model.gguf \
     -p 8501:8501 \
     parthi97/llm-sql-gpu:latest
   ```

### Real-World Example

For Windows users with a model in `G:\chatdb_llm\models\`:

```bash
# Example with a specific model
docker run --gpus all \
  -v G:\chatdb_llm\models\natural-sql-7b.Q4_K_M.gguf:/app/models/model.gguf \
  -p 8501:8501 \
  parthi97/llm-sql-gpu:latest
```



2. In the Streamlit UI:
   - Under 'Model Path' input field, enter: `/app/models/model.gguf`
   - This path maps to your locally mounted .GGUF file

### Using Ollama Models
1. First, identify the Ollama container ID:
   ```bash
   docker ps
   ```
   Look for the container running the `parthi97/ollama:latest` image

2. Pull the desired model using the container ID:
   ```bash
   docker exec -it <container_id> ollama pull <model_name>
   ```

   Example:
   ```bash
   docker exec -it 8ff644f8a2c7 ollama pull llama3.1:8b
   ```

3. In the Streamlit UI:
   - Select 'Ollama' as your model type
   - Choose the pulled model from the available options

### Model Usage Best Practices
1. For .GGUF Models:
   - Ensure the model file is in a location accessible to Docker
   - Use absolute paths when mounting volumes
   - Verify file permissions are correct

2. For Ollama Models:
   - Pull models after the container is running
   - Monitor GPU memory usage while pulling models
   - Consider available GPU memory when selecting models

3. General Recommendations:
   - Start with smaller models if GPU memory is limited
   - Monitor system resources during model loading
   - Ensure proper model path configuration in Streamlit UI

## Accessing the Application
- Streamlit Interface: http://localhost:8501
- Ollama API: http://localhost:11434

## Verification and Troubleshooting

### Check Container Status
```bash
docker ps
docker-compose logs streamlit
docker-compose logs ollama
```

### Verify GPU Access
```bash
nvidia-smi
docker run --gpus all nvidia/cuda:12.4.0-base-ubuntu22.04 nvidia-smi
```

### Common Issues and Solutions
1. GPU not detected:
   - Verify NVIDIA drivers are installed
   - Check Docker Desktop GPU settings
   - Ensure WSL2 GPU support is enabled

2. Container fails to start:
   - Check docker-compose logs
   - Verify all ports are available
   - Ensure sufficient GPU memory

3. Model-Related Issues:
   - Model Not Found:
     - Verify the correct path is mounted for .GGUF models
     - Check if Ollama models were pulled successfully
     - Ensure proper permissions on model files
   
   - GPU Memory Issues:
     - Monitor GPU memory usage with `nvidia-smi`
     - Consider using quantized models for better memory efficiency
     - Close other GPU-intensive applications
   
   - Model Loading Errors:
     - Check container logs for specific error messages
     - Verify model compatibility with the system
     - Ensure sufficient disk space for model files

## Stopping the Application
```bash
docker-compose down        # Stop containers
docker-compose down -v     # Stop containers and remove volumes
```

## Resource Requirements
- Minimum 4GB GPU Memory
- Approximately 10GB Disk Space for images
- NVIDIA GPU with CUDA support


================================================
File: docker-compose.yml
================================================
version: '3.8'
services:
  streamlit:
    image: parthi97/llm-sql-gpu:latest
    ports:
      - '8501:8501'
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - llm_network
    environment:
      - OLLAMA_HOST=http://host.docker.internal:11434
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    volumes:
      - model_data:/app/models
    depends_on:
      - ollama

  ollama:
    image: parthi97/ollama:latest  # Updated image name
    ports:
      - '11434:11434'
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_MODELS_MEMORY_USAGE=60
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - CUDA_LAUNCH_BLOCKING=1
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
              options:
                memory: 3G
    volumes:
      - model_data:/root/.ollama
    networks:
      - llm_network

networks:
  llm_network:
    driver: bridge

volumes:
  model_data:

================================================
File: sample-movies-db.sql
================================================
CREATE DATABASE  IF NOT EXISTS `moviesdb` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;
USE `moviesdb`;
-- MySQL dump 10.13  Distrib 8.0.31, for Win64 (x86_64)
--
-- Host: localhost    Database: moviesdb
-- ------------------------------------------------------
-- Server version 8.0.31

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `actors`
--

DROP TABLE IF EXISTS `actors`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `actors` (
  `actor_id` int unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(45) NOT NULL,
  `birth_year` year DEFAULT NULL,
  PRIMARY KEY (`actor_id`)
) ENGINE=InnoDB AUTO_INCREMENT=171 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `actors`
--

LOCK TABLES `actors` WRITE;
/*!40000 ALTER TABLE `actors` DISABLE KEYS */;
INSERT INTO `actors` VALUES (50,'Yash',1986),(51,'Sanjay Dutt',1959),(52,'Benedict Cumberbatch',1976),(53,'Elizabeth Olsen',1989),(54,'Chris Hemsworth',1983),(55,'Natalie Portman',1981),(56,'Tom Hiddleston',1981),(57,'Amitabh Bachchan',1942),(58,'Jaya Bachchan',1948),(59,'Shah Rukh Khan',1965),(60,'Kajol',1974),(61,'Aamir Khan',1965),(62,'R. Madhavan',1970),(63,'Sharman Joshi',1979),(64,'Hrithik Roshan',1974),(65,'Ranveer Singh',1985),(66,'Deepika Padukone',1986),(67,'Tim Robbins',1958),(68,'Morgan Freeman',1937),(69,'Leonardo DiCaprio',1974),(70,'Ken Watanabe',1959),(71,'Matthew McConaughey',1969),(72,'Anne Hathaway',1982),(73,'John David Washington',1984),(74,'Robert Pattinson',1986),(75,'Will Smith',1968),(76,'Thandiwe Newton',1972),(77,'Russell Crowe',1964),(78,'Joaquin Phoenix',1974),(79,'Kate Winslet',1975),(80,'James Stewart',1908),(81,'Donna Reed',1921),(82,'Sam Worthington',1976),(83,'Zoe Saldana',1978),(84,'Marlon Brando',1924),(85,'Al Pacino',1940),(86,'Christian Bale',1974),(87,'Heath Ledger',1979),(88,'Liam Neeson',1952),(89,'Ben Kingsley',1943),(90,'Sam Neill',1947),(91,'Laura Dern',1967),(92,'Song Kang-ho',1967),(93,'Lee Sun-kyun',1975),(94,'Robert Downey Jr.',1965),(95,'Chris Evans',1981),(150,'Kanu Banerjee',1905),(151,'Karuna Banerjee',1919),(152,'Darsheel Safary',1997),(153,'Sunil Dutt',1929),(154,'Anushka Sharma',1988),(155,'Ranbir Kapoor',1982),(156,'Allu Arjun',1982),(157,'Fahadh Faasil',1982),(158,'N. T. Rama Rao Jr.',1983),(159,'Ram Charan',1985),(160,'Prabhas',1979),(161,'Rana Daggubati',1984),(162,'Mithun Chakraborty',1950),(163,'Anupam Kher',1955),(164,'Salman Khan',1965),(165,'Nawazuddin Siddiqui',1967),(166,'Tommy Lee Jones',1946),(167,'Sebastian Stan',1982),(168,'Anil Kapoor',1956),(169,'Sidharth Malhotra',1985),(170,'Kiara Advani',1991);
/*!40000 ALTER TABLE `actors` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `financials`
--

DROP TABLE IF EXISTS `financials`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `financials` (
  `movie_id` int unsigned NOT NULL,
  `budget` decimal(10,2) DEFAULT NULL,
  `revenue` decimal(10,2) DEFAULT NULL,
  `unit` enum('Units','Thousands','Millions','Billions') DEFAULT NULL,
  `currency` char(3) DEFAULT NULL,
  PRIMARY KEY (`movie_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `financials`
--

LOCK TABLES `financials` WRITE;
/*!40000 ALTER TABLE `financials` DISABLE KEYS */;
INSERT INTO `financials` VALUES (101,1.00,12.50,'Billions','INR'),(102,200.00,954.80,'Millions','USD'),(103,165.00,644.80,'Millions','USD'),(104,180.00,854.00,'Millions','USD'),(105,250.00,670.00,'Millions','USD'),(107,400.00,2000.00,'Millions','INR'),(108,550.00,4000.00,'Millions','INR'),(109,390.00,1360.00,'Millions','INR'),(110,1.40,3.50,'Billions','INR'),(111,25.00,73.30,'Millions','USD'),(113,165.00,701.80,'Millions','USD'),(114,205.00,365.30,'Millions','USD'),(115,55.00,307.10,'Millions','USD'),(116,103.00,460.50,'Millions','USD'),(117,200.00,2202.00,'Millions','USD'),(118,3.18,3.30,'Millions','USD'),(119,237.00,2847.00,'Millions','USD'),(120,7.20,291.00,'Millions','USD'),(121,185.00,1006.00,'Millions','USD'),(122,22.00,322.20,'Millions','USD'),(123,63.00,1046.00,'Millions','USD'),(124,15.50,263.10,'Millions','USD'),(125,400.00,2798.00,'Millions','USD'),(126,400.00,2048.00,'Millions','USD'),(127,70000.00,100000.00,'Thousands','INR'),(128,120.00,1350.00,'Millions','INR'),(129,100.00,410.00,'Millions','INR'),(130,850.00,8540.00,'Millions','INR'),(131,1.00,5.90,'Billions','INR'),(132,2.00,3.60,'Billions','INR'),(133,5.50,12.00,'Billions','INR'),(134,1.80,6.50,'Billions','INR'),(135,250.00,3409.00,'Millions','INR'),(136,900.00,11690.00,'Millions','INR'),(137,216.70,370.60,'Millions','USD'),(138,177.00,714.40,'Millions','USD'),(139,1.80,3.10,'Billions','INR'),(140,500.00,950.00,'Millions','INR'),(406,30.00,350.00,'Millions','INR'),(412,160.00,836.80,'Millions','USD');
/*!40000 ALTER TABLE `financials` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `languages`
--

DROP TABLE IF EXISTS `languages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `languages` (
  `language_id` tinyint unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(45) NOT NULL,
  PRIMARY KEY (`language_id`),
  UNIQUE KEY `name_UNIQUE` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `languages`
--

LOCK TABLES `languages` WRITE;
/*!40000 ALTER TABLE `languages` DISABLE KEYS */;
INSERT INTO `languages` VALUES (7,'Bengali'),(5,'English'),(6,'French'),(8,'Gujarati'),(1,'Hindi'),(3,'Kannada'),(4,'Tamil'),(2,'Telugu');
/*!40000 ALTER TABLE `languages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `movie_actor`
--

DROP TABLE IF EXISTS `movie_actor`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `movie_actor` (
  `movie_id` int unsigned NOT NULL,
  `actor_id` int unsigned NOT NULL,
  PRIMARY KEY (`movie_id`,`actor_id`),
  KEY `fk_movie_actor_movies_idx` (`movie_id`),
  KEY `fk_movie_actor_actors_idx` (`actor_id`),
  CONSTRAINT `fk_movie_actor_actors` FOREIGN KEY (`actor_id`) REFERENCES `actors` (`actor_id`) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT `fk_movie_actor_movies` FOREIGN KEY (`movie_id`) REFERENCES `movies` (`movie_id`) ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `movie_actor`
--

LOCK TABLES `movie_actor` WRITE;
/*!40000 ALTER TABLE `movie_actor` DISABLE KEYS */;
INSERT INTO `movie_actor` VALUES (101,50),(101,51),(102,52),(102,53),(103,54),(103,55),(103,56),(104,54),(104,56),(105,54),(105,55),(106,57),(106,58),(107,59),(107,60),(108,61),(108,62),(108,63),(109,57),(109,59),(109,64),(110,65),(110,66),(111,67),(111,68),(112,69),(112,70),(113,71),(113,72),(115,75),(115,76),(116,77),(116,78),(117,69),(117,79),(118,80),(118,81),(119,82),(119,83),(120,84),(120,85),(121,86),(121,87),(122,88),(122,89),(123,90),(123,91),(124,92),(124,93),(125,54),(125,94),(125,95),(126,54),(126,94),(126,95),(127,150),(127,151),(128,61),(128,152),(129,51),(129,153),(130,61),(130,154),(131,154),(131,155),(132,156),(132,157),(133,158),(133,159),(134,160),(134,161),(135,162),(135,163),(136,164),(136,165),(137,95),(137,166),(138,95),(138,167),(139,164),(139,168),(140,169),(140,170);
/*!40000 ALTER TABLE `movie_actor` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `movies`
--

DROP TABLE IF EXISTS `movies`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `movies` (
  `movie_id` int unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(150) NOT NULL,
  `industry` varchar(45) DEFAULT NULL,
  `release_year` year DEFAULT NULL,
  `imdb_rating` decimal(3,1) DEFAULT NULL,
  `studio` varchar(45) DEFAULT NULL,
  `language_id` tinyint unsigned DEFAULT NULL,
  PRIMARY KEY (`movie_id`),
  KEY `fk_movies_languages_idx` (`language_id`),
  CONSTRAINT `fk_movies_languages` FOREIGN KEY (`language_id`) REFERENCES `languages` (`language_id`) ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=141 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `movies`
--

LOCK TABLES `movies` WRITE;
/*!40000 ALTER TABLE `movies` DISABLE KEYS */;
INSERT INTO `movies` VALUES (101,'K.G.F: Chapter 2','Bollywood',2022,8.4,'Hombale Films',3),(102,'Doctor Strange in the Multiverse of Madness','Hollywood',2022,7.0,'Marvel Studios',5),(103,'Thor: The Dark World ','Hollywood',2013,6.8,'Marvel Studios',5),(104,'Thor: Ragnarok ','Hollywood',2017,7.9,'Marvel Studios',5),(105,'Thor: Love and Thunder ','Hollywood',2022,6.8,'Marvel Studios',5),(106,'Sholay','Bollywood',1975,8.1,'United Producers',1),(107,'Dilwale Dulhania Le Jayenge','Bollywood',1995,8.0,'Yash Raj Films',1),(108,'3 Idiots','Bollywood',2009,8.4,'Vinod Chopra Films',1),(109,'Kabhi Khushi Kabhie Gham','Bollywood',2001,7.4,'Dharma Productions',1),(110,'Bajirao Mastani ','Bollywood',2015,7.2,'',1),(111,'The Shawshank Redemption','Hollywood',1994,9.3,'Castle Rock Entertainment',5),(112,'Inception','Hollywood',2010,8.8,'Warner Bros. Pictures',5),(113,'Interstellar','Hollywood',2014,8.6,'Warner Bros. Pictures',5),(115,'The Pursuit of Happyness','Hollywood',2006,8.0,'Columbia Pictures',5),(116,'Gladiator','Hollywood',2000,8.5,'Universal Pictures  ',5),(117,'Titanic','Hollywood',1997,7.9,'Paramount Pictures',5),(118,'It\'s a Wonderful Life','Hollywood',1946,8.6,'Liberty Films',5),(119,'Avatar','Hollywood',2009,7.8,'20th Century Fox',5),(120,'The Godfather','Hollywood',1972,9.2,'Paramount Pictures',5),(121,'The Dark Knight','Hollywood',2008,9.0,'Syncopy',5),(122,'Schindler\'s List','Hollywood',1993,9.0,'Universal Pictures',5),(123,'Jurassic Park','Hollywood',1993,8.2,'Universal Pictures',5),(124,'Parasite','Hollywood',2019,8.5,'',5),(125,'Avengers: Endgame','Hollywood',2019,8.4,'Marvel Studios',5),(126,'Avengers: Infinity War','Hollywood',2018,8.4,'Marvel Studios',5),(127,'Pather Panchali','Bollywood',1955,8.3,'Government of West Bengal',7),(128,'Taare Zameen Par','Bollywood',2007,8.3,'',1),(129,'Munna Bhai M.B.B.S.','Bollywood',2003,8.1,'Vinod Chopra Productions',1),(130,'PK','Bollywood',2014,8.1,'Vinod Chopra Films',1),(131,'Sanju','Bollywood',2018,NULL,'Vinod Chopra Films',1),(132,'Pushpa: The Rise - Part 1','Bollywood',2021,7.6,'Mythri Movie Makers',2),(133,'RRR','Bollywood',2022,8.0,'DVV Entertainment',2),(134,'Baahubali: The Beginning','Bollywood',2015,8.0,'Arka Media Works',2),(135,'The Kashmir Files','Bollywood',2022,8.3,'Zee Studios',1),(136,'Bajrangi Bhaijaan','Bollywood',2015,8.1,'Salman Khan Films',1),(137,'Captain America: The First Avenger','Hollywood',2011,6.9,'Marvel Studios',5),(138,'Captain America: The Winter Soldier','Hollywood',2014,7.8,'Marvel Studios',5),(139,'Race 3','Bollywood',2018,1.9,'Salman Khan Films',1),(140,'Shershaah','Bollywood',2021,8.4,'Dharma Productions',1);
/*!40000 ALTER TABLE `movies` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2022-11-12 12:32:35


"
    },
    "DocMulti-Chat-Assistant-Using-LlamaIndex": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
# DocMulti Chat Assistant Using LlamaIndex 🦙

## Overview
DocMulti Chat Assistant is a powerful Streamlit-based application that leverages LlamaIndex to provide an interactive chat interface for querying multiple documents. This tool excels at processing and understanding complex data structures, ensuring that no information is lost during the parsing and indexing stages.


## Deployed Link
DocMulti-Chat-Assistant app is Deployed And Available [Here](https://huggingface.co/spaces/Parthiban97/DocMulti_Chat_Assistant_Using_LlamaIndex)


## Screenshots
![llamaindex_1](https://github.com/user-attachments/assets/15b00af3-e8a6-4a09-a0ab-b5bf9fe53f54)
![llamaindex_2](https://github.com/user-attachments/assets/7d8925f2-6be2-4588-a0ad-d88ec14c8dec)
![llamaindex_3](https://github.com/user-attachments/assets/595e7cd3-d99a-41c4-8a2a-66efddc9b4aa)
![llamaindex_4](https://github.com/user-attachments/assets/7224ff3e-e47a-471f-bceb-6a699f1d228c)

### Examples from uploaded document file structures
![llamaindex_5](https://github.com/user-attachments/assets/c1b1b728-eb23-4ebf-a92b-9712ca8bff9c)

## Features
- **Multi-Document Support**: Upload and process multiple document types.
- **Advanced Parsing**: Option to use LlamaParse for complex documents with graphs and tables.
- **Customizable Models**: Choose from various Groq models for text generation.
- **Flexible Embedding**: Utilizes Google's Gemini for document embedding.
- **Interactive Chat Interface**: Engage in a conversation about your documents.
- **Memory Retention**: Maintains context across multiple queries using a chat memory buffer.
- **Custom Parsing Instructions**: Tailor the document parsing process with custom instructions.
- **Custom Prompt Templates**: Define your own prompts for more specific interactions.

## Components
- **Streamlit**: For the web interface.
- **LlamaIndex**: Core indexing and querying engine.
- **Groq**: Large Language Model for text generation.
- **Google Gemini**: For document embedding.
- **LlamaParse**: Optional advanced document parser.

## Usage
1. Launch the Streamlit app.
2. In the sidebar:
   - Enter your API keys for Groq, Google, and Llama Cloud.
   - Select a Groq model.
   - Upload your documents.
   - Choose whether to use LlamaParse.
   - Set any advanced options like custom parsing instructions or prompt templates.
3. Click 'Start Document Indexing' to process your documents.
4. Once indexed, use the chat interface to ask questions about your documents.

## Supported Document Types
DocMulti Chat Assistant supports an extensive range of document formats, making it incredibly versatile for various use cases. Here's the full list of supported extensions:

- **Text Documents**: .txt, .rtf, .md
- **Microsoft Office**: .doc, .docx, .docm, .dot, .dotm, .xls, .xlsx, .xlsm, .xlsb, .ppt, .pptx, .pptm, .pot, .potm, .potx
- **OpenDocument**: .odt, .ods, .odp
- **PDF**: .pdf
- **eBooks**: .epub
- **Images**: .jpg, .jpeg, .png, .gif, .bmp, .svg, .tiff, .webp
- **Web**: .htm, .html, .xml
- **Spreadsheets**: .csv, .tsv, .dif, .sylk, .slk, .prn
- **Database**: .dbf
- **Other Office Suites**: 
  - Apple iWork: .pages, .numbers, .key
  - WordPerfect: .wpd
  - Lotus: .wks, .123
  - Quattro Pro: .qpw
- **Specialized Formats**: .602, .abw, .cgm, .cwk, .hwp, .lwp, .mw, .mcw, .pbd, .sda, .sdd, .sdp, .sdw, .sgl, .sti, .sxi, .sxw, .uof, .uop, .uot, .vor, .wps, .zabw, .et, .eth, .wk1, .wk2, .wk3, .wk4, .wq1, .wq2, .wb1, .wb2, .wb3, .xlr

## Advanced Features
- **Custom Parsing Instructions**: Tailor how LlamaParse extracts information from your documents.
- **Custom Prompt Templates**: Create specific prompts to guide the AI's responses.
- **Adjustable Model Parameters**: Select different Groq models to balance between speed and capability.

## Notes
- Ensure you have valid API keys for Groq, Google, and Llama Cloud before using the application.
- Processing time may vary depending on the number and complexity of uploaded documents.

## Troubleshooting
- If you encounter errors during document processing, check your API keys and internet connection.
- For issues with specific document types, try toggling the LlamaParse option.

## Contributing
Contributions to improve DocMulti Chat Assistant are welcome. Please submit pull requests or open issues on the project repository.



================================================
File: app.py
================================================
import streamlit as st
import os
import tempfile
from dotenv import load_dotenv
from llama_parse import LlamaParse
from llama_index.core import SimpleDirectoryReader, VectorStoreIndex, Settings
from llama_index.embeddings.gemini import GeminiEmbedding
from llama_index.llms.groq import Groq
from llama_index.core.retrievers import VectorIndexRetriever
from llama_index.core.postprocessor import SimilarityPostprocessor
from llama_index.core.query_engine import RetrieverQueryEngine
from langchain_core.messages import HumanMessage, AIMessage
from llama_index.core.memory import ChatMemoryBuffer
import time

load_dotenv()

st.set_page_config(page_title='Chat with Documents', page_icon=':books:')
st.title('DocMulti Chat Assistant Using LlamaIndex 🦙')

# Initialize chat history in session state
if 'chat_history' not in st.session_state:
    st.session_state.chat_history = []

# Initialize memory buffer
if 'memory' not in st.session_state:
    st.session_state.memory = ChatMemoryBuffer.from_defaults(token_limit=4090)

SUPPORTED_EXTENSIONS = [
    '.pdf', '.602', '.abw', '.cgm', '.cwk', '.doc', '.docx', '.docm', '.dot', '.dotm',
    '.hwp', '.key', '.lwp', '.mw', '.mcw', '.pages', '.pbd', '.ppt', '.pptm', '.pptx',
    '.pot', '.potm', '.potx', '.rtf', '.sda', '.sdd', '.sdp', '.sdw', '.sgl', '.sti',
    '.sxi', '.sxw', '.stw', '.sxg', '.txt', '.uof', '.uop', '.uot', '.vor', '.wpd',
    '.wps', '.xml', '.zabw', '.epub', '.jpg', '.jpeg', '.png', '.gif', '.bmp', '.svg',
    '.tiff', '.webp', '.htm', '.html', '.xlsx', '.xls', '.xlsm', '.xlsb', '.xlw', '.csv',
    '.dif', '.sylk', '.slk', '.prn', '.numbers', '.et', '.ods', '.fods', '.uos1', '.uos2',
    '.dbf', '.wk1', '.wk2', '.wk3', '.wk4', '.wks', '.123', '.wq1', '.wq2', '.wb1', '.wb2',
    '.wb3', '.qpw', '.xlr', '.eth', '.tsv'
]

# Sidebar configuration
if 'config' not in st.session_state:
    with st.sidebar:
        st.header('Configuration')
        st.markdown('Enter your API keys below:')

        # GROQ API Key input
        st.session_state.groq_api_key = st.text_input(
            'Enter your GROQ API Key', 
            type='password', 
            help='Get your API key from [GROQ Console](https://console.groq.com/keys)'
        )
        
        # Google API Key input
        st.session_state.google_api_key = st.text_input(
            'Enter your Google API Key', 
            type='password', 
            help='Get your API key from [Google AI Studio](https://aistudio.google.com/app/apikey)'
        )

        # Llama Cloud API Key input
        st.session_state.llama_cloud_api_key = st.text_input(
            'Enter your Llama Cloud API Key', 
            type='password', 
            help='Get your API key from [Llama Cloud](https://cloud.llamaindex.ai/api-key)'
        )

        # Set environment variables
        os.environ['GROQ_API_KEY'] = st.session_state.groq_api_key
        os.environ['GOOGLE_API_KEY'] = st.session_state.google_api_key
        os.environ['LLAMA_CLOUD_API_KEY'] = st.session_state.llama_cloud_api_key

        # Model selection
        model_options = [
            'llama-3.1-70b-versatile',
            'llama-3.1-8b-instant',
            'llama3-8b-8192',
            'llama3-70b-8192',
            'mixtral-8x7b-32768',
            'gemma2-9b-it'
        ]
        st.session_state.selected_model = st.selectbox(
            'Select any Groq Model', 
            model_options
        )

        # Document upload
        st.session_state.uploaded_files = st.file_uploader(
            'Choose files', 
            accept_multiple_files=True, 
            type=SUPPORTED_EXTENSIONS, 
            key='file_uploader'
        )
        
        # Checkbox for LlamaParse usage
        st.session_state.use_llama_parse = st.checkbox(
            'Use LlamaParse for complex documents (graphs, tables, etc.)'
        )

        with st.expander('Advanced Options'): 
            # Parsing instruction input
            st.session_state.parsing_instruction = st.text_area(
                'Custom Parsing Instruction',
                value=st.session_state.get('parsing_instruction', 'Extract all information'),
                help='Enter custom instructions for document parsing'
            )

            # Custom prompt template input
            st.session_state.custom_prompt_template = st.text_area(
                'Custom Prompt Template', 
                placeholder='Enter your custom prompt here...(Optional)', 
                value=st.session_state.get('custom_prompt_template', '')
            )

# Step 3: Load and parse documents
def parse_and_index_documents(uploaded_files, use_llama_parse, parsing_instruction):
    all_documents = []

    if st.session_state.use_llama_parse and os.environ.get('LLAMA_CLOUD_API_KEY'):
        with st.spinner('Using LlamaParse for document parsing'):
            parser = LlamaParse(result_type='markdown', parsing_instruction=parsing_instruction)
            for uploaded_file in st.session_state.uploaded_files:
                file_info_placeholder = st.empty()
                file_info_placeholder.info(f'Processing file: {uploaded_file.name}')
                with tempfile.NamedTemporaryFile(delete=False, suffix=os.path.splitext(uploaded_file.name)[-1]) as tmp_file:
                    tmp_file.write(uploaded_file.getvalue())
                    tmp_file_path = tmp_file.name

                try:
                    parsed_documents = parser.load_data(tmp_file_path)
                    all_documents.extend(parsed_documents)
                except Exception as e:
                    st.error(f'Error parsing {uploaded_file.name}: {str(e)}')
                finally:
                    os.remove(tmp_file_path)
                    time.sleep(4)
                    file_info_placeholder.empty()
    else:
        with st.spinner('Using SimpleDirectoryReader for document parsing'):
            for uploaded_file in st.session_state.uploaded_files:
                file_info_placeholder = st.empty()
                file_info_placeholder.info(f'Processing file: {uploaded_file.name}')
                with tempfile.NamedTemporaryFile(delete=False, suffix=os.path.splitext(uploaded_file.name)[-1]) as tmp_file:
                    tmp_file.write(uploaded_file.getvalue())
                    tmp_file_path = tmp_file.name

                try:
                    reader = SimpleDirectoryReader(input_files=[tmp_file_path])
                    docs = reader.load_data()
                    all_documents.extend(docs)
                except Exception as e:
                    st.error(f'Error loading {uploaded_file.name}: {str(e)}')
                finally:
                    os.remove(tmp_file_path)
                    time.sleep(4)
                    file_info_placeholder.empty()

    if not all_documents:
        st.error('No valid documents found.')
        return None

    with st.spinner('Creating Vector Store Index...'):
        try:
            groq_llm = Groq(model=st.session_state.selected_model)
            gemini_embed_model = GeminiEmbedding(model_name='models/embedding-001')

            Settings.llm = groq_llm
            Settings.embed_model = gemini_embed_model
            Settings.chunk_size = 2048

            index = VectorStoreIndex.from_documents(all_documents, embed_model=gemini_embed_model)
            
            # Create a retriever from the index
            retriever = VectorIndexRetriever(index=index, similarity_top_k=2)
            
            # Create a postprocessor
            postprocessor = SimilarityPostprocessor(similarity_cutoff=0.50)
            
            # Create the query engine
            query_engine = RetrieverQueryEngine(
                retriever=retriever,
                node_postprocessors=[postprocessor]
            )
            
            # Create a chat engine with memory, using the custom query engine
            chat_engine = index.as_chat_engine(
                chat_mode='condense_question',
                memory=st.session_state.memory,
                verbose=False
            )
            
            # Set the query engine for the chat engine
            chat_engine.query_engine = query_engine
            return chat_engine
        
        except Exception as e:
            st.error(f'Error building index: {str(e)}')
            return None
        
        
    st.success('Data Processed. Ready to answer your question!')


# Step 5: Start document indexing
if st.sidebar.button('Start Document Indexing'):
    if st.session_state.uploaded_files:
        try:
            chat_engine = parse_and_index_documents(st.session_state.uploaded_files, st.session_state.use_llama_parse, st.session_state.parsing_instruction)
            if chat_engine:
                    st.session_state.chat_engine = chat_engine
                    st.success('Data Processed.Ready to answer your question!!')
            else:
                    st.error('Failed to create data index store.')
        except Exception as e:
            st.error(f'An error occurred during indexing: {str(e)}')
    else:
        st.warning('Please upload at least one file.')

# Step 6: Querying logic
def get_response(query, chat_engine, custom_prompt):
    try:
        # Prepare the query
        if custom_prompt:
            query = f'{custom_prompt}\n\nQuestion: {query}'

        # Use the chat engine to get a response
        response = chat_engine.chat(query)

        # If response is empty or not valid
        if not response or not response.response:
            return 'I couldn't find a relevant answer. Could you rephrase?'

        return response.response
    except Exception as e:
        st.error(f'Error processing query: {str(e)}')
        return 'An error occurred.'


st.markdown('---')
user_query = st.chat_input('Enter Your Question')

if user_query and 'chat_engine' in st.session_state:
    # Add user's message to chat history
    st.session_state.chat_history.append({'role': 'user', 'content': user_query})

    # Get response from the chat engine
    response = get_response(user_query, st.session_state.chat_engine, st.session_state.custom_prompt_template)

    if response:
        # Add AI's response to chat history
        st.session_state.chat_history.append({'role': 'assistant', 'content': str(response)})

        # Display chat history
        for message in st.session_state.chat_history:
            if message['role'] == 'user':
                st.chat_message('user').write(message['content'])
            elif message['role'] == 'assistant':
                st.chat_message('assistant').write(message['content'])
    else:
        st.warning('Unable to process the query.')

================================================
File: requirements.txt
================================================
llama-index
openai
pypdf
python-dotenv
llama-index-llms-groq
llama-index-llms-gemini
llama-index-embeddings-gemini
langchain_core


================================================
File: .streamlit/config.toml
================================================
[theme]
primaryColor='#c77f7f'
backgroundColor='#af99f1'
secondaryBackgroundColor='#eedacf'
textColor='#0e1212'
font='monospace'
"
    },
    "Excel-Sales-Analytics": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
## Sales Report :


- **Project objective:** 

    **1.** Create a _[customer performance report](https://github.com/Parthiban-R-3997/Excel-Sales-Analytics/blob/main/Customer%20Performance%20Report.pdf)_ 

    **2.** Conduct a comprehensive comparison between _[market performance and sales targets](https://github.com/Parthiban-R-3997/Excel-Sales-Analytics/blob/main/Market%20Performance%20vs%20Target%20Report.pdf)_

- **Purpose of sales analytics:** Empower businesses to monitor and evaluate their sales activities and performance.

- **Importance of analyzing sales data:** Identify sales patterns and track key performance indicators (KPIs).

- **Role of reports:** Determine effective customer discounts, facilitate negotiations with consumers, and identify potential business expansion opportunities in promising countries.


## Finance Report :

- **Project objective:** 

    **1.** Create Profit and Loss (P&L) reports by _[Fiscal Year](https://github.com/Parthiban-R-3997/Excel-Sales-Analytics/blob/main/P%26L%20Statement%20by%20Fiscal%20Year.pdf)_ & _[Months](https://github.com/Parthiban-R-3997/Excel-Sales-Analytics/blob/main/P%26L%20Statement%20by%20Months.pdf)_ 

   **2.** Create Profit and Loss (P&L) reports by _[Markets](https://github.com/Parthiban-R-3997/Excel-Sales-Analytics/blob/main/P%26L%20Statement%20by%20Markets.pdf)_

- **Purpose of sales analytics:** Evaluation of financial performance, support decision-making, and facilitate communication with stakeholders.

- **Importance of analyzing Finance data:** Aid in benchmarking against industry peers and previous periods Foundation for budgeting and forecasting.

- **Role of reports:** Align financial planning with strategic goals Instill confidence in the organization's financial outlook.


## Technical & Soft Skills:
- [x] Proficiency in ETL methodology (Extract, Transform, Load).
- [x] Skills to generate a date table using Power Query.
- [x] Ability to derive fiscal months and quarters.
- [x] Establishing data model relationships with Power Pivot.
- [x] Proficiency in incorporating supplementary data into an existing data model.
- [x] Utilizing DAX to create calculated columns.

## Soft Skills:
- [x] Refined understanding of Sales & Finance Reports
- [x] Designing user-centric reports with empathy in mind.
- [x] Optimization of report generation through meticulous fine-tuning.
- [x] Developing a systematic approach to devising a report building plan.


"
    },
    
    "IPL-Data-Analysis-2008-2022": {
        "description": null,
        "readme": "(Files content cropped to 300k characters, download full ingest to see more)
================================================
File: README.md
================================================
## IPL-Data-Analysis-2008-2022


This project analyzes IPL match data from 2008 to 2022 to gain insights into various aspects of the tournament.It demonstrates a strong understanding of data analysis techniques and the ability to extract valuable insights from real-world data. It showcases the potential of data analysis to enhance our understanding of sports and provide valuable information for decision-making.


# Data Sources
- **Match Data**: A CSV file containing information about each match, including date, teams, venue, toss, result, and margin of victory.
- **Ball-by-Ball Data**: A CSV file containing detailed information about each ball bowled in every match, including runs scored, wickets taken, and extra runs.


# Data Cleaning and Preparation
- **Handling Missing Data**: Identified and addressed missing values in both datasets.
- **Data Type Conversion**: Converted relevant columns to appropriate data types (e.g., dates, integers).
- **Feature Engineering**: Created new features like 'No. of Hundereds' and 'No. of Fifties' to analyze batsman performance.


# Features Analyzed
- **Team Performance**: Analyzed team win percentage, winning mode (wickets or runs), and toss preference.
- **Player Performance**: Identified top run-scorers, wicket-takers, and players with the most centuries and half-centuries.
- **Venue Impact**: Investigated the influence of different venues on match outcomes.
- **Toss Decision**: Examined the impact of winning the toss on match results.
- **Season Trends**: Identified season-wise trends in toss decisions, winning teams, and match outcomes.


## Impactful Findings
1.  Home Advantage: Teams playing at their home ground tend to have a higher chance of winning.
2.  Second Batting Advantage: Teams winning the toss generally choose to bowl first, indicating a preference for chasing targets.
3.  Mumbai Indians Dominance: Mumbai Indians have consistently been a dominant team, winning the most matches and having the highest win percentage.
4.  Toss Decision Trends: While teams generally prefer bowling first, there were specific seasons (2009, 2010, 2013) where teams opted to bat first more often.
5.  Venue Impact: Certain venues have been more conducive to high-scoring matches, while others have favored bowlers.
6.  Top Performers: The analysis identified top run-scorers and wicket-takers, highlighting the most impactful players in the tournament.


## Project Steps
1.  Data Acquisition: Obtained the IPL match data and ball-by-ball data from reliable sources.
2.  Data Cleaning: Cleaned and preprocessed the data to handle missing values and inconsistencies.
3.  Exploratory Data Analysis: Performed exploratory analysis to understand the data distribution and identify key trends.
4.  Feature Engineering: Created new features to enhance the analysis and gain deeper insights.
5.  Statistical Analysis: Performed statistical analysis to test hypotheses and draw meaningful conclusions.
6.  Data Visualization: Created insightful visualizations to present the findings in a clear and engaging manner.
7.  Conclusion and Recommendations: Summarized the key findings and provided recommendations based on the analysis.


## Conclusion
This project provides a comprehensive analysis of IPL match data, revealing valuable insights into team performance, player statistics, venue impact, and toss decisions. The findings can be used by cricket enthusiasts, analysts, and teams to understand the dynamics of the tournament and make informed decisions.


## Future Work
1. Prediction Models: Develop predictive models to forecast match outcomes based on various factors.
2. Advanced Feature Engineering: Explore more complex features to improve the accuracy of predictions.
3. Sentiment Analysis: Analyze social media data to understand fan sentiment and its impact on match outcomes.
4. Player Performance Prediction: Develop models to predict individual player performance in future matches.






================================================
File: Indian Premier League(IPL) Analysis.ipynb
================================================
# Jupyter notebook converted to Python script.

'''
#             <font color=green>**IPL 2008 to 2022 All Match Dataset** </font>
'''

from IPython import display
display.Image('dataset-cover.png')
# Output:
#   <IPython.core.display.Image object>

'''
# <font color=red> Getting Started </font>
'''

'''
# <font color='Blue'>Data Acquisition & Exploration</font>
'''

'''
## <font color='purple'> <font color=green>Project Step 1: Find a dataset or datasets</font> </font>
'''

'''
**IPL is among the most famous cricket league with players coming from worldwide. What makes this series more competitive every year is the drama with every ball and hence this dataset is a complete dataset showing match information and also data for each delivery.**



1. The file <font color=blue>IPLMatches2008_2022.csv</font> contains all details of the match: Venue of the match, Toss Decision, Match Winer, Man of the Match, Squads, etc and contains the summary of each match for IPL 2008-2022
The matches are sorted from 2022 to 2008
2. The file <font color=green>IPLBallbyBall2008_2022.csv</font> contains ball by ball data of each and every match: Batsman on strike, Bowler, Extras, Runs, Wicket Ball, etc and contains data for each ball for the entire tournament from 2008 to 2022. The data will be updated every day until the season's final match. The match ID is given by ESPNCricinfo


**Dataset link:https://www.kaggle.com/datasets/vora1011/ipl-2022-match-dataset**
'''

'''
#### **<font color=brown>We will start by importing the Python libraries and we will be using in this analysis. These libraries include:</font>**


* **Pandas** and **Numpy** for data ingestion and manipulation.
* **Matplotlib** and **Seaborn** for data visualization.
* Specific methods from **SKLEARN** for performing Machine Learning algorithms.
'''

'''
## <font color='purple'>Importing the Libraries</font>
'''

### Pandas and Numpy
import pandas as pd
import numpy as np

### Visualisation libraries
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline

### Machine Learning libraries
import sklearn
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report

##For performing Stats
import scipy.stats as ss

### To ignore warnings
import warnings
warnings.filterwarnings('ignore')

### To be able to see maximum columns on screen
pd.set_option('display.max_columns', 500)

### To save the model
import pickle

'''
## <font color=green>Project Step 2: Explore the dataset(s)</font>
'''

df1=pd.read_csv('IPL_Matches_2008_2022.csv')
df2=pd.read_csv('IPL_Ball_by_Ball_2008_2022.csv')

'''
# Exploratory Data Analysis
'''

df1
# Output:
#             ID        City        Date   Season  MatchNumber  \

#   0    1312200   Ahmedabad  29-05-2022     2022        Final   

#   1    1312199   Ahmedabad  27-05-2022     2022  Qualifier 2   

#   2    1312198     Kolkata  25-05-2022     2022   Eliminator   

#   3    1312197     Kolkata  24-05-2022     2022  Qualifier 1   

#   4    1304116      Mumbai  22-05-2022     2022           70   

#   ..       ...         ...         ...      ...          ...   

#   945   335986     Kolkata  20-04-2008  2007/08            4   

#   946   335985      Mumbai  20-04-2008  2007/08            5   

#   947   335984       Delhi  19-04-2008  2007/08            3   

#   948   335983  Chandigarh  19-04-2008  2007/08            2   

#   949   335982   Bangalore  18-04-2008  2007/08            1   

#   

#                              Team1                        Team2  \

#   0               Rajasthan Royals               Gujarat Titans   

#   1    Royal Challengers Bangalore             Rajasthan Royals   

#   2    Royal Challengers Bangalore         Lucknow Super Giants   

#   3               Rajasthan Royals               Gujarat Titans   

#   4            Sunrisers Hyderabad                 Punjab Kings   

#   ..                           ...                          ...   

#   945        Kolkata Knight Riders              Deccan Chargers   

#   946               Mumbai Indians  Royal Challengers Bangalore   

#   947             Delhi Daredevils             Rajasthan Royals   

#   948              Kings XI Punjab          Chennai Super Kings   

#   949  Royal Challengers Bangalore        Kolkata Knight Riders   

#   

#                                             Venue                   TossWinner  \

#   0              Narendra Modi Stadium, Ahmedabad             Rajasthan Royals   

#   1              Narendra Modi Stadium, Ahmedabad             Rajasthan Royals   

#   2                         Eden Gardens, Kolkata         Lucknow Super Giants   

#   3                         Eden Gardens, Kolkata               Gujarat Titans   

#   4                      Wankhede Stadium, Mumbai          Sunrisers Hyderabad   

#   ..                                          ...                          ...   

#   945                                Eden Gardens              Deccan Chargers   

#   946                            Wankhede Stadium               Mumbai Indians   

#   947                            Feroz Shah Kotla             Rajasthan Royals   

#   948  Punjab Cricket Association Stadium, Mohali          Chennai Super Kings   

#   949                       M Chinnaswamy Stadium  Royal Challengers Bangalore   

#   

#       TossDecision SuperOver                  WinningTeam    WonBy  Margin  \

#   0            bat         N               Gujarat Titans  Wickets     7.0   

#   1          field         N             Rajasthan Royals  Wickets     7.0   

#   2          field         N  Royal Challengers Bangalore     Runs    14.0   

#   3          field         N               Gujarat Titans  Wickets     7.0   

#   4            bat         N                 Punjab Kings  Wickets     5.0   

#   ..           ...       ...                          ...      ...     ...   

#   945          bat         N        Kolkata Knight Riders  Wickets     5.0   

#   946          bat         N  Royal Challengers Bangalore  Wickets     5.0   

#   947          bat         N             Delhi Daredevils  Wickets     9.0   

#   948          bat         N          Chennai Super Kings     Runs    33.0   

#   949        field         N        Kolkata Knight Riders     Runs   140.0   

#   

#       method Player_of_Match                                       Team1Players  \

#   0      NaN       HH Pandya  ['YBK Jaiswal', 'JC Buttler', 'SV Samson', 'D ...   

#   1      NaN      JC Buttler  ['V Kohli', 'F du Plessis', 'RM Patidar', 'GJ ...   

#   2      NaN      RM Patidar  ['V Kohli', 'F du Plessis', 'RM Patidar', 'GJ ...   

#   3      NaN       DA Miller  ['YBK Jaiswal', 'JC Buttler', 'SV Samson', 'D ...   

#   4      NaN   Harpreet Brar  ['PK Garg', 'Abhishek Sharma', 'RA Tripathi', ...   

#   ..     ...             ...                                                ...   

#   945    NaN       DJ Hussey  ['WP Saha', 'BB McCullum', 'RT Ponting', 'SC G...   

#   946    NaN      MV Boucher  ['L Ronchi', 'ST Jayasuriya', 'DJ Thornely', '...   

#   947    NaN     MF Maharoof  ['G Gambhir', 'V Sehwag', 'S Dhawan', 'MK Tiwa...   

#   948    NaN      MEK Hussey  ['K Goel', 'JR Hopes', 'KC Sangakkara', 'Yuvra...   

#   949    NaN     BB McCullum  ['R Dravid', 'W Jaffer', 'V Kohli', 'JH Kallis...   

#   

#                                             Team2Players        Umpire1  \

#   0    ['WP Saha', 'Shubman Gill', 'MS Wade', 'HH Pan...    CB Gaffaney   

#   1    ['YBK Jaiswal', 'JC Buttler', 'SV Samson', 'D ...    CB Gaffaney   

#   2    ['Q de Kock', 'KL Rahul', 'M Vohra', 'DJ Hooda...  J Madanagopal   

#   3    ['WP Saha', 'Shubman Gill', 'MS Wade', 'HH Pan...   BNJ Oxenford   

#   4    ['JM Bairstow', 'S Dhawan', 'M Shahrukh Khan',...   AK Chaudhary   

#   ..                                                 ...            ...   

#   945  ['AC Gilchrist', 'Y Venugopal Rao', 'VVS Laxma...      BF Bowden   

#   946  ['S Chanderpaul', 'R Dravid', 'LRPL Taylor', '...       SJ Davis   

#   947  ['T Kohli', 'YK Pathan', 'SR Watson', 'M Kaif'...      Aleem Dar   

#   948  ['PA Patel', 'ML Hayden', 'MEK Hussey', 'MS Dh...      MR Benson   

#   949  ['SC Ganguly', 'BB McCullum', 'RT Ponting', 'D...      Asad Rauf   

#   

#               Umpire2  

#   0       Nitin Menon  

#   1       Nitin Menon  

#   2          MA Gough  

#   3         VK Sharma  

#   4     NA Patwardhan  

#   ..              ...  

#   945     K Hariharan  

#   946       DJ Harper  

#   947  GA Pratapkumar  

#   948      SL Shastri  

#   949     RE Koertzen  

#   

#   [950 rows x 20 columns]

df2
# Output:
#                ID  innings  overs  ballnumber       batter          bowler  \

#   0       1312200        1      0           1  YBK Jaiswal  Mohammed Shami   

#   1       1312200        1      0           2  YBK Jaiswal  Mohammed Shami   

#   2       1312200        1      0           3   JC Buttler  Mohammed Shami   

#   3       1312200        1      0           4  YBK Jaiswal  Mohammed Shami   

#   4       1312200        1      0           5  YBK Jaiswal  Mohammed Shami   

#   ...         ...      ...    ...         ...          ...             ...   

#   225949   335982        2     14           5      P Kumar        I Sharma   

#   225950   335982        2     14           6     SB Joshi        I Sharma   

#   225951   335982        2     14           7      P Kumar        I Sharma   

#   225952   335982        2     15           1     SB Joshi       LR Shukla   

#   225953   335982        2     15           2     SB Joshi       LR Shukla   

#   

#           non-striker extra_type  batsman_run  extras_run  total_run  \

#   0        JC Buttler        NaN            0           0          0   

#   1        JC Buttler    legbyes            0           1          1   

#   2       YBK Jaiswal        NaN            1           0          1   

#   3        JC Buttler        NaN            0           0          0   

#   4        JC Buttler        NaN            0           0          0   

#   ...             ...        ...          ...         ...        ...   

#   225949     SB Joshi    legbyes            0           1          1   

#   225950      P Kumar        NaN            1           0          1   

#   225951     SB Joshi        NaN            0           0          0   

#   225952      P Kumar      wides            0           1          1   

#   225953      P Kumar        NaN            0           0          0   

#   

#           non_boundary  isWicketDelivery player_out    kind fielders_involved  \

#   0                  0                 0        NaN     NaN               NaN   

#   1                  0                 0        NaN     NaN               NaN   

#   2                  0                 0        NaN     NaN               NaN   

#   3                  0                 0        NaN     NaN               NaN   

#   4                  0                 0        NaN     NaN               NaN   

#   ...              ...               ...        ...     ...               ...   

#   225949             0                 0        NaN     NaN               NaN   

#   225950             0                 0        NaN     NaN               NaN   

#   225951             0                 0        NaN     NaN               NaN   

#   225952             0                 0        NaN     NaN               NaN   

#   225953             0                 1   SB Joshi  caught       BB McCullum   

#   

#                           BattingTeam  

#   0                  Rajasthan Royals  

#   1                  Rajasthan Royals  

#   2                  Rajasthan Royals  

#   3                  Rajasthan Royals  

#   4                  Rajasthan Royals  

#   ...                             ...  

#   225949  Royal Challengers Bangalore  

#   225950  Royal Challengers Bangalore  

#   225951  Royal Challengers Bangalore  

#   225952  Royal Challengers Bangalore  

#   225953  Royal Challengers Bangalore  

#   

#   [225954 rows x 17 columns]

##Shape of Dataframe 1 (df1)
df1.shape
# Output:
#   (950, 20)

##Shape of Dataframe 1 (df2)
df2.shape
# Output:
#   (225954, 17)

##Creating copy of a datasets
df1_copy=df1.copy()
df2_copy=df2.copy()

df1_copy.head()
# Output:
#           ID       City        Date Season  MatchNumber  \

#   0  1312200  Ahmedabad  29-05-2022   2022        Final   

#   1  1312199  Ahmedabad  27-05-2022   2022  Qualifier 2   

#   2  1312198    Kolkata  25-05-2022   2022   Eliminator   

#   3  1312197    Kolkata  24-05-2022   2022  Qualifier 1   

#   4  1304116     Mumbai  22-05-2022   2022           70   

#   

#                            Team1                 Team2  \

#   0             Rajasthan Royals        Gujarat Titans   

#   1  Royal Challengers Bangalore      Rajasthan Royals   

#   2  Royal Challengers Bangalore  Lucknow Super Giants   

#   3             Rajasthan Royals        Gujarat Titans   

#   4          Sunrisers Hyderabad          Punjab Kings   

#   

#                                 Venue            TossWinner TossDecision  \

#   0  Narendra Modi Stadium, Ahmedabad      Rajasthan Royals          bat   

#   1  Narendra Modi Stadium, Ahmedabad      Rajasthan Royals        field   

#   2             Eden Gardens, Kolkata  Lucknow Super Giants        field   

#   3             Eden Gardens, Kolkata        Gujarat Titans        field   

#   4          Wankhede Stadium, Mumbai   Sunrisers Hyderabad          bat   

#   

#     SuperOver                  WinningTeam    WonBy  Margin method  \

#   0         N               Gujarat Titans  Wickets     7.0    NaN   

#   1         N             Rajasthan Royals  Wickets     7.0    NaN   

#   2         N  Royal Challengers Bangalore     Runs    14.0    NaN   

#   3         N               Gujarat Titans  Wickets     7.0    NaN   

#   4         N                 Punjab Kings  Wickets     5.0    NaN   

#   

#     Player_of_Match                                       Team1Players  \

#   0       HH Pandya  ['YBK Jaiswal', 'JC Buttler', 'SV Samson', 'D ...   

#   1      JC Buttler  ['V Kohli', 'F du Plessis', 'RM Patidar', 'GJ ...   

#   2      RM Patidar  ['V Kohli', 'F du Plessis', 'RM Patidar', 'GJ ...   

#   3       DA Miller  ['YBK Jaiswal', 'JC Buttler', 'SV Samson', 'D ...   

#   4   Harpreet Brar  ['PK Garg', 'Abhishek Sharma', 'RA Tripathi', ...   

#   

#                                           Team2Players        Umpire1  \

#   0  ['WP Saha', 'Shubman Gill', 'MS Wade', 'HH Pan...    CB Gaffaney   

#   1  ['YBK Jaiswal', 'JC Buttler', 'SV Samson', 'D ...    CB Gaffaney   

#   2  ['Q de Kock', 'KL Rahul', 'M Vohra', 'DJ Hooda...  J Madanagopal   

#   3  ['WP Saha', 'Shubman Gill', 'MS Wade', 'HH Pan...   BNJ Oxenford   

#   4  ['JM Bairstow', 'S Dhawan', 'M Shahrukh Khan',...   AK Chaudhary   

#   

#            Umpire2  

#   0    Nitin Menon  

#   1    Nitin Menon  

#   2       MA Gough  

#   3      VK Sharma  

#   4  NA Patwardhan  

df2_copy.head()
# Output:
#           ID  innings  overs  ballnumber       batter          bowler  \

#   0  1312200        1      0           1  YBK Jaiswal  Mohammed Shami   

#   1  1312200        1      0           2  YBK Jaiswal  Mohammed Shami   

#   2  1312200        1      0           3   JC Buttler  Mohammed Shami   

#   3  1312200        1      0           4  YBK Jaiswal  Mohammed Shami   

#   4  1312200        1      0           5  YBK Jaiswal  Mohammed Shami   

#   

#      non-striker extra_type  batsman_run  extras_run  total_run  non_boundary  \

#   0   JC Buttler        NaN            0           0          0             0   

#   1   JC Buttler    legbyes            0           1          1             0   

#   2  YBK Jaiswal        NaN            1           0          1             0   

#   3   JC Buttler        NaN            0           0          0             0   

#   4   JC Buttler        NaN            0           0          0             0   

#   

#      isWicketDelivery player_out kind fielders_involved       BattingTeam  

#   0                 0        NaN  NaN               NaN  Rajasthan Royals  

#   1                 0        NaN  NaN               NaN  Rajasthan Royals  

#   2                 0        NaN  NaN               NaN  Rajasthan Royals  

#   3                 0        NaN  NaN               NaN  Rajasthan Royals  

#   4                 0        NaN  NaN               NaN  Rajasthan Royals  

'''
### Feature Engineering Process

#### Converting Date column into separate dates,months and years columns
'''

df1_copy['Dates']=df1_copy['Date'].str.split('-').str[0]
df1_copy['Months']=df1_copy['Date'].str.split('-').str[1]
df1_copy['Years']=df1_copy['Date'].str.split('-').str[2]

df1_copy.drop('Date',axis=1,inplace=True)

##Here ID column refers to Match ID so need to drop
df1_copy.head(5)
# Output:
#           ID       City Season  MatchNumber                        Team1  \

#   0  1312200  Ahmedabad   2022        Final             Rajasthan Royals   

#   1  1312199  Ahmedabad   2022  Qualifier 2  Royal Challengers Bangalore   

#   2  1312198    Kolkata   2022   Eliminator  Royal Challengers Bangalore   

#   3  1312197    Kolkata   2022  Qualifier 1             Rajasthan Royals   

#   4  1304116     Mumbai   2022           70          Sunrisers Hyderabad   

#   

#                     Team2                             Venue  \

#   0        Gujarat Titans  Narendra Modi Stadium, Ahmedabad   

#   1      Rajasthan Royals  Narendra Modi Stadium, Ahmedabad   

#   2  Lucknow Super Giants             Eden Gardens, Kolkata   

#   3        Gujarat Titans             Eden Gardens, Kolkata   

#   4          Punjab Kings          Wankhede Stadium, Mumbai   

#   

#                TossWinner TossDecision SuperOver                  WinningTeam  \

#   0      Rajasthan Royals          bat         N               Gujarat Titans   

#   1      Rajasthan Royals        field         N             Rajasthan Royals   

#   2  Lucknow Super Giants        field         N  Royal Challengers Bangalore   

#   3        Gujarat Titans        field         N               Gujarat Titans   

#   4   Sunrisers Hyderabad          bat         N                 Punjab Kings   

#   

#        WonBy  Margin method Player_of_Match  \

#   0  Wickets     7.0    NaN       HH Pandya   

#   1  Wickets     7.0    NaN      JC Buttler   

#   2     Runs    14.0    NaN      RM Patidar   

#   3  Wickets     7.0    NaN       DA Miller   

#   4  Wickets     5.0    NaN   Harpreet Brar   

#   

#                                           Team1Players  \

#   0  ['YBK Jaiswal', 'JC Buttler', 'SV Samson', 'D ...   

#   1  ['V Kohli', 'F du Plessis', 'RM Patidar', 'GJ ...   

#   2  ['V Kohli', 'F du Plessis', 'RM Patidar', 'GJ ...   

#   3  ['YBK Jaiswal', 'JC Buttler', 'SV Samson', 'D ...   

#   4  ['PK Garg', 'Abhishek Sharma', 'RA Tripathi', ...   

#   

#                                           Team2Players        Umpire1  \

#   0  ['WP Saha', 'Shubman Gill', 'MS Wade', 'HH Pan...    CB Gaffaney   

#   1  ['YBK Jaiswal', 'JC Buttler', 'SV Samson', 'D ...    CB Gaffaney   

#   2  ['Q de Kock', 'KL Rahul', 'M Vohra', 'DJ Hooda...  J Madanagopal   

#   3  ['WP Saha', 'Shubman Gill', 'MS Wade', 'HH Pan...   BNJ Oxenford   

#   4  ['JM Bairstow', 'S Dhawan', 'M Shahrukh Khan',...   AK Chaudhary   

#   

#            Umpire2 Dates Months Years  

#   0    Nitin Menon    29     05  2022  

#   1    Nitin Menon    27     05  2022  

#   2       MA Gough    25     05  2022  

#   3      VK Sharma    24     05  2022  

#   4  NA Patwardhan    22     05  2022  

##Lets check the data types for each column
df1_copy.dtypes
# Output:
#   ID                   int64

#   City                object

#   Season              object

#   MatchNumber         object

#   Team1               object

#   Team2               object

#   Venue               object

#   TossWinner          object

#   TossDecision        object

#   SuperOver           object

#   WinningTeam         object

#   WonBy               object

#   Margin             float64

#   method              object

#   Player_of_Match     object

#   Team1Players        object

#   Team2Players        object

#   Umpire1             object

#   Umpire2             object

#   Dates               object

#   Months              object

#   Years               object

#   dtype: object

## Since we changed Dates,Months and Years to seperate ones we will convert it to int datatype
df1_copy['Dates']=df1_copy['Dates'].astype(int)
df1_copy['Months']=df1_copy['Months'].astype(int)
df1_copy['Years']=df1_copy['Years'].astype(int)

df1_copy.dtypes
# Output:
#   ID                   int64

#   City                object

#   Season              object

#   MatchNumber         object

#   Team1               object

#   Team2               object

#   Venue               object

#   TossWinner          object

#   TossDecision        object

#   SuperOver           object

#   WinningTeam         object

#   WonBy               object

#   Margin             float64

#   method              object

#   Player_of_Match     object

#   Team1Players        object

#   Team2Players        object

#   Umpire1             object

#   Umpire2             object

#   Dates                int32

#   Months               int32

#   Years                int32

#   dtype: object

df2_copy.info()
# Output:
#   <class 'pandas.core.frame.DataFrame'>

#   RangeIndex: 225954 entries, 0 to 225953

#   Data columns (total 17 columns):

#    #   Column             Non-Null Count   Dtype 

#   ---  ------             --------------   ----- 

#    0   ID                 225954 non-null  int64 

#    1   innings            225954 non-null  int64 

#    2   overs              225954 non-null  int64 

#    3   ballnumber         225954 non-null  int64 

#    4   batter             225954 non-null  object

#    5   bowler             225954 non-null  object

#    6   non-striker        225954 non-null  object

#    7   extra_type         12049 non-null   object

#    8   batsman_run        225954 non-null  int64 

#    9   extras_run         225954 non-null  int64 

#    10  total_run          225954 non-null  int64 

#    11  non_boundary       225954 non-null  int64 

#    12  isWicketDelivery   225954 non-null  int64 

#    13  player_out         11151 non-null   object

#    14  kind               11151 non-null   object

#    15  fielders_involved  7988 non-null    object

#    16  BattingTeam        225954 non-null  object

#   dtypes: int64(9), object(8)

#   memory usage: 29.3+ MB


'''
### We will start our data exploration by generating simple statistics of the data.

* Let us look at what the data columns are using a pandas attribute called 'columns'.
'''

df1_copy.columns
# Output:
#   Index(['ID', 'City', 'Season', 'MatchNumber', 'Team1', 'Team2', 'Venue',

#          'TossWinner', 'TossDecision', 'SuperOver', 'WinningTeam', 'WonBy',

#          'Margin', 'method', 'Player_of_Match', 'Team1Players', 'Team2Players',

#          'Umpire1', 'Umpire2', 'Dates', 'Months', 'Years'],

#         dtype='object')

df2_copy.columns
# Output:
#   Index(['ID', 'innings', 'overs', 'ballnumber', 'batter', 'bowler',

#          'non-striker', 'extra_type', 'batsman_run', 'extras_run', 'total_run',

#          'non_boundary', 'isWicketDelivery', 'player_out', 'kind',

#          'fielders_involved', 'BattingTeam'],

#         dtype='object')

'''
## Observation:
    Since both csv files are containing different columns names there is no need to merge it.
'''

### Getting stastical description of all features
#Note: describe function works on numerical data's.

df1_copy.describe().T
# Output:
#           count           mean            std       min        25%       50%  \

#   ID      950.0  830485.247368  337567.829494  335982.0  501261.25  829738.0   

#   Margin  932.0      17.056867      21.633109       1.0       6.00       8.0   

#   Dates   950.0      15.812632       8.403462       1.0       9.00      16.0   

#   Months  950.0       4.910526       1.697142       3.0       4.00       4.5   

#   Years   950.0    2015.002105       4.315531    2008.0    2011.00    2015.0   

#   

#                  75%        max  

#   ID      1175371.75  1312200.0  

#   Margin       19.00      146.0  

#   Dates        23.00       31.0  

#   Months        5.00       11.0  

#   Years      2019.00     2022.0  

'''
## Observation
    As we can see df1_copy dataset contains many categorical features.
'''

df2_copy.describe().T
# Output:
#                        count           mean            std       min       25%  \

#   ID                225954.0  832047.003257  337954.245970  335982.0  501262.0   

#   innings           225954.0       1.483868       0.503104       1.0       1.0   

#   overs             225954.0       9.185679       5.681797       0.0       4.0   

#   ballnumber        225954.0       3.619750       1.810633       1.0       2.0   

#   batsman_run       225954.0       1.243523       1.618166       0.0       0.0   

#   extras_run        225954.0       0.066907       0.341470       0.0       0.0   

#   total_run         225954.0       1.310430       1.606050       0.0       0.0   

#   non_boundary      225954.0       0.000093       0.009640       0.0       0.0   

#   isWicketDelivery  225954.0       0.049351       0.216600       0.0       0.0   

#   

#                          50%        75%        max  

#   ID                829737.0  1178395.0  1312200.0  

#   innings                1.0        2.0        6.0  

#   overs                  9.0       14.0       19.0  

#   ballnumber             4.0        5.0       10.0  

#   batsman_run            1.0        1.0        6.0  

#   extras_run             0.0        0.0        7.0  

#   total_run              1.0        1.0        7.0  

#   non_boundary           0.0        0.0        1.0  

#   isWicketDelivery       0.0        0.0        1.0  

### For getting info about all features
df1_copy.describe(include='all').T
# Output:
#                   count unique  \

#   ID                950    NaN   

#   City              899     33   

#   Season            950     15   

#   MatchNumber       950     80   

#   Team1             950     17   

#   Team2             950     17   

#   Venue             950     49   

#   TossWinner        950     17   

#   TossDecision      950      2   

#   SuperOver         946      2   

#   WinningTeam       946     17   

#   WonBy             950      4   

#   Margin            932    NaN   

#   method             19      1   

#   Player_of_Match   946    262   

#   Team1Players      950    932   

#   Team2Players      950    937   

#   Umpire1           950     58   

#   Umpire2           950     60   

#   Dates             950    NaN   

#   Months            950    NaN   

#   Years             950    NaN   

#   

#                                                                  top freq  \

#   ID                                                             NaN  NaN   

#   City                                                        Mumbai  159   

#   Season                                                        2013   76   

#   MatchNumber                                                     17   15   

#   Team1                                  Royal Challengers Bangalore  126   

#   Team2                                               Mumbai Indians  119   

#   Venue                                                 Eden Gardens   77   

#   TossWinner                                          Mumbai Indians  123   

#   TossDecision                                                 field  599   

#   SuperOver                                                        N  932   

#   WinningTeam                                         Mumbai Indians  131   

#   WonBy                                                      Wickets  509   

#   Margin                                                         NaN  NaN   

#   method                                                         D/L   19   

#   Player_of_Match                                     AB de Villiers   25   

#   Team1Players     ['DA Warner', 'S Dhawan', 'MC Henriques', 'Yuv...    2   

#   Team2Players     ['RG Sharma', 'Q de Kock', 'SA Yadav', 'Ishan ...    2   

#   Umpire1                                               AK Chaudhary   95   

#   Umpire2                                                     S Ravi   83   

#   Dates                                                          NaN  NaN   

#   Months                                                         NaN  NaN   

#   Years                                                          NaN  NaN   

#   

#                       mean      std     min     25%     50%          75%  \

#   ID                830485   337568  335982  501261  829738  1.17537e+06   

#   City                 NaN      NaN     NaN     NaN     NaN          NaN   

#   Season               NaN      NaN     NaN     NaN     NaN          NaN   

#   MatchNumber          NaN      NaN     NaN     NaN     NaN          NaN   

#   Team1                NaN      NaN     NaN     NaN     NaN          NaN   

#   Team2                NaN      NaN     NaN     NaN     NaN          NaN   

#   Venue                NaN      NaN     NaN     NaN     NaN          NaN   

#   TossWinner           NaN      NaN     NaN     NaN     NaN          NaN   

#   TossDecision         NaN      NaN     NaN     NaN     NaN          NaN   

#   SuperOver            NaN      NaN     NaN     NaN     NaN          NaN   

#   WinningTeam          NaN      NaN     NaN     NaN     NaN          NaN   

#   WonBy                NaN      NaN     NaN     NaN     NaN          NaN   

#   Margin           17.0569  21.6331       1       6       8           19   

#   method               NaN      NaN     NaN     NaN     NaN          NaN   

#   Player_of_Match      NaN      NaN     NaN     NaN     NaN          NaN   

#   Team1Players         NaN      NaN     NaN     NaN     NaN          NaN   

#   Team2Players         NaN      NaN     NaN     NaN     NaN          NaN   

#   Umpire1              NaN      NaN     NaN     NaN     NaN          NaN   

#   Umpire2              NaN      NaN     NaN     NaN     NaN          NaN   

#   Dates            15.8126  8.40346       1       9      16           23   

#   Months           4.91053  1.69714       3       4     4.5            5   

#   Years               2015  4.31553    2008    2011    2015         2019   

#   

#                           max  

#   ID               1.3122e+06  

#   City                    NaN  

#   Season                  NaN  

#   MatchNumber             NaN  

#   Team1                   NaN  

#   Team2                   NaN  

#   Venue                   NaN  

#   TossWinner              NaN  

#   TossDecision            NaN  

#   SuperOver               NaN  

#   WinningTeam             NaN  

#   WonBy                   NaN  

#   Margin                  146  

#   method                  NaN  

#   Player_of_Match         NaN  

#   Team1Players            NaN  

#   Team2Players            NaN  

#   Umpire1                 NaN  

#   Umpire2                 NaN  

#   Dates                    31  

#   Months                   11  

#   Years                  2022  

df2_copy.describe(include='all').T
# Output:
#                       count unique             top   freq         mean  \

#   ID                 225954    NaN             NaN    NaN       832047   

#   innings            225954    NaN             NaN    NaN      1.48387   

#   overs              225954    NaN             NaN    NaN      9.18568   

#   ballnumber         225954    NaN             NaN    NaN      3.61975   

#   batter             225954    605         V Kohli   5266          NaN   

#   bowler             225954    472        R Ashwin   4024          NaN   

#   non-striker        225954    595        S Dhawan   5526          NaN   

#   extra_type          12049      5           wides   7025          NaN   

#   batsman_run        225954    NaN             NaN    NaN      1.24352   

#   extras_run         225954    NaN             NaN    NaN    0.0669074   

#   total_run          225954    NaN             NaN    NaN      1.31043   

#   non_boundary       225954    NaN             NaN    NaN  9.29393e-05   

#   isWicketDelivery   225954    NaN             NaN    NaN    0.0493508   

#   player_out          11151    573       RG Sharma    194          NaN   

#   kind                11151     10          caught   6837          NaN   

#   fielders_involved    7988    535        MS Dhoni    196          NaN   

#   BattingTeam        225954     17  Mumbai Indians  27826          NaN   

#   

#                             std     min     25%     50%         75%         max  

#   ID                     337954  335982  501262  829737  1.1784e+06  1.3122e+06  

#   innings              0.503104       1       1       1           2           6  

#   overs                  5.6818       0       4       9          14          19  

#   ballnumber            1.81063       1       2       4           5          10  

#   batter                    NaN     NaN     NaN     NaN         NaN         NaN  

#   bowler                    NaN     NaN     NaN     NaN         NaN         NaN  

#   non-striker               NaN     NaN     NaN     NaN         NaN         NaN  

#   extra_type                NaN     NaN     NaN     NaN         NaN         NaN  

#   batsman_run           1.61817       0       0       1           1           6  

#   extras_run            0.34147       0       0       0           0           7  

#   total_run             1.60605       0       0       1           1           7  

#   non_boundary       0.00964007       0       0       0           0           1  

#   isWicketDelivery       0.2166       0       0       0           0           1  

#   player_out                NaN     NaN     NaN     NaN         NaN         NaN  

#   kind                      NaN     NaN     NaN     NaN         NaN         NaN  

#   fielders_involved         NaN     NaN     NaN     NaN         NaN         NaN  

#   BattingTeam               NaN     NaN     NaN     NaN         NaN         NaN  

'''
## <font color='red'> Data Cleaning: Handling Missing Data </font>
'''

df1_copy.isnull().sum()
# Output:
#   ID                   0

#   City                51

#   Season               0

#   MatchNumber          0

#   Team1                0

#   Team2                0

#   Venue                0

#   TossWinner           0

#   TossDecision         0

#   SuperOver            4

#   WinningTeam          4

#   WonBy                0

#   Margin              18

#   method             931

#   Player_of_Match      4

#   Team1Players         0

#   Team2Players         0

#   Umpire1              0

#   Umpire2              0

#   Dates                0

#   Months               0

#   Years                0

#   dtype: int64

df2_copy.isnull().sum()
# Output:
#   ID                        0

#   innings                   0

#   overs                     0

#   ballnumber                0

#   batter                    0

#   bowler                    0

#   non-striker               0

#   extra_type           213905

#   batsman_run               0

#   extras_run                0

#   total_run                 0

#   non_boundary              0

#   isWicketDelivery          0

#   player_out           214803

#   kind                 214803

#   fielders_involved    217966

#   BattingTeam               0

#   dtype: int64

'''
## Observation
1. Checking the uniques values for the null containing columns
2. In df1_copy dataset City,Super Over,Winning Team, margin method and Player of the match columns has null values
3. In df2_copy dataset exra_type,player_out,kind and fielders_involved columns has null values.
4. Lets deep dive into these.
'''

null_val=['City','Margin','SuperOver','WinningTeam','method','Player_of_Match']

for feature in df1_copy[null_val]:
    print('Feature '{}' has these  \n {} unique values\n'.format(feature, df1_copy[feature].unique()))
    print('\n'*3)
# Output:
#   Feature 'City' has these  

#    ['Ahmedabad' 'Kolkata' 'Mumbai' 'Navi Mumbai' 'Pune' 'Dubai' 'Sharjah'

#    'Abu Dhabi' 'Delhi' 'Chennai' nan 'Hyderabad' 'Visakhapatnam'

#    'Chandigarh' 'Bengaluru' 'Jaipur' 'Indore' 'Bangalore' 'Kanpur' 'Rajkot'

#    'Raipur' 'Ranchi' 'Cuttack' 'Dharamsala' 'Kochi' 'Nagpur' 'Johannesburg'

#    'Centurion' 'Durban' 'Bloemfontein' 'Port Elizabeth' 'Kimberley'

#    'East London' 'Cape Town'] unique values

#   

#   

#   

#   

#   

#   Feature 'Margin' has these  

#    [  7.  14.   5.   8.   2.   3.  17.  24.  54.  62.  52.  91.  67.  75.

#      6.  21.  13.  20.   4.  29.  11.  36.   9.  15.  18.  16.  37.  12.

#     23.  44.  61.  27.  42.  86.  33.  55.  34.   1.  nan  69.  10.  45.

#     38.  57.  60.  88.  59.  82.  46.  48.  97.  49.  80.  40.  39.  22.

#    118.  28.  25.  30.  31. 102.  64.  71.  19. 146.  26.  51.  35. 144.

#     85.  41. 138.  32.  72.  93.  50.  77.  65.  58. 130.  87.  43.  47.

#     74. 111.  76.  63.  98.  53.  78.  92. 105.  66. 140.] unique values

#   

#   

#   

#   

#   

#   Feature 'SuperOver' has these  

#    ['N' 'Y' nan] unique values

#   

#   

#   

#   

#   

#   Feature 'WinningTeam' has these  

#    ['Gujarat Titans' 'Rajasthan Royals' 'Royal Challengers Bangalore'

#    'Punjab Kings' 'Mumbai Indians' 'Lucknow Super Giants'

#    'Sunrisers Hyderabad' 'Delhi Capitals' 'Kolkata Knight Riders'

#    'Chennai Super Kings' 'Kings XI Punjab' nan 'Delhi Daredevils'

#    'Rising Pune Supergiant' 'Gujarat Lions' 'Pune Warriors'

#    'Deccan Chargers' 'Kochi Tuskers Kerala'] unique values

#   

#   

#   

#   

#   

#   Feature 'method' has these  

#    [nan 'D/L'] unique values

#   

#   

#   

#   

#   

#   Feature 'Player_of_Match' has these  

#    ['HH Pandya' 'JC Buttler' 'RM Patidar' 'DA Miller' 'Harpreet Brar'

#    'JJ Bumrah' 'R Ashwin' 'V Kohli' 'Q de Kock' 'RA Tripathi' 'SN Thakur'

#    'TA Boult' 'WP Saha' 'AD Russell' 'JM Bairstow' 'DR Sams' 'MR Marsh'

#    'Shubman Gill' 'DP Conway' 'PWH de Silva' 'Avesh Khan' 'YBK Jaiswal'

#    'TH David' 'DA Warner' 'HV Patel' 'K Rabada' 'RK Singh' 'RD Gaikwad'

#    'Mohsin Khan' 'SA Yadav' 'R Tewatia' 'KH Pandya' 'Kuldeep Yadav'

#    'Umran Malik' 'R Parag' 'S Dhawan' 'KL Rahul' 'M Jansen' 'Rashid Khan'

#    'Mukesh Choudhary' 'F du Plessis' 'YS Chahal' 'KD Karthik' 'MA Agarwal'

#    'S Dube' 'KS Williamson' 'Anuj Rawat' 'Abhishek Sharma' 'PJ Cummins'

#    'LS Livingstone' 'LH Ferguson' 'UT Yadav' 'E Lewis' 'SV Samson'

#    'Mohammed Shami' 'OF Smith' 'VR Iyer' 'SP Narine' 'KS Bharat'

#    'Ishan Kishan' 'Shivam Mavi' 'NM Coulter-Nile' 'AR Patel' 'GJ Maxwell'

#    'JR Hazlewood' 'KA Pollard' 'JJ Roy' 'RA Jadeja' 'SS Iyer' 'JO Holder'

#    'DJ Bravo' 'A Nortje' 'Kartik Tyagi' 'CV Varun' 'PP Shaw'

#    'AB de Villiers' 'EJG Morgan' 'CH Morris' 'D Padikkal' 'A Mishra'

#    'MM Ali' 'DL Chahar' 'JD Unadkat' 'RD Chahar' 'N Rana' 'MP Stoinis'

#    'S Nadeem' 'Sandeep Sharma' 'BA Stokes' 'CH Gayle' 'CJ Jordan'

#    'MK Pandey' 'Mohammed Siraj' 'SR Watson' 'PK Garg' 'RG Sharma'

#    'AT Rayudu' 'RR Pant' 'SO Hetmyer' 'MS Dhoni' nan 'VR Aaron' 'KK Ahmed'

#    'PA Patel' 'SPD Smith' 'SL Malinga' 'Imran Tahir' 'KMA Paul' 'HF Gurney'

#    'AS Joseph' 'Harbhajan Singh' 'S Gopal' 'SM Curran' 'L Ngidi' 'CA Lynn'

#    'Mujeeb Ur Rahman' 'TG Southee' 'AS Rajpoot' 'JC Archer' 'B Stanlake'

#    'SW Billings' 'KV Sharma' 'Washington Sundar' 'KK Nair' 'MM Sharma'

#    'DR Smith' 'LMP Simmons' 'G Gambhir' 'AJ Tye' 'RV Uthappa' 'HM Amla'

#    'MJ McClenaghan' 'SK Raina' 'B Kumar' 'CJ Anderson' 'KM Jadhav'

#    'Yuvraj Singh' 'BCJ Cutting' 'MC Henriques' 'YK Pathan' 'AB Dinda'

#    'A Zampa' 'P Kumar' 'A Nehra' 'AM Rahane' 'CR Brathwaite'

#    'Mustafizur Rahman' 'M Vohra' 'AJ Finch' 'P Negi' 'Z Khan' 'PP Chawla'

#    'Mandeep Singh' 'BB McCullum' 'MA Starc' 'SE Marsh' 'JP Duminy'

#    'GJ Bailey' 'DJ Hooda' 'JP Faulkner' 'M Morkel' 'V Sehwag' 'MEK Hussey'

#    'DW Steyn' 'PV Tambe' 'M Vijay' 'JH Kallis' 'BJ Hodge' 'LJ Wright'

#    'Azhar Mahmood' 'AP Tare' 'AC Gilchrist' 'MG Johnson' 'KK Cooper'

#    'SR Tendulkar' 'DJG Sammy' 'I Sharma' 'Harmeet Singh' 'R Vinay Kumar'

#    'GH Vihari' 'MS Gony' 'SK Trivedi' 'R Dravid' 'MS Bisla'

#    'Shakib Al Hasan' 'DJ Hussey' 'A Chandila' 'BW Hilfenhaus'

#    'KC Sangakkara' 'CL White' 'B Lee' 'SC Ganguly' 'KMDN Kulasekara'

#    'KP Pietersen' 'JD Ryder' 'AD Mascarenhas' 'L Balaji' 'MN Samuels'

#    'IK Pathan' 'RE Levi' 'MM Patel' 'JEC Franklin' 'S Aravind' 'BA Bhatt'

#    'R Sharma' 'Iqbal Abdulla' 'P Parameswaran' 'LRPL Taylor' 'JA Morkel'

#    'J Botha' 'MK Tiwary' 'DE Bollinger' 'SK Warne' 'DPMD Jayawardene'

#    'S Sohal' 'PC Valthaty' 'MD Mishra' 'SB Wagh' 'S Anirudha' 'A Kumble'

#    'M Kartik' 'A Symonds' 'R McLaren' 'RJ Harris' 'TL Suman' 'MJ Lumb'

#    'PD Collingwood' 'NV Ojha' 'AC Voges' 'J Theron' 'AA Jhunjhunwala'

#    'ML Hayden' 'WPUJC Vaas' 'AD Mathews' 'M Muralitharan' 'LR Shukla'

#    'R Bhatia' 'S Badrinath' 'A Singh' 'GC Smith' 'SB Jakati' 'DP Nannes'

#    'MV Boucher' 'HH Gibbs' 'TM Dilshan' 'PP Ojha' 'RS Bopara' 'RP Singh'

#    'DL Vettori' 'M Ntini' 'CRD Fernando' 'Sohail Tanvir' 'Umar Gul'

#    'SP Goswami' 'SM Pollock' 'ST Jayasuriya' 'Shoaib Akhtar' 'S Sreesanth'

#    'SA Asnodkar' 'GD McGrath' 'SM Katich' 'JDP Oram' 'MF Maharoof'] unique values

#   

#   

#   

#   

#   


df1_copy=df1_copy.dropna()

df1_copy.isnull().sum()
# Output:
#   ID                 0

#   City               0

#   Season             0

#   MatchNumber        0

#   Team1              0

#   Team2              0

#   Venue              0

#   TossWinner         0

#   TossDecision       0

#   SuperOver          0

#   WinningTeam        0

#   WonBy              0

#   Margin             0

#   method             0

#   Player_of_Match    0

#   Team1Players       0

#   Team2Players       0

#   Umpire1            0

#   Umpire2            0

#   Dates              0

#   Months             0

#   Years              0

#   dtype: int64

df1_copy.shape
# Output:
#   (19, 22)

'''
## Observation:
1. As refered in dataset pandas is readin NA(not applicable) as nan value so while we drop all rows and eventually it got reduced from 950 to 19.
2. So droping null values doesn't suits here eventhough it is mentioned as NA which means as Not Applicable in cricket terminology.
3. We will proceed ahead by renaming nan value to some other name
'''

'''
    Since we removed NA values we need to again create copy of a dataset and redo the same process until without removing NA values.
'''

#Filling with unknown class
#At times, the missing information is valuable itself, and to impute it with the most common class won’t be appropriate. In such a case, we can replace them with a value like “Unknown” or “Missing” using the fillna() method. 
for null_values in df1_copy[null_val]:
        if null_values=='City':
             df1_copy[null_values]=df1_copy[null_values].fillna('Unknown')
        elif null_values=='SuperOver':
             df1_copy[null_values]=df1_copy[null_values].fillna('N')
        elif null_values=='method':
            df1_copy[null_values]=df1_copy[null_values].fillna('No D/L')
        elif null_values=='WinningTeam':
             df1_copy[null_values]=df1_copy[null_values].fillna('Unknown')
        elif null_values=='Margin':
             df1_copy[null_values]=df1_copy[null_values].fillna('Unknown')
        elif null_values=='Player_of_Match':
            df1_copy[null_values]=df1_copy[null_values].fillna('Unknown')
        else:
            pass

for feature in df1_copy[null_val]:
    print('Feature '{}' has these  \n {} unique values\n'.format(feature, df1_copy[feature].unique()))
    print('\n'*3)
# Output:
#   Feature 'City' has these  

#    ['Ahmedabad' 'Kolkata' 'Mumbai' 'Navi Mumbai' 'Pune' 'Dubai' 'Sharjah'

#    'Abu Dhabi' 'Delhi' 'Chennai' 'Unknown' 'Hyderabad' 'Visakhapatnam'

#    'Chandigarh' 'Bengaluru' 'Jaipur' 'Indore' 'Bangalore' 'Kanpur' 'Rajkot'

#    'Raipur' 'Ranchi' 'Cuttack' 'Dharamsala' 'Kochi' 'Nagpur' 'Johannesburg'

#    'Centurion' 'Durban' 'Bloemfontein' 'Port Elizabeth' 'Kimberley'

#    'East London' 'Cape Town'] unique values

#   

#   

#   

#   

#   

#   Feature 'Margin' has these  

#    [7.0 14.0 5.0 8.0 2.0 3.0 17.0 24.0 54.0 62.0 52.0 91.0 67.0 75.0 6.0 21.0

#    13.0 20.0 4.0 29.0 11.0 36.0 9.0 15.0 18.0 16.0 37.0 12.0 23.0 44.0 61.0

#    27.0 42.0 86.0 33.0 55.0 34.0 1.0 'Unknown' 69.0 10.0 45.0 38.0 57.0 60.0

#    88.0 59.0 82.0 46.0 48.0 97.0 49.0 80.0 40.0 39.0 22.0 118.0 28.0 25.0

#    30.0 31.0 102.0 64.0 71.0 19.0 146.0 26.0 51.0 35.0 144.0 85.0 41.0 138.0

#    32.0 72.0 93.0 50.0 77.0 65.0 58.0 130.0 87.0 43.0 47.0 74.0 111.0 76.0

#    63.0 98.0 53.0 78.0 92.0 105.0 66.0 140.0] unique values

#   

#   

#   

#   

#   

#   Feature 'SuperOver' has these  

#    ['N' 'Y'] unique values

#   

#   

#   

#   

#   

#   Feature 'WinningTeam' has these  

#    ['Gujarat Titans' 'Rajasthan Royals' 'Royal Challengers Bangalore'

#    'Punjab Kings' 'Mumbai Indians' 'Lucknow Super Giants'

#    'Sunrisers Hyderabad' 'Delhi Capitals' 'Kolkata Knight Riders'

#    'Chennai Super Kings' 'Kings XI Punjab' 'Unknown' 'Delhi Daredevils'

#    'Rising Pune Supergiant' 'Gujarat Lions' 'Pune Warriors'

#    'Deccan Chargers' 'Kochi Tuskers Kerala'] unique values

#   

#   

#   

#   

#   

#   Feature 'method' has these  

#    ['No D/L' 'D/L'] unique values

#   

#   

#   

#   

#   

#   Feature 'Player_of_Match' has these  

#    ['HH Pandya' 'JC Buttler' 'RM Patidar' 'DA Miller' 'Harpreet Brar'

#    'JJ Bumrah' 'R Ashwin' 'V Kohli' 'Q de Kock' 'RA Tripathi' 'SN Thakur'

#    'TA Boult' 'WP Saha' 'AD Russell' 'JM Bairstow' 'DR Sams' 'MR Marsh'

#    'Shubman Gill' 'DP Conway' 'PWH de Silva' 'Avesh Khan' 'YBK Jaiswal'

#    'TH David' 'DA Warner' 'HV Patel' 'K Rabada' 'RK Singh' 'RD Gaikwad'

#    'Mohsin Khan' 'SA Yadav' 'R Tewatia' 'KH Pandya' 'Kuldeep Yadav'

#    'Umran Malik' 'R Parag' 'S Dhawan' 'KL Rahul' 'M Jansen' 'Rashid Khan'

#    'Mukesh Choudhary' 'F du Plessis' 'YS Chahal' 'KD Karthik' 'MA Agarwal'

#    'S Dube' 'KS Williamson' 'Anuj Rawat' 'Abhishek Sharma' 'PJ Cummins'

#    'LS Livingstone' 'LH Ferguson' 'UT Yadav' 'E Lewis' 'SV Samson'

#    'Mohammed Shami' 'OF Smith' 'VR Iyer' 'SP Narine' 'KS Bharat'

#    'Ishan Kishan' 'Shivam Mavi' 'NM Coulter-Nile' 'AR Patel' 'GJ Maxwell'

#    'JR Hazlewood' 'KA Pollard' 'JJ Roy' 'RA Jadeja' 'SS Iyer' 'JO Holder'

#    'DJ Bravo' 'A Nortje' 'Kartik Tyagi' 'CV Varun' 'PP Shaw'

#    'AB de Villiers' 'EJG Morgan' 'CH Morris' 'D Padikkal' 'A Mishra'

#    'MM Ali' 'DL Chahar' 'JD Unadkat' 'RD Chahar' 'N Rana' 'MP Stoinis'

#    'S Nadeem' 'Sandeep Sharma' 'BA Stokes' 'CH Gayle' 'CJ Jordan'

#    'MK Pandey' 'Mohammed Siraj' 'SR Watson' 'PK Garg' 'RG Sharma'

#    'AT Rayudu' 'RR Pant' 'SO Hetmyer' 'MS Dhoni' 'Unknown' 'VR Aaron'

#    'KK Ahmed' 'PA Patel' 'SPD Smith' 'SL Malinga' 'Imran Tahir' 'KMA Paul'

#    'HF Gurney' 'AS Joseph' 'Harbhajan Singh' 'S Gopal' 'SM Curran' 'L Ngidi'

#    'CA Lynn' 'Mujeeb Ur Rahman' 'TG Southee' 'AS Rajpoot' 'JC Archer'

#    'B Stanlake' 'SW Billings' 'KV Sharma' 'Washington Sundar' 'KK Nair'

#    'MM Sharma' 'DR Smith' 'LMP Simmons' 'G Gambhir' 'AJ Tye' 'RV Uthappa'

#    'HM Amla' 'MJ McClenaghan' 'SK Raina' 'B Kumar' 'CJ Anderson' 'KM Jadhav'

#    'Yuvraj Singh' 'BCJ Cutting' 'MC Henriques' 'YK Pathan' 'AB Dinda'

#    'A Zampa' 'P Kumar' 'A Nehra' 'AM Rahane' 'CR Brathwaite'

#    'Mustafizur Rahman' 'M Vohra' 'AJ Finch' 'P Negi' 'Z Khan' 'PP Chawla'

#    'Mandeep Singh' 'BB McCullum' 'MA Starc' 'SE Marsh' 'JP Duminy'

#    'GJ Bailey' 'DJ Hooda' 'JP Faulkner' 'M Morkel' 'V Sehwag' 'MEK Hussey'

#    'DW Steyn' 'PV Tambe' 'M Vijay' 'JH Kallis' 'BJ Hodge' 'LJ Wright'

#    'Azhar Mahmood' 'AP Tare' 'AC Gilchrist' 'MG Johnson' 'KK Cooper'

#    'SR Tendulkar' 'DJG Sammy' 'I Sharma' 'Harmeet Singh' 'R Vinay Kumar'

#    'GH Vihari' 'MS Gony' 'SK Trivedi' 'R Dravid' 'MS Bisla'

#    'Shakib Al Hasan' 'DJ Hussey' 'A Chandila' 'BW Hilfenhaus'

#    'KC Sangakkara' 'CL White' 'B Lee' 'SC Ganguly' 'KMDN Kulasekara'

#    'KP Pietersen' 'JD Ryder' 'AD Mascarenhas' 'L Balaji' 'MN Samuels'

#    'IK Pathan' 'RE Levi' 'MM Patel' 'JEC Franklin' 'S Aravind' 'BA Bhatt'

#    'R Sharma' 'Iqbal Abdulla' 'P Parameswaran' 'LRPL Taylor' 'JA Morkel'

#    'J Botha' 'MK Tiwary' 'DE Bollinger' 'SK Warne' 'DPMD Jayawardene'

#    'S Sohal' 'PC Valthaty' 'MD Mishra' 'SB Wagh' 'S Anirudha' 'A Kumble'

#    'M Kartik' 'A Symonds' 'R McLaren' 'RJ Harris' 'TL Suman' 'MJ Lumb'

#    'PD Collingwood' 'NV Ojha' 'AC Voges' 'J Theron' 'AA Jhunjhunwala'

#    'ML Hayden' 'WPUJC Vaas' 'AD Mathews' 'M Muralitharan' 'LR Shukla'

#    'R Bhatia' 'S Badrinath' 'A Singh' 'GC Smith' 'SB Jakati' 'DP Nannes'

#    'MV Boucher' 'HH Gibbs' 'TM Dilshan' 'PP Ojha' 'RS Bopara' 'RP Singh'

#    'DL Vettori' 'M Ntini' 'CRD Fernando' 'Sohail Tanvir' 'Umar Gul'

#    'SP Goswami' 'SM Pollock' 'ST Jayasuriya' 'Shoaib Akhtar' 'S Sreesanth'

#    'SA Asnodkar' 'GD McGrath' 'SM Katich' 'JDP Oram' 'MF Maharoof'] unique values

#   

#   

#   

#   

#   


df1_copy.isnull().sum()
# Output:
#   ID                 0

#   City               0

#   Season             0

#   MatchNumber        0

#   Team1              0

#   Team2              0

#   Venue              0

#   TossWinner         0

#   TossDecision       0

#   SuperOver          0

#   WinningTeam        0

#   WonBy              0

#   Margin             0

#   method             0

#   Player_of_Match    0

#   Team1Players       0

#   Team2Players       0

#   Umpire1            0

#   Umpire2            0

#   Dates              0

#   Months             0

#   Years              0

#   dtype: int64

'''
## Observations:
1. Now df1_copy has no null values
'''

##Now checking df2_copy dataset which has Bowling and batting data

df2_copy.isnull().sum()
# Output:
#   ID                        0

#   innings                   0

#   overs                     0

#   ballnumber                0

#   batter                    0

#   bowler                    0

#   non-striker               0

#   extra_type           213905

#   batsman_run               0

#   extras_run                0

#   total_run                 0

#   non_boundary              0

#   isWicketDelivery          0

#   player_out           214803

#   kind                 214803

#   fielders_involved    217966

#   BattingTeam               0

#   dtype: int64

## We will adhere the same stratergy which we followed for df1_copy

null_c=['extra_type','player_out','kind','fielders_involved']

#Filling with unknown class
#At times, the missing information is valuable itself, and to impute it with the most common class won’t be appropriate. In such a case, we can replace them with a value like “Unknown” or “Missing” using the fillna() method. 
for null_valuess in df2_copy[null_c]:
        if null_valuess=='extra_type':
             df2_copy[null_valuess]=df2_copy[null_valuess].fillna('No Extras')
        elif null_valuess=='player_out':
             df2_copy[null_valuess]=df2_copy[null_valuess].fillna('Player not known')
        elif null_valuess=='kind':
            df2_copy[null_valuess]=df2_copy[null_valuess].fillna('Unknown')
        elif null_valuess=='fielders_involved':
             df2_copy[null_valuess]=df2_copy[null_valuess].fillna('Player not known')
        else:
            pass

for feature in df2_copy[null_c]:
    print('Feature '{}' has these  \n {} unique values\n'.format(feature, df2_copy[feature].unique()))
    print('\n'*3)
# Output:
#   Feature 'extra_type' has these  

#    ['No Extras' 'legbyes' 'wides' 'byes' 'noballs' 'penalty'] unique values

#   

#   

#   

#   

#   

#   Feature 'player_out' has these  

#    ['Player not known' 'YBK Jaiswal' 'SV Samson' 'D Padikkal' 'JC Buttler'

#    'SO Hetmyer' 'R Ashwin' 'TA Boult' 'OC McCoy' 'R Parag' 'WP Saha'

#    'MS Wade' 'HH Pandya' 'V Kohli' 'F du Plessis' 'GJ Maxwell' 'RM Patidar'

#    'MK Lomror' 'KD Karthik' 'PWH de Silva' 'HV Patel' 'Q de Kock' 'M Vohra'

#    'DJ Hooda' 'MP Stoinis' 'KL Rahul' 'KH Pandya' 'Shubman Gill' 'PK Garg'

#    'RA Tripathi' 'Abhishek Sharma' 'N Pooran' 'AK Markram'

#    'Washington Sundar' 'J Suchith' 'B Kumar' 'JM Bairstow' 'M Shahrukh Khan'

#    'MA Agarwal' 'S Dhawan' 'JM Sharma' 'DA Warner' 'MR Marsh' 'PP Shaw'

#    'SN Khan' 'RR Pant' 'R Powell' 'SN Thakur' 'RG Sharma' 'Ishan Kishan'

#    'D Brevis' 'TH David' 'Tilak Varma' 'RD Gaikwad' 'DP Conway'

#    'N Jagadeesan' 'AT Rayudu' 'MS Dhoni' 'MM Ali' 'DA Miller' 'R Tewatia'

#    'VR Iyer' 'A Tomar' 'N Rana' 'SS Iyer' 'SW Billings' 'AD Russell'

#    'RK Singh' 'UT Yadav' 'DR Sams' 'T Stubbs' 'R Sanjay Yadav' 'Lalit Yadav'

#    'PBB Rajapaksa' 'LS Livingstone' 'Harpreet Brar' 'R Dhawan' 'K Rabada'

#    'JDS Neesham' 'A Badoni' 'JO Holder' 'PVD Chameera' 'S Dube' 'AM Rahane'

#    'KS Williamson' 'M Jansen' 'Shashank Singh' 'RD Chahar' 'Shahbaz Ahmed'

#    'RV Uthappa' 'DJ Bravo' 'Simarjeet Singh' 'M Theekshana'

#    'Mukesh Choudhary' 'HR Shokeen' 'KS Bharat' 'KS Sharma' 'Mohsin Khan'

#    'Avesh Khan' 'SP Jackson' 'PJ Cummins' 'SP Narine' 'TG Southee'

#    'Ramandeep Singh' 'M Ashwin' 'K Kartikeya' 'KA Pollard' 'JJ Bumrah'

#    'RV Patel' 'AR Patel' 'Kuldeep Yadav' 'KK Ahmed' 'Kartik Tyagi'

#    'Umran Malik' 'B Indrajith' 'AJ Finch' 'AS Roy' 'Harshit Rana' 'SA Yadav'

#    'B Sai Sudharsan' 'Mandeep Singh' 'SA Abbott' 'RA Jadeja' 'D Pretorius'

#    'Rashid Khan' 'PJ Sangwan' 'LH Ferguson' 'KK Nair' 'DJ Mitchell'

#    'A Manohar' 'M Prasidh Krishna' 'SS Prabhudessai' 'Mohammed Siraj'

#    'MJ Santner' 'MK Pandey' 'JD Unadkat' 'Anuj Rawat' 'Yash Dayal'

#    'Shivam Mavi' 'NT Ellis' 'Arshdeep Singh' 'V Shankar' 'AS Joseph'

#    'P Simran Singh' 'OF Smith' 'VG Arora' 'FA Allen' 'Aman Hakim Khan'

#    'HE van der Dussen' 'YS Chahal' 'TS Mills' 'Akash Deep' 'K Gowtham'

#    'Rasikh Salam' 'E Lewis' 'DJ Willey' 'SE Rutherford' 'Abdul Samad'

#    'R Shepherd' 'CJ Jordan' 'TL Seifert' 'Navdeep Saini' 'Anmolpreet Singh'

#    'RA Bawa' 'Shakib Al Hasan' 'EJG Morgan' 'AB de Villiers' 'DT Christian'

#    'SS Tiwary' 'NM Coulter-Nile' 'J Yadav' 'SPD Smith' 'CH Morris'

#    'C Sakariya' 'JJ Roy' 'AF Milne' 'CH Gayle' 'KM Jadhav' 'GD Phillips'

#    'Sandeep Sharma' 'SK Raina' 'SM Curran' 'S Gopal' 'GHS Garton'

#    'PP Chawla' 'Mohammad Nabi' 'Sachin Baby' 'KA Jamieson' 'DJ Malan'

#    'MC Henriques' 'Ravi Bishnoi' 'Virat Singh' 'KL Nagarkoti' 'CV Varun'

#    'Mohammed Shami' 'JA Richardson' 'TK Curran' 'S Nadeem' 'BA Stokes'

#    'CA Lynn' 'SP Goswami' 'AT Carey' 'JC Archer' 'Mujeeb Ur Rahman'

#    'SS Cottrell' 'T Banton' 'SR Watson' 'M Vijay' 'A Nortje' 'DL Chahar'

#    'I Udana' 'AS Rajpoot' 'JR Philippe' 'NS Naik' 'AJ Tye' 'VR Aaron'

#    'TU Deshpande' 'JL Pattinson' 'MJ McClenaghan' 'C Munro' 'KMA Paul'

#    'MJ Guptill' 'A Mishra' 'YK Pathan' 'PA Patel' 'Gurkeerat Singh'

#    'STR Binny' 'IS Sodhi' 'CA Ingram' 'H Klaasen' 'P Negi' 'DR Shorey'

#    'Harbhajan Singh' 'CR Brathwaite' 'AD Nath' 'GC Viljoen' 'AJ Turner'

#    'BCJ Cutting' 'RK Bhui' 'JL Denly' 'SD Lad' 'S Kaul' 'Yuvraj Singh'

#    'GH Vihari' 'S Lamichhane' 'P Ray Barman' 'C de Grandhomme' 'M Markande'

#    'JPR Scantlebury-Searles' 'MK Tiwary' 'AD Hales' 'MM Sharma' 'DJM Short'

#    'P Chopra' 'NV Ojha' 'BB McCullum' 'JP Duminy' 'BB Sran' 'CJ Anderson'

#    'Basil Thampi' 'Mustafizur Rahman' 'G Gambhir' 'LE Plunkett' 'B Laughlin'

#    'DS Kulkarni' 'CR Woakes' 'MA Wood' 'LMP Simmons' 'KV Sharma' 'IR Jaggi'

#    'Vishnu Vinod' 'TM Head' 'MN Samuels' 'SE Marsh' 'Swapnil Singh'

#    'I Sharma' 'DR Smith' 'JP Faulkner' 'Ankit Soni' 'P Kumar' 'MM Patel'

#    'HM Amla' 'Z Khan' 'Bipul Sharma' 'S Aravind' 'S Badree' 'A Choudhary'

#    'IK Pathan' 'Anureet Singh' 'AP Tare' 'AD Mathews' 'KC Cariappa'

#    'Ankit Sharma' 'R Bhatia' 'A Zampa' 'AB Dinda' 'ER Dwivedi' 'R Sathish'

#    'F Behardien' 'GJ Bailey' 'UT Khawaja' 'NLTC Perera' 'KJ Abbott'

#    'Imran Tahir' 'S Kaushik' 'UBT Chand' 'PSP Handscomb' 'Parvez Rasool'

#    'MG Johnson' 'JA Morkel' 'KP Pietersen' 'DW Steyn' 'P Sahu'

#    'A Ashish Reddy' 'R Vinay Kumar' 'MEK Hussey' 'D Wiese' 'A Nehra'

#    'Azhar Mahmood' 'J Botha' 'GB Hogg' 'Karanveer Singh' 'RN ten Doeschate'

#    'NJ Maddinson' 'MA Starc' 'Iqbal Abdulla' 'V Sehwag' 'RS Bopara'

#    'DJ Muthuswami' 'MS Bisla' 'RR Rossouw' 'DJG Sammy' 'AN Ahmed'

#    'CM Gautam' 'DJ Hussey' 'Y Venugopal Rao' 'S Anirudha' 'YV Takawale'

#    'VH Zol' 'BJ Hodge' 'KK Cooper' 'M de Lange' 'PP Ojha' 'BE Hendricks'

#    'WD Parnell' 'S Rana' 'LRPL Taylor' 'R Shukla' 'M Manhas' 'LR Shukla'

#    'Shivam Sharma' 'KW Richardson' 'PV Tambe' 'BR Dunk' 'CA Pujara'

#    'JH Kallis' 'L Balaji' 'R Rampaul' 'AM Nayar' 'SL Malinga' 'S Badrinath'

#    'R Dravid' 'CL White' 'BB Samantray' 'DH Yagnik' 'P Dogra' 'LJ Wright'

#    'DPMD Jayawardene' 'B Chipli' 'BJ Rohrer' 'M Morkel' 'AC Gilchrist'

#    'RE van der Merwe' 'SR Tendulkar' 'MC Juneja' 'LA Pomersbach' 'A Mithun'

#    'M Kartik' 'Harmeet Singh' 'P Awana' 'UA Birla' 'M Rawat' 'MS Gony'

#    'KC Sangakkara' 'DB Das' 'R McLaren' 'PA Reddy' 'BMAJ Mendis' 'OA Shah'

#    'TL Suman' 'BAW Mendis' 'S Narwal' 'R Sharma' 'A Mukund' 'TM Dilshan'

#    'KB Arun Karthik' 'J Syed Mohammad' 'X Thalaivan Sargunam' 'AG Murtaza'

#    'IC Pandey' 'S Sreesanth' 'SW Tait' 'SK Trivedi' 'PC Valthaty'

#    'AB Agarkar' 'RT Ponting' 'AB McDonald' 'SMSM Senanayake' 'DB Ravi Teja'

#    'MDKJ Perera' 'RJ Harris' 'B Lee' 'AL Menaria' 'Sunny Gupta'

#    'JEC Franklin' 'M Muralitharan' 'MJ Clarke' 'JD Ryder' 'SC Ganguly'

#    'AP Majumdar' 'CJ Ferguson' 'Harpreet Singh' 'SD Chitnis' 'N Saini'

#    'HH Gibbs' 'RP Singh' 'MD Mishra' 'AC Thomas' 'DJ Harris'

#    'AA Jhunjhunwala' 'Y Nagar' 'AUK Pathan' 'RJ Peterson' 'V Pratap Singh'

#    'RE Levi' 'AC Blizzard' 'AD Mascarenhas' 'DJ Jacobs' 'CJ McKay'

#    'DL Vettori' 'M Kaif' 'RR Bhatkal' 'AA Chavan' 'A Singh' 'DE Bollinger'

#    'BA Bhatt' 'Y Gnaneswara Rao' 'JJ van der Wath' 'CK Langeveldt' 'S Sohal'

#    'FY Fazal' 'PR Shah' 'JDP Oram' 'SK Warne' 'ND Doshi' 'S Sriram'

#    'JR Hopes' 'TR Birt' 'MJ Lumb' 'A Symonds' 'RV Gomez' 'AS Raut'

#    'M Klinger' 'Sunny Singh' 'MV Boucher' 'GC Smith' 'SB Wagh' 'B Akhil'

#    'RR Powar' 'TD Paine' 'JE Taylor' 'NL McCullum' 'VVS Laxman' 'BJ Haddin'

#    'Joginder Sharma' 'S Randiv' 'SA Asnodkar' 'AG Paunikar' 'R Ninan'

#    'ML Hayden' 'Anirudh Singh' 'B Sumanth' 'WPUJC Vaas' 'AC Voges'

#    'Pankaj Singh' 'C Madan' 'PD Collingwood' 'KP Appanna' 'ST Jayasuriya'

#    'AP Dole' 'MF Maharoof' 'T Thushara' 'AB Barath' 'AA Bilakhia' 'K Goel'

#    'VS Malik' 'Jaskaran Singh' 'KAJ Roach' 'J Theron' 'SJ Srivastava'

#    'S Ladda' 'JM Kemp' 'DR Martyn' 'DP Nannes' 'RS Gavaskar' 'SE Bond'

#    'A Uniyal' 'Mohammad Ashraful' 'SM Katich' 'WA Mota' 'RJ Quiney'

#    'NK Patel' 'T Henderson' 'Yashpal Singh' 'SS Shaikh' 'C Nanda' 'S Tyagi'

#    'Shoaib Ahmed' 'AN Ghosh' 'LA Carseldine' 'MN van Wyk' 'L Ronchi'

#    'RR Raje' 'W Jaffer' 'D du Preez' 'SB Jakati' 'R Bishnoi' 'A Kumble'

#    'GR Napier' 'FH Edwards' 'SB Bangar' 'A Flintoff' 'SB Styris' 'T Kohli'

#    'A Chopra' 'Kamran Khan' 'S Vidyut' 'CK Kapugedera' 'Kamran Akmal'

#    'Sohail Tanvir' 'VY Mahesh' 'Mohammad Asif' 'AS Yadav' 'Shahid Afridi'

#    'SP Fleming' 'SM Pollock' 'Salman Butt' 'Umar Gul' 'Misbah-ul-Haq'

#    'A Nel' 'VS Yeligati' 'Mohammad Hafeez' 'DJ Thornely' 'LPC Silva' 'H Das'

#    'J Arunkumar' 'DT Patil' 'Shoaib Akhtar' 'Younis Khan' 'D Salunkhe'

#    'T Taibu' 'RR Sarwan' 'VRV Singh' 'S Chanderpaul' 'Shoaib Malik'

#    'M Ntini' 'GD McGrath' 'DNT Zoysa' 'D Kalyankrishna' 'TM Srivastava'

#    'SB Joshi' 'MA Khote' 'DS Lehmann' 'AA Noffke'] unique values

#   

#   

#   

#   

#   

#   Feature 'kind' has these  

#    ['Unknown' 'caught' 'caught and bowled' 'run out' 'bowled' 'stumped' 'lbw'

#    'hit wicket' 'retired hurt' 'retired out' 'obstructing the field'] unique values

#   

#   

#   

#   

#   

#   Feature 'fielders_involved' has these  

#    ['Player not known' 'R Sai Kishore' 'Mohammed Shami' 'WP Saha' 'DA Miller'

#    'R Tewatia' 'R Parag' 'YBK Jaiswal' 'SV Samson' 'R Ashwin' 'OC McCoy'

#    'JC Buttler' 'V Kohli' 'KD Karthik' 'Q de Kock' 'Mohsin Khan' 'E Lewis'

#    'KL Rahul' 'F du Plessis' 'Shahbaz Ahmed' 'RM Patidar' 'AS Joseph'

#    'D Padikkal' 'MA Agarwal' 'S Dhawan' 'LS Livingstone' 'JM Sharma'

#    'PN Mankad' 'Washington Sundar' 'J Suchith' 'PK Garg' 'JJ Bumrah'

#    'RG Sharma' 'Ishan Kishan' 'TH David' 'SN Thakur' 'DA Warner' 'PP Shaw'

#    'RR Pant' 'MM Ali' 'M Pathirana' 'DP Conway' 'GJ Maxwell' 'HH Pandya'

#    'MS Wade' 'MP Stoinis' 'DJ Hooda' 'M Markande' 'Tilak Varma'

#    'KS Williamson' 'B Kumar' 'T Natarajan' 'RD Chahar' 'PBB Rajapaksa'

#    'R Dhawan' 'Harpreet Brar' 'AR Patel' 'A Nortje' 'R Powell' 'KH Pandya'

#    'JDS Neesham' 'Rashid Khan' 'Yash Dayal' 'S Dube' 'Shashank Singh'

#    'RA Tripathi' 'SW Billings' 'VR Iyer' 'SS Iyer' 'HV Patel'

#    'Mohammed Siraj' 'PWH de Silva' 'Arshdeep Singh' 'HR Shokeen' 'MS Dhoni'

#    'Lalit Yadav' 'KL Nagarkoti' 'KR Sen' 'Avesh Khan' 'A Badoni' 'DR Sams'

#    'KA Pollard' 'SP Jackson' 'N Rana' 'AM Rahane' 'RK Singh' 'CV Varun'

#    'RD Gaikwad' 'RV Uthappa' 'AK Markram' 'MK Lomror' 'Shivam Mavi'

#    'AJ Finch' 'B Indrajith' 'JO Holder' 'N Pooran' 'Kuldeep Yadav'

#    'RV Patel' 'RA Jadeja' 'Mukesh Choudhary' 'SS Prabhudessai' 'K Rabada'

#    'Sandeep Sharma' 'PJ Sangwan' 'AS Roy' 'Umran Malik' 'D Pretorius'

#    'Simarjeet Singh' 'K Gowtham' 'SA Yadav' 'DJ Mitchell' 'Shubman Gill'

#    'Anuj Rawat' 'JM Bairstow' 'C Sakariya' 'SP Narine' 'M Jansen'

#    'M Prasidh Krishna' 'MJ Santner' 'RP Meredith' 'D Brevis' 'PVD Chameera'

#    'Ravi Bishnoi' 'UT Yadav' 'LH Ferguson' 'A Manohar' 'TA Boult'

#    'JD Unadkat' 'Mustafizur Rahman' 'NT Ellis' 'PJ Cummins' 'SO Hetmyer'

#    'KK Nair' 'V Shankar' 'CJ Jordan' 'M Shahrukh Khan' 'HE van der Dussen'

#    'VG Arora' 'OF Smith' 'AT Rayudu' 'Abhishek Sharma' 'B Sai Sudharsan'

#    'SN Khan' 'Ramandeep Singh' 'Basil Thampi' 'Navdeep Saini' 'AJ Tye'

#    'MK Pandey' 'DJ Bravo' 'TG Southee' 'DJ Willey' 'Akash Deep' 'AD Russell'

#    'Abdul Samad' 'TL Seifert' 'Mandeep Singh' 'TU Deshpande' 'DL Chahar'

#    'Shakib Al Hasan' 'SPD Smith' 'AB de Villiers' 'KS Bharat' 'SK Raina'

#    'FA Allen' 'Kartik Tyagi' 'YS Chahal' 'CH Gayle' 'EJG Morgan' 'AF Milne'

#    'SS Tiwary' 'DT Christian' 'GHS Garton' 'JJ Roy' 'J Yadav' 'S Kaul'

#    'GD Phillips' 'JR Hazlewood' 'Mohammad Nabi' 'NM Coulter-Nile' 'DJ Malan'

#    'CH Morris' 'KM Jadhav' 'KA Jamieson' 'MC Henriques' 'KW Richardson'

#    'L Ngidi' 'JA Richardson' 'Harbhajan Singh' 'Virat Singh' 'S Nadeem'

#    'BA Stokes' 'SM Curran' 'CA Lynn' 'P Dubey' 'KMA Paul' 'SP Goswami'

#    'A Zampa' 'P Negi' 'Gurkeerat Singh' 'JC Archer' 'I Udana' 'A Mishra'

#    'AT Carey' 'S Gopal' 'P Simran Singh' 'CJ Green' 'M Ashwin' 'NS Naik'

#    'SR Watson' 'JL Pattinson' 'KK Ahmed' 'TK Curran' 'Imran Tahir'

#    'SE Rutherford' 'Anmolpreet Singh' 'DR Shorey' 'C de Grandhomme'

#    'MJ Guptill' 'YK Pathan' 'I Sharma' 'S Sandeep Warrier' 'O Thomas'

#    'Mujeeb Ur Rahman' 'PA Patel' 'M Vijay' 'VR Aaron' 'DS Kulkarni'

#    'Milind Kumar' 'PP Chawla' 'S Midhun' 'S Lamichhane' 'CA Ingram'

#    'AD Nath' 'H Klaasen' 'P Chopra' 'Rasikh Salam' 'CR Brathwaite'

#    'JPR Scantlebury-Searles' 'MM Sharma' 'Yuvraj Singh' 'AS Rajpoot'

#    'BCJ Cutting' 'Anureet Singh' 'STR Binny' 'AD Hales' 'JP Duminy'

#    'MK Tiwary' 'DJM Short' 'MG Johnson' 'C Munro' 'LE Plunkett' 'KV Sharma'

#    'CR Woakes' 'AP Tare' 'G Gambhir' 'BB Sran' 'R Vinay Kumar' 'B Laughlin'

#    'BB McCullum' 'MA Wood' 'SL Malinga' 'NV Ojha' 'Z Khan' 'CJ Anderson'

#    'Vishnu Vinod' 'JP Faulkner' 'M Vohra' 'DR Smith' 'SE Marsh' 'MN Samuels'

#    'LMP Simmons' 'Bipul Sharma' 'S Badree' 'Ankit Soni' 'TM Head'

#    'IK Pathan' 'A Nehra' 'TS Mills' 'AD Mathews' 'S Aravind'

#    'MJ McClenaghan' 'B Stanlake' 'R Bhatia' 'Sachin Baby' 'Iqbal Abdulla'

#    'ER Dwivedi' 'SB Jakati' 'R Sathish' 'GJ Bailey' 'F Behardien'

#    'UT Khawaja' 'NLTC Perera' 'KC Cariappa' 'GB Hogg' 'Parvez Rasool'

#    'P Kumar' 'A Ashish Reddy' 'JA Morkel' 'PV Tambe' 'Ankit Sharma'

#    'D Wiese' 'KP Pietersen' 'MEK Hussey' 'MA Starc' 'UBT Chand' 'M Morkel'

#    'AB Dinda' 'DW Steyn' 'BE Hendricks' 'IC Pandey' 'J Botha' 'RS Bopara'

#    'RN ten Doeschate' 'B Aparajith' 'GH Vihari' 'RR Rossouw' 'MS Bisla'

#    'RG More' 'DJG Sammy' 'Karanveer Singh' 'CM Gautam' 'V Sehwag'

#    'DJ Hussey' 'BR Dunk' 'BJ Hodge' 'YV Takawale' 'VS Malik' 'WD Parnell'

#    'KK Cooper' 'K Santokie' 'R Shukla' 'Shivam Sharma' 'S Rana' 'DH Yagnik'

#    'M Kartik' 'JH Kallis' 'M Manhas' 'Y Venugopal Rao' 'LR Shukla'

#    'AV Wankhade' 'AM Nayar' 'BW Hilfenhaus' 'LRPL Taylor' 'NJ Maddinson'

#    'SK Trivedi' 'CL White' 'BB Samantray' 'P Dogra' 'LJ Wright' 'RV Gomez'

#    'AC Gilchrist' 'KB Arun Karthik' 'PP Ojha' 'BJ Rohrer' 'AG Murtaza'

#    'P Awana' 'L Balaji' 'SR Tendulkar' 'CA Pujara' 'M Rawat' 'K Upadhyay'

#    'S Badrinath' 'R McLaren' 'AN Ahmed' 'R Dravid' 'AB Agarkar'

#    'KC Sangakkara' 'MR Marsh' 'R Sharma' 'UA Birla' 'P Suyal'

#    'M Muralitharan' 'RP Singh' 'DB Das' 'DP Nannes' 'R Rampaul'

#    'SMSM Senanayake' 'TM Dilshan' 'A Chandila' 'PA Reddy' 'Azhar Mahmood'

#    'BMAJ Mendis' 'DPMD Jayawardene' 'TL Suman' 'Anand Rajan' 'RT Ponting'

#    'B Lee' 'KP Appanna' 'MS Gony' 'JD Ryder' 'OA Shah' 'N Saini'

#    'S Anirudha' 'HH Gibbs' 'RJ Harris' 'SC Ganguly' 'MM Patel' 'AC Thomas'

#    'SW Tait' 'DJ Harris' 'AA Chavan' 'MJ Clarke' 'JEC Franklin'

#    'AA Jhunjhunwala' 'RJ Peterson' 'DL Vettori' 'VY Mahesh' 'IR Jaggi'

#    'AL Menaria' 'LA Pomersbach' 'SD Chitnis' 'KMDN Kulasekara'

#    'DE Bollinger' 'AD Mascarenhas' 'T Mishra' 'DJ Jacobs' 'RE Levi'

#    'Y Nagar' 'RR Bhatkal' 'RE van der Merwe' 'PC Valthaty' 'B Chipli'

#    'DAJ Bracewell' 'A Singh' 'CJ Ferguson' 'A Mithun' 'DB Ravi Teja'

#    'KH Devdhar' 'PR Shah' 'Y Gnaneswara Rao' 'JR Hopes' 'A Symonds'

#    'MJ Lumb' 'MV Boucher' 'M Kaif' 'AC Blizzard' 'SJ Srivastava' 'S Randiv'

#    'AUK Pathan' 'AM Salvi' 'S Ladda' 'Harpreet Singh' 'J Syed Mohammad'

#    'S Sreesanth' 'NL McCullum' 'A Mukund' 'AS Raut' 'SB Wagh' 'Sunny Singh'

#    'R Ninan' 'AG Paunikar' 'GC Smith' 'SK Warne' 'SB Styris' 'CRD Fernando'

#    'ML Hayden' 'S Tyagi' 'K Goel' 'J Theron' 'PD Collingwood' 'A Kumble'

#    'AC Voges' 'B Sumanth' 'AP Dole' 'ST Jayasuriya' 'RS Sodhi' 'MD Mishra'

#    'FY Fazal' 'T Thushara' 'AA Bilakhia' 'VVS Laxman' 'Anirudh Singh'

#    'S Narwal' 'KAJ Roach' 'Joginder Sharma' 'WPUJC Vaas' 'JM Kemp'

#    'MF Maharoof' 'Harmeet Singh' 'Mohammad Ashraful' 'SM Katich' 'JDP Oram'

#    'SS Shaikh' 'RJ Quiney' 'NK Patel' 'Mashrafe Mortaza' 'S Sohal' 'WA Mota'

#    'B Akhil' 'Shoaib Ahmed' 'RR Raje' 'LA Carseldine' 'MN van Wyk'

#    'RR Powar' 'L Ronchi' 'VRV Singh' 'W Jaffer' 'SM Harwood' 'Kamran Khan'

#    'T Kohli' 'SA Asnodkar' 'BAW Mendis' 'AN Ghosh' 'Pankaj Singh'

#    'Yashpal Singh' 'A Flintoff' 'A Chopra' 'R Bishnoi' 'Kamran Akmal'

#    'M Ntini' 'CK Kapugedera' 'Sohail Tanvir' 'Shahid Afridi' 'TM Srivastava'

#    'SB Bangar' 'AS Yadav' 'B Geeves' 'LPC Silva' 'SP Fleming' 'SM Pollock'

#    'Salman Butt' 'DJ Thornely' 'Misbah-ul-Haq' 'Shoaib Malik' 'D Salunkhe'

#    'Younis Khan' 'GD McGrath' 'T Taibu' 'P Amarnath' 'S Vidyut' 'U Kaul'

#    'DT Patil' 'Umar Gul' 'RR Sarwan' 'D Kalyankrishna' 'Mohammad Hafeez'] unique values

#   

#   

#   

#   

#   


df2_copy.isnull().sum()
# Output:
#   ID                   0

#   innings              0

#   overs                0

#   ballnumber           0

#   batter               0

#   bowler               0

#   non-striker          0

#   extra_type           0

#   batsman_run          0

#   extras_run           0

#   total_run            0

#   non_boundary         0

#   isWicketDelivery     0

#   player_out           0

#   kind                 0

#   fielders_involved    0

#   BattingTeam          0

#   dtype: int64

'''
# Observation:
1. We have successfully replaced null containing columns with approriate names.
'''

##Lets check how many teams were involved in IPL
df2_copy['BattingTeam'].value_counts().index
# Output:
#   Index(['Mumbai Indians', 'Royal Challengers Bangalore',

#          'Kolkata Knight Riders', 'Chennai Super Kings', 'Rajasthan Royals',

#          'Kings XI Punjab', 'Delhi Daredevils', 'Sunrisers Hyderabad',

#          'Deccan Chargers', 'Delhi Capitals', 'Pune Warriors', 'Gujarat Lions',

#          'Rising Pune Supergiant', 'Punjab Kings', 'Gujarat Titans',

#          'Lucknow Super Giants', 'Kochi Tuskers Kerala'],

#         dtype='object')

'''
# Observation:
1. From the domain knowledge Franchise teams that inclues:

    a. Delhi Daredevils, Delhi Capitals  
    
    b. Kings XI Punjab,Punjab Kings
    
    c. Deccan Chargers,Sunrisers Hyderabad
    
    d. Pune Warriors,Rising Pune Supergiant 
    
    e. Gujarat Lions,Gujarat Titans
    
    are similar.
    
    
    
2. So we need to rename the old names of

    Delhi Daredevils-->Delhi Capitals,
    
    Kings XI Punjab->Punjab Kings,
    
    Deccan Chargers-->Sunrisers Hyderabad,
    
    Gujarat Titans-->Gujarat Lions and 
    
    Pune Warriors--> Rising Pune Supergiant
'''

##Data Cleaning Process:
df2_copy['BattingTeam']=df2_copy['BattingTeam'].str.replace('Delhi Daredevils','Delhi Capitals').str.replace('Kings XI Punjab','Punjab Kings').str.replace('Deccan Chargers','Sunrisers Hyderabad').str.replace('Pune Warriors','Rising Pune Supergiant').str.replace('Gujarat Lions','Gujarat Titans')

df2_copy['BattingTeam'].value_counts().index
# Output:
#   Index(['Mumbai Indians', 'Sunrisers Hyderabad', 'Royal Challengers Bangalore',

#          'Delhi Capitals', 'Kolkata Knight Riders', 'Punjab Kings',

#          'Chennai Super Kings', 'Rajasthan Royals', 'Rising Pune Supergiant',

#          'Gujarat Titans', 'Lucknow Super Giants', 'Kochi Tuskers Kerala'],

#         dtype='object')

##Lets do it for df1_copy
df1_copy.columns
# Output:
#   Index(['ID', 'City', 'Season', 'MatchNumber', 'Team1', 'Team2', 'Venue',

#          'TossWinner', 'TossDecision', 'SuperOver', 'WinningTeam', 'WonBy',

#          'Margin', 'method', 'Player_of_Match', 'Team1Players', 'Team2Players',

#          'Umpire1', 'Umpire2', 'Dates', 'Months', 'Years'],

#         dtype='object')

d=['Team1', 'Team2','TossWinner', 'WinningTeam']

for i in df1_copy[d]:
    if i=='Team1':
        df1_copy[i]=df1_copy[i].str.replace('Delhi Daredevils','Delhi Capitals').str.replace('Kings XI Punjab','Punjab Kings').str.replace('Deccan Chargers','Sunrisers Hyderabad').str.replace('Pune Warriors','Rising Pune Supergiant').str.replace('Gujarat Lions','Gujarat Titans')
    if i=='Team2':
        df1_copy[i]=df1_copy[i].str.replace('Delhi Daredevils','Delhi Capitals').str.replace('Kings XI Punjab','Punjab Kings').str.replace('Deccan Chargers','Sunrisers Hyderabad').str.replace('Pune Warriors','Rising Pune Supergiant').str.replace('Gujarat Lions','Gujarat Titans')
    if i=='TossWinner':
        df1_copy[i]=df1_copy[i].str.replace('Delhi Daredevils','Delhi Capitals').str.replace('Kings XI Punjab','Punjab Kings').str.replace('Deccan Chargers','Sunrisers Hyderabad').str.replace('Pune Warriors','Rising Pune Supergiant').str.replace('Gujarat Lions','Gujarat Titans')
    if i=='WinningTeam':
        df1_copy[i]=df1_copy[i].str.replace('Delhi Daredevils','Delhi Capitals').str.replace('Kings XI Punjab','Punjab Kings').str.replace('Deccan Chargers','Sunrisers Hyderabad').str.replace('Pune Warriors','Rising Pune Supergiant').str.replace('Gujarat Lions','Gujarat Titans')
    else:
        pass

for ij in d:
    print(df1_copy[ij].unique())
    print('\n'*3)
# Output:
#   ['Rajasthan Royals' 'Royal Challengers Bangalore' 'Sunrisers Hyderabad'

#    'Delhi Capitals' 'Chennai Super Kings' 'Gujarat Titans'

#    'Lucknow Super Giants' 'Kolkata Knight Riders' 'Punjab Kings'

#    'Mumbai Indians' 'Rising Pune Supergiant' 'Kochi Tuskers Kerala']

#   

#   

#   

#   

#   ['Gujarat Titans' 'Rajasthan Royals' 'Lucknow Super Giants' 'Punjab Kings'

#    'Mumbai Indians' 'Royal Challengers Bangalore' 'Kolkata Knight Riders'

#    'Sunrisers Hyderabad' 'Delhi Capitals' 'Chennai Super Kings'

#    'Rising Pune Supergiant' 'Kochi Tuskers Kerala']

#   

#   

#   

#   

#   ['Rajasthan Royals' 'Lucknow Super Giants' 'Gujarat Titans'

#    'Sunrisers Hyderabad' 'Mumbai Indians' 'Chennai Super Kings'

#    'Punjab Kings' 'Kolkata Knight Riders' 'Royal Challengers Bangalore'

#    'Delhi Capitals' 'Rising Pune Supergiant' 'Kochi Tuskers Kerala']

#   

#   

#   

#   

#   ['Gujarat Titans' 'Rajasthan Royals' 'Royal Challengers Bangalore'

#    'Punjab Kings' 'Mumbai Indians' 'Lucknow Super Giants'

#    'Sunrisers Hyderabad' 'Delhi Capitals' 'Kolkata Knight Riders'

#    'Chennai Super Kings' 'Unknown' 'Rising Pune Supergiant'

#    'Kochi Tuskers Kerala']

#   

#   

#   

#   


'''
## Observation:
    We have successfully replaced old team names with newly updated ones.
'''

'''
### <font color='blue'> Lets See the Venue Stats</font>
'''

df1_copy.groupby(['Venue','TossDecision']).size().reset_index().rename(columns={0:'No.of times'})
# Output:
#                                  Venue TossDecision  No.of times

#   0               Arun Jaitley Stadium          bat            6

#   1               Arun Jaitley Stadium        field            8

#   2        Arun Jaitley Stadium, Delhi          bat            1

#   3        Arun Jaitley Stadium, Delhi        field            3

#   4                   Barabati Stadium          bat            2

#   ..                               ...          ...          ...

#   89                  Wankhede Stadium        field           51

#   90          Wankhede Stadium, Mumbai          bat            7

#   91          Wankhede Stadium, Mumbai        field           24

#   92  Zayed Cricket Stadium, Abu Dhabi          bat            3

#   93  Zayed Cricket Stadium, Abu Dhabi        field            5

#   

#   [94 rows x 3 columns]

df1_copy['Venue'].value_counts()
# Output:
#   Eden Gardens                                            77

#   Wankhede Stadium                                        73

#   M Chinnaswamy Stadium                                   65

#   Feroz Shah Kotla                                        60

#   Rajiv Gandhi International Stadium, Uppal               49

#   MA Chidambaram Stadium, Chepauk                         48

#   Sawai Mansingh Stadium                                  47

#   Dubai International Cricket Stadium                     46

#   Punjab Cricket Association Stadium, Mohali              35

#   Wankhede Stadium, Mumbai                                31

#   Sheikh Zayed Stadium                                    29

#   Sharjah Cricket Stadium                                 28

#   Maharashtra Cricket Association Stadium                 22

#   Dr DY Patil Sports Academy, Mumbai                      20

#   Brabourne Stadium, Mumbai                               17

#   Dr DY Patil Sports Academy                              17

#   Subrata Roy Sahara Stadium                              16

#   Kingsmead                                               15

#   Rajiv Gandhi International Stadium                      15

#   M.Chinnaswamy Stadium                                   15

#   Arun Jaitley Stadium                                    14

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium     13

#   Maharashtra Cricket Association Stadium, Pune           13

#   SuperSport Park                                         12

#   Sardar Patel Stadium, Motera                            12

#   Punjab Cricket Association IS Bindra Stadium, Mohali    11

#   Punjab Cricket Association IS Bindra Stadium            10

#   MA Chidambaram Stadium, Chepauk, Chennai                10

#   Brabourne Stadium                                       10

#   Saurashtra Cricket Association Stadium                  10

#   Holkar Cricket Stadium                                   9

#   MA Chidambaram Stadium                                   9

#   Himachal Pradesh Cricket Association Stadium             9

#   Zayed Cricket Stadium, Abu Dhabi                         8

#   New Wanderers Stadium                                    8

#   Barabati Stadium                                         7

#   St George's Park                                         7

#   Narendra Modi Stadium, Ahmedabad                         7

#   JSCA International Stadium Complex                       7

#   Newlands                                                 7

#   Shaheed Veer Narayan Singh International Stadium         6

#   Nehru Stadium                                            5

#   Green Park                                               4

#   Arun Jaitley Stadium, Delhi                              4

#   De Beers Diamond Oval                                    3

#   Buffalo Park                                             3

#   Vidarbha Cricket Association Stadium, Jamtha             3

#   Eden Gardens, Kolkata                                    2

#   OUTsurance Oval                                          2

#   Name: Venue, dtype: int64

'''
## Observation:
      Here we can see that there are many stadiums represented in 2 ways i.e Wankhede Stadium and Wankhede Stadium, Mumbai  tends to be similar ones. So here we are suppose to do data cleaning
'''

##Data Cleaning Process:
df1_copy['Venue']=df1_copy['Venue'].str.replace('Wankhede Stadium, Mumbai','Wankhede Stadium').str.replace('MA Chidambaram Stadium, Chepauk','MA Chidambaram Stadium').str.replace('MA Chidambaram Stadium, Chennai','MA Chidambaram Stadium').str.replace('Rajiv Gandhi International Stadium, Uppal','Rajiv Gandhi International Stadium').str.replace('Sardar Patel Stadium, Motera','Sardar Patel Stadium').str.replace('Punjab Cricket Association Stadium, Mohali','Punjab Cricket Association Stadium').str.replace('Dr DY Patil Sports Academy, Mumbai','Dr DY Patil Sports Academy').str.replace('Brabourne Stadium, Mumbai','Brabourne Stadium').str.replace('Maharashtra Cricket Association Stadium, Pune','Maharashtra Cricket Association Stadium').str.replace('Punjab Cricket Association IS Bindra Stadium, Mohali','Punjab Cricket Association Stadium').str.replace('Zayed Cricket Stadium, Abu Dhabi','Zayed Cricket Stadium').str.replace('Narendra Modi Stadium, Ahmedabad','Narendra Modi Stadium').str.replace('Arun Jaitley Stadium, Delhi','Arun Jaitley Stadium').str.replace('Vidarbha Cricket Association Stadium, Jamtha','Vidarbha Cricket Association Stadium').str.replace('Eden Gardens, Kolkata','Eden Gardens').str.replace('M.Chinnaswamy Stadium','M Chinnaswamy Stadium')

df1_copy['Venue'].value_counts()
# Output:
#   Wankhede Stadium                                       104

#   M Chinnaswamy Stadium                                   80

#   Eden Gardens                                            79

#   MA Chidambaram Stadium                                  67

#   Rajiv Gandhi International Stadium                      64

#   Feroz Shah Kotla                                        60

#   Sawai Mansingh Stadium                                  47

#   Punjab Cricket Association Stadium                      46

#   Dubai International Cricket Stadium                     46

#   Dr DY Patil Sports Academy                              37

#   Maharashtra Cricket Association Stadium                 35

#   Sheikh Zayed Stadium                                    29

#   Sharjah Cricket Stadium                                 28

#   Brabourne Stadium                                       27

#   Arun Jaitley Stadium                                    18

#   Subrata Roy Sahara Stadium                              16

#   Kingsmead                                               15

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium     13

#   SuperSport Park                                         12

#   Sardar Patel Stadium                                    12

#   Punjab Cricket Association IS Bindra Stadium            10

#   Saurashtra Cricket Association Stadium                  10

#   Holkar Cricket Stadium                                   9

#   Himachal Pradesh Cricket Association Stadium             9

#   New Wanderers Stadium                                    8

#   Zayed Cricket Stadium                                    8

#   JSCA International Stadium Complex                       7

#   St George's Park                                         7

#   Newlands                                                 7

#   Narendra Modi Stadium                                    7

#   Barabati Stadium                                         7

#   Shaheed Veer Narayan Singh International Stadium         6

#   Nehru Stadium                                            5

#   Green Park                                               4

#   Buffalo Park                                             3

#   De Beers Diamond Oval                                    3

#   Vidarbha Cricket Association Stadium                     3

#   OUTsurance Oval                                          2

#   Name: Venue, dtype: int64

'''
## Observation:
    So finally we are done with our data cleaning part and the venue list has unique list.
'''

'''
## <font color='Green'>Project Step 3: Identify research questions</font>
'''

'''
**Some of the interesting Task Ideas**
1. What is the percentage of wins of each team?
2. Which venue results in a win for Batting first team and vice versa?
3. Who is the most consistent batsman and bowler in each team and also in the entire league?
4. Who wins the most player of the matches in the tournament?
5. Who scored more runs, took more wickets and head to head records beween teams and players?
'''

'''
## <font color='green'>Project Step 4: Describe your dataset(s) and your research question(s) in the Project.</font>
'''

'''
#### Describing Dataset

1. The file <font color=blue>IPLMatches2008_2022.csv</font> contains all details of the match: Venue of the match, Toss Decision, Match Winer, Man of the Match, Squads, etc and contains the summary of each match for IPL 2008-2022

    **Venue of the match**-At which place the match has been played
    
    **Toss Decision**--Toss is held between 2 teams where the team wins the toss may chose to bat or field first.
    
    **Match Winner**--Determines who wins the match
    
    **Man of the match**--Refers to which player has overall performed well in that match.
    
    **Squads**--Tells us which all players got involved
    
The matches are sorted from 2022 to 2008


2. The file <font color=green>IPLBallbyBall2008_2022.csv</font> contains ball by ball data of each and every match: Batsman on strike, Bowler, Extras, Runs, Wicket Ball, etc and contains data for each ball for the entire tournament from 2008 to 2022. The data will be updated every day until the season's final match. The match ID is given by ESPNCricinfo

    **innings**--How many innings a player has played
    
    **overs**--How many overs a bowler has bowled
    
    **batter**--batsman on strike and in non strike
    
    **bowler**--Current bowler
    
    **total_runs**--Runs scored in particular bowl
    
    **player_out**--Which player got out against which bowler
    
    **fielders_involved**--Who were involved in that particular bowl
    
'''

'''
#### Describing the research questions
'''

'''
#### What is the percentage of wins of each team?
This tells what winning percentage a team has and suppose if a team with a winning streak is high then the opponent team might have to be cautious with their stratergies.

#### Which venue results in a win for Batting first team and vice versa?
Before a match conducts cricket analyst submit ground stats,pitch conditions,weather type so that this can be helpful for the teams while winning a toss so that they could act accordingly.

#### Who is the most consistent batsman and bowler in each team and also in the entire league?
This analysis has to done in order to find the most consistent gamechanging player 

#### Who wins the most player of the matches in the tournament?
With the extension of above this confirms that which player consistently performed so well so that the opponent team do lots of home work to tackle the particular player.


#### Who scored more runs, took more wickets and head to head records beween teams and players?
The above question gets all the A-Z match stats of each and every player which includes most runs in a season, overall leading run getter as well as wicket taker and also we can get head to head stats within teams and players.
'''

'''
## <font color='Purple'> Checking out the total number of Numerical and Categorical features</font>
'''

categorical_features_df1=[feature for feature in df1_copy.columns if df1_copy[feature].dtypes == 'O']
print('There are {} categorical features namely: {}\n'.format(len(categorical_features_df1),categorical_features_df1))
numerical_features_df1=[feature for feature in df1_copy.columns if df1_copy[feature].dtypes != 'O']
print('There are {} numerical features namely: {}'.format(len(numerical_features_df1),numerical_features_df1))

# Output:
#   There are 18 categorical features namely: ['City', 'Season', 'MatchNumber', 'Team1', 'Team2', 'Venue', 'TossWinner', 'TossDecision', 'SuperOver', 'WinningTeam', 'WonBy', 'Margin', 'method', 'Player_of_Match', 'Team1Players', 'Team2Players', 'Umpire1', 'Umpire2']

#   

#   There are 4 numerical features namely: ['ID', 'Dates', 'Months', 'Years']


categorical_features_df2=[feature for feature in df2_copy.columns if df2_copy[feature].dtypes == 'O']
print('There are {} categorical features namely: {}\n'.format(len(categorical_features_df2),categorical_features_df2))
numerical_features_df2=[feature for feature in df2_copy.columns if df2_copy[feature].dtypes != 'O']
print('There are {} numerical features namely: {}'.format(len(numerical_features_df2),numerical_features_df2))

# Output:
#   There are 8 categorical features namely: ['batter', 'bowler', 'non-striker', 'extra_type', 'player_out', 'kind', 'fielders_involved', 'BattingTeam']

#   

#   There are 9 numerical features namely: ['ID', 'innings', 'overs', 'ballnumber', 'batsman_run', 'extras_run', 'total_run', 'non_boundary', 'isWicketDelivery']


### Getting count of categories in each features
for feature in numerical_features_df2:
    print('The {} feature has '{}' no. of different categories'.format(feature, df2_copy[feature].nunique()))
# Output:
#   The ID feature has '950' no. of different categories

#   The innings feature has '6' no. of different categories

#   The overs feature has '20' no. of different categories

#   The ballnumber feature has '10' no. of different categories

#   The batsman_run feature has '7' no. of different categories

#   The extras_run feature has '7' no. of different categories

#   The total_run feature has '8' no. of different categories

#   The non_boundary feature has '2' no. of different categories

#   The isWicketDelivery feature has '2' no. of different categories


for feature in categorical_features_df2:
    print('The {} feature has '{}' no. of different categories'.format(feature, df2_copy[feature].nunique()))
# Output:
#   The batter feature has '605' no. of different categories

#   The bowler feature has '472' no. of different categories

#   The non-striker feature has '595' no. of different categories

#   The extra_type feature has '6' no. of different categories

#   The player_out feature has '574' no. of different categories

#   The kind feature has '11' no. of different categories

#   The fielders_involved feature has '536' no. of different categories

#   The BattingTeam feature has '12' no. of different categories


'''
# <font color='blue'>Data Processing </font>
'''

'''
## <font color='Green'>Project Step 5: Identify your research methods</font>
'''

'''
#### <font color='purple'>Since this dataset is exclusively used for performing Exploratory data analysis, model building wont be compatible.</font>
#### <font color='red'>So we will try some statistical analysis test on some categorical columns </font>
'''

'''
#### Lets check whether there is any correlation analysis between categorical variables
'''

df2.corr()
# Output:
#                           ID   innings     overs  ballnumber  batsman_run  \

#   ID                1.000000  0.002039  0.009295    0.001006     0.024467   

#   innings           0.002039  1.000000 -0.050497   -0.004535    -0.005425   

#   overs             0.009295 -0.050497  1.000000   -0.003695     0.084464   

#   ballnumber        0.001006 -0.004535 -0.003695    1.000000     0.004527   

#   batsman_run       0.024467 -0.005425  0.084464    0.004527     1.000000   

#   extras_run       -0.012086  0.000203  0.001674    0.000162    -0.140860   

#   total_run         0.022082 -0.005422  0.085457    0.004596     0.977595   

#   non_boundary      0.001513  0.000765 -0.001689   -0.002286     0.019828   

#   isWicketDelivery -0.000873  0.000340  0.073935    0.004143    -0.170370   

#   

#                     extras_run  total_run  non_boundary  isWicketDelivery  

#   ID                 -0.012086   0.022082      0.001513         -0.000873  

#   innings             0.000203  -0.005422      0.000765          0.000340  

#   overs               0.001674   0.085457     -0.001689          0.073935  

#   ballnumber          0.000162   0.004596     -0.002286          0.004143  

#   batsman_run        -0.140860   0.977595      0.019828         -0.170370  

#   extras_run          1.000000   0.070692     -0.001889         -0.041472  

#   total_run           0.070692   1.000000      0.019575         -0.180473  

#   non_boundary       -0.001889   0.019575      1.000000         -0.002197  

#   isWicketDelivery   -0.041472  -0.180473     -0.002197          1.000000  

df1.corr()
# Output:
#                ID   Margin

#   ID      1.00000 -0.02394

#   Margin -0.02394  1.00000

'''
## Observation:
    1. As we can see directly applying correlation on columns doesn't gives any relevent info between 2 columns.
    2. Lets run some Hypothesis test
'''

'''
#### The Main aim is to find whether there are any contributing factors for the Win/Lose based on:
1. Winning or losing Toss
2. Playing in Home and Away venues

    So the Statistical model used is Chi Square test(which works on categorical variables)
    
Reference: https://medium.com/@ritesh.110587/correlation-between-categorical-variables-63f6bd9bf2f7#:~:text=Chi%2DSquare%20test%20of%20independence,categorical%20variables%20is%20easily%20available.    
'''

'''
## So we consider Null Hypothesis as:
1. There is no relationship between Toss Decision and Win/Lose a match
2. There is no relationship between Ground(Home/Away) and Win/Lose a match
'''

'''
## Chi Square Test:
   Condition1: To verify relationship between Toss Decision and Win/Lose a match
'''

decision=pd.crosstab(df1_copy['TossDecision'],df1_copy['WinningTeam'])
decision
# Output:
#   WinningTeam   Chennai Super Kings  Delhi Capitals  Gujarat Titans  \

#   TossDecision                                                        

#   bat                            59              37               7   

#   field                          62              66              18   

#   

#   WinningTeam   Kochi Tuskers Kerala  Kolkata Knight Riders  \

#   TossDecision                                                

#   bat                              0                     42   

#   field                            6                     72   

#   

#   WinningTeam   Lucknow Super Giants  Mumbai Indians  Punjab Kings  \

#   TossDecision                                                       

#   bat                              2              52            26   

#   field                            7              79            75   

#   

#   WinningTeam   Rajasthan Royals  Rising Pune Supergiant  \

#   TossDecision                                             

#   bat                         40                      11   

#   field                       56                      16   

#   

#   WinningTeam   Royal Challengers Bangalore  Sunrisers Hyderabad  Unknown  

#   TossDecision                                                             

#   bat                                    35                   39        1  

#   field                                  74                   65        3  

observed_values=decision.values
print('Observed Values:\n',observed_values)
# Output:
#   Observed Values:

#    [[59 37  7  0 42  2 52 26 40 11 35 39  1]

#    [62 66 18  6 72  7 79 75 56 16 74 65  3]]


val=ss.chi2_contingency(decision)
val
# Output:
#   (20.81315956897389,

#    0.053184297532038585,

#    12,

#    array([[44.70631579, 38.05578947,  9.23684211,  2.21684211, 42.12      ,

#             3.32526316, 48.40105263, 37.31684211, 35.46947368,  9.97578947,

#            40.27263158, 38.42526316,  1.47789474],

#           [76.29368421, 64.94421053, 15.76315789,  3.78315789, 71.88      ,

#             5.67473684, 82.59894737, 63.68315789, 60.53052632, 17.02421053,

#            68.72736842, 65.57473684,  2.52210526]]))

expected_values=val[3]
expected_values
# Output:
#   array([[44.70631579, 38.05578947,  9.23684211,  2.21684211, 42.12      ,

#            3.32526316, 48.40105263, 37.31684211, 35.46947368,  9.97578947,

#           40.27263158, 38.42526316,  1.47789474],

#          [76.29368421, 64.94421053, 15.76315789,  3.78315789, 71.88      ,

#            5.67473684, 82.59894737, 63.68315789, 60.53052632, 17.02421053,

#           68.72736842, 65.57473684,  2.52210526]])

no_of_rows=len(decision.iloc[0:2,0])
no_of_columns=len(decision.iloc[0,0:2])
dof=(no_of_rows-1)*(no_of_columns-1)
print('Degree of Freedom:',dof)
alpha=0.05
# Output:
#   Degree of Freedom: 1


from scipy.stats import chi2
chi_square=sum([(o-e)**2./e for o,e in zip(observed_values,expected_values)])
chi_square_statistic=chi_square[0]+chi_square[1]
print('chi square statistic:',chi_square_statistic)
# Output:
#   chi square statistic: 7.294422815153898


critical_value=chi2.ppf(q=1-alpha,df=dof)
print('Critical value',critical_value)
# Output:
#   Critical value 3.841458820694124


## Getting P value
p_value=1-chi2.cdf(x=chi_square_statistic,df=dof)
print('P value:',p_value)
print('Significance level:',alpha)
print('Degree of Freedom:',dof)
# Output:
#   P value: 0.006916898729786958

#   Significance level: 0.05

#   Degree of Freedom: 1


if chi_square_statistic>=critical_value:
    print('Reject Null Hypothesis(H0) there is a relationship between toss_decision and winning a match')
else:
    print('Retain Null Hypothesis(H0) there is no relationship between toss_decision and winning a match')
    
if p_value<=alpha:
    print('Reject Null Hypothesis(H0) there is a relationship between toss_decision and winning a match')
else:
    print('Retain Null Hypothesis(H0) there is no relationship between toss_decision and winning a match')
    
# Output:
#   Reject Null Hypothesis(H0) there is a relationship between toss_decision and winning a match

#   Reject Null Hypothesis(H0) there is a relationship between toss_decision and winning a match


'''
Condition2: To verify relationship between Home Ground/Away and Win/Lose a match
'''

ground=pd.crosstab(df1_copy['Venue'],df1_copy['WinningTeam'])
ground
# Output:
#   WinningTeam                                         Chennai Super Kings  \

#   Venue                                                                     

#   Arun Jaitley Stadium                                                  2   

#   Barabati Stadium                                                      0   

#   Brabourne Stadium                                                     1   

#   Buffalo Park                                                          1   

#   De Beers Diamond Oval                                                 1   

#   Dr DY Patil Sports Academy                                            6   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...                    2   

#   Dubai International Cricket Stadium                                   9   

#   Eden Gardens                                                          5   

#   Feroz Shah Kotla                                                      5   

#   Green Park                                                            0   

#   Himachal Pradesh Cricket Association Stadium                          1   

#   Holkar Cricket Stadium                                                0   

#   JSCA International Stadium Complex                                    3   

#   Kingsmead                                                             1   

#   M Chinnaswamy Stadium                                                 5   

#   MA Chidambaram Stadium                                               40   

#   Maharashtra Cricket Association Stadium                               6   

#   Narendra Modi Stadium                                                 0   

#   Nehru Stadium                                                         0   

#   New Wanderers Stadium                                                 1   

#   Newlands                                                              0   

#   OUTsurance Oval                                                       0   

#   Punjab Cricket Association IS Bindra Stadium                          0   

#   Punjab Cricket Association Stadium                                    3   

#   Rajiv Gandhi International Stadium                                    3   

#   Sardar Patel Stadium                                                  0   

#   Saurashtra Cricket Association Stadium                                0   

#   Sawai Mansingh Stadium                                                3   

#   Shaheed Veer Narayan Singh International Stadium                      0   

#   Sharjah Cricket Stadium                                               3   

#   Sheikh Zayed Stadium                                                  3   

#   St George's Park                                                      2   

#   Subrata Roy Sahara Stadium                                            1   

#   SuperSport Park                                                       2   

#   Vidarbha Cricket Association Stadium                                  0   

#   Wankhede Stadium                                                     11   

#   Zayed Cricket Stadium                                                 1   

#   

#   WinningTeam                                         Delhi Capitals  \

#   Venue                                                                

#   Arun Jaitley Stadium                                             8   

#   Barabati Stadium                                                 0   

#   Brabourne Stadium                                                4   

#   Buffalo Park                                                     1   

#   De Beers Diamond Oval                                            0   

#   Dr DY Patil Sports Academy                                       3   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...               2   

#   Dubai International Cricket Stadium                              7   

#   Eden Gardens                                                     2   

#   Feroz Shah Kotla                                                23   

#   Green Park                                                       1   

#   Himachal Pradesh Cricket Association Stadium                     1   

#   Holkar Cricket Stadium                                           0   

#   JSCA International Stadium Complex                               0   

#   Kingsmead                                                        3   

#   M Chinnaswamy Stadium                                            4   

#   MA Chidambaram Stadium                                           4   

#   Maharashtra Cricket Association Stadium                          2   

#   Narendra Modi Stadium                                            2   

#   Nehru Stadium                                                    1   

#   New Wanderers Stadium                                            1   

#   Newlands                                                         1   

#   OUTsurance Oval                                                  1   

#   Punjab Cricket Association IS Bindra Stadium                     0   

#   Punjab Cricket Association Stadium                               1   

#   Rajiv Gandhi International Stadium                               5   

#   Sardar Patel Stadium                                             1   

#   Saurashtra Cricket Association Stadium                           1   

#   Sawai Mansingh Stadium                                           2   

#   Shaheed Veer Narayan Singh International Stadium                 4   

#   Sharjah Cricket Stadium                                          5   

#   Sheikh Zayed Stadium                                             2   

#   St George's Park                                                 1   

#   Subrata Roy Sahara Stadium                                       1   

#   SuperSport Park                                                  2   

#   Vidarbha Cricket Association Stadium                             0   

#   Wankhede Stadium                                                 6   

#   Zayed Cricket Stadium                                            1   

#   

#   WinningTeam                                         Gujarat Titans  \

#   Venue                                                                

#   Arun Jaitley Stadium                                             0   

#   Barabati Stadium                                                 0   

#   Brabourne Stadium                                                2   

#   Buffalo Park                                                     0   

#   De Beers Diamond Oval                                            0   

#   Dr DY Patil Sports Academy                                       2   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...               0   

#   Dubai International Cricket Stadium                              0   

#   Eden Gardens                                                     3   

#   Feroz Shah Kotla                                                 1   

#   Green Park                                                       2   

#   Himachal Pradesh Cricket Association Stadium                     0   

#   Holkar Cricket Stadium                                           0   

#   JSCA International Stadium Complex                               0   

#   Kingsmead                                                        0   

#   M Chinnaswamy Stadium                                            1   

#   MA Chidambaram Stadium                                           0   

#   Maharashtra Cricket Association Stadium                          4   

#   Narendra Modi Stadium                                            1   

#   Nehru Stadium                                                    0   

#   New Wanderers Stadium                                            0   

#   Newlands                                                         0   

#   OUTsurance Oval                                                  0   

#   Punjab Cricket Association IS Bindra Stadium                     0   

#   Punjab Cricket Association Stadium                               2   

#   Rajiv Gandhi International Stadium                               0   

#   Sardar Patel Stadium                                             0   

#   Saurashtra Cricket Association Stadium                           3   

#   Sawai Mansingh Stadium                                           0   

#   Shaheed Veer Narayan Singh International Stadium                 0   

#   Sharjah Cricket Stadium                                          0   

#   Sheikh Zayed Stadium                                             0   

#   St George's Park                                                 0   

#   Subrata Roy Sahara Stadium                                       0   

#   SuperSport Park                                                  0   

#   Vidarbha Cricket Association Stadium                             0   

#   Wankhede Stadium                                                 4   

#   Zayed Cricket Stadium                                            0   

#   

#   WinningTeam                                         Kochi Tuskers Kerala  \

#   Venue                                                                      

#   Arun Jaitley Stadium                                                   0   

#   Barabati Stadium                                                       0   

#   Brabourne Stadium                                                      0   

#   Buffalo Park                                                           0   

#   De Beers Diamond Oval                                                  0   

#   Dr DY Patil Sports Academy                                             0   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...                     0   

#   Dubai International Cricket Stadium                                    0   

#   Eden Gardens                                                           1   

#   Feroz Shah Kotla                                                       1   

#   Green Park                                                             0   

#   Himachal Pradesh Cricket Association Stadium                           0   

#   Holkar Cricket Stadium                                                 1   

#   JSCA International Stadium Complex                                     0   

#   Kingsmead                                                              0   

#   M Chinnaswamy Stadium                                                  0   

#   MA Chidambaram Stadium                                                 0   

#   Maharashtra Cricket Association Stadium                                0   

#   Narendra Modi Stadium                                                  0   

#   Nehru Stadium                                                          2   

#   New Wanderers Stadium                                                  0   

#   Newlands                                                               0   

#   OUTsurance Oval                                                        0   

#   Punjab Cricket Association IS Bindra Stadium                           0   

#   Punjab Cricket Association Stadium                                     0   

#   Rajiv Gandhi International Stadium                                     0   

#   Sardar Patel Stadium                                                   0   

#   Saurashtra Cricket Association Stadium                                 0   

#   Sawai Mansingh Stadium                                                 0   

#   Shaheed Veer Narayan Singh International Stadium                       0   

#   Sharjah Cricket Stadium                                                0   

#   Sheikh Zayed Stadium                                                   0   

#   St George's Park                                                       0   

#   Subrata Roy Sahara Stadium                                             0   

#   SuperSport Park                                                        0   

#   Vidarbha Cricket Association Stadium                                   0   

#   Wankhede Stadium                                                       1   

#   Zayed Cricket Stadium                                                  0   

#   

#   WinningTeam                                         Kolkata Knight Riders  \

#   Venue                                                                       

#   Arun Jaitley Stadium                                                    0   

#   Barabati Stadium                                                        3   

#   Brabourne Stadium                                                       0   

#   Buffalo Park                                                            0   

#   De Beers Diamond Oval                                                   0   

#   Dr DY Patil Sports Academy                                              3   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...                      0   

#   Dubai International Cricket Stadium                                     3   

#   Eden Gardens                                                           45   

#   Feroz Shah Kotla                                                        5   

#   Green Park                                                              0   

#   Himachal Pradesh Cricket Association Stadium                            0   

#   Holkar Cricket Stadium                                                  1   

#   JSCA International Stadium Complex                                      1   

#   Kingsmead                                                               2   

#   M Chinnaswamy Stadium                                                   8   

#   MA Chidambaram Stadium                                                  3   

#   Maharashtra Cricket Association Stadium                                 5   

#   Narendra Modi Stadium                                                   1   

#   Nehru Stadium                                                           0   

#   New Wanderers Stadium                                                   0   

#   Newlands                                                                0   

#   OUTsurance Oval                                                         0   

#   Punjab Cricket Association IS Bindra Stadium                            1   

#   Punjab Cricket Association Stadium                                      3   

#   Rajiv Gandhi International Stadium                                      5   

#   Sardar Patel Stadium                                                    0   

#   Saurashtra Cricket Association Stadium                                  1   

#   Sawai Mansingh Stadium                                                  3   

#   Shaheed Veer Narayan Singh International Stadium                        0   

#   Sharjah Cricket Stadium                                                 5   

#   Sheikh Zayed Stadium                                                    6   

#   St George's Park                                                        0   

#   Subrata Roy Sahara Stadium                                              3   

#   SuperSport Park                                                         1   

#   Vidarbha Cricket Association Stadium                                    0   

#   Wankhede Stadium                                                        4   

#   Zayed Cricket Stadium                                                   2   

#   

#   WinningTeam                                         Lucknow Super Giants  \

#   Venue                                                                      

#   Arun Jaitley Stadium                                                   0   

#   Barabati Stadium                                                       0   

#   Brabourne Stadium                                                      2   

#   Buffalo Park                                                           0   

#   De Beers Diamond Oval                                                  0   

#   Dr DY Patil Sports Academy                                             3   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...                     0   

#   Dubai International Cricket Stadium                                    0   

#   Eden Gardens                                                           0   

#   Feroz Shah Kotla                                                       0   

#   Green Park                                                             0   

#   Himachal Pradesh Cricket Association Stadium                           0   

#   Holkar Cricket Stadium                                                 0   

#   JSCA International Stadium Complex                                     0   

#   Kingsmead                                                              0   

#   M Chinnaswamy Stadium                                                  0   

#   MA Chidambaram Stadium                                                 0   

#   Maharashtra Cricket Association Stadium                                2   

#   Narendra Modi Stadium                                                  0   

#   Nehru Stadium                                                          0   

#   New Wanderers Stadium                                                  0   

#   Newlands                                                               0   

#   OUTsurance Oval                                                        0   

#   Punjab Cricket Association IS Bindra Stadium                           0   

#   Punjab Cricket Association Stadium                                     0   

#   Rajiv Gandhi International Stadium                                     0   

#   Sardar Patel Stadium                                                   0   

#   Saurashtra Cricket Association Stadium                                 0   

#   Sawai Mansingh Stadium                                                 0   

#   Shaheed Veer Narayan Singh International Stadium                       0   

#   Sharjah Cricket Stadium                                                0   

#   Sheikh Zayed Stadium                                                   0   

#   St George's Park                                                       0   

#   Subrata Roy Sahara Stadium                                             0   

#   SuperSport Park                                                        0   

#   Vidarbha Cricket Association Stadium                                   0   

#   Wankhede Stadium                                                       2   

#   Zayed Cricket Stadium                                                  0   

#   

#   WinningTeam                                         Mumbai Indians  \

#   Venue                                                                

#   Arun Jaitley Stadium                                             3   

#   Barabati Stadium                                                 0   

#   Brabourne Stadium                                                7   

#   Buffalo Park                                                     1   

#   De Beers Diamond Oval                                            0   

#   Dr DY Patil Sports Academy                                       6   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...               2   

#   Dubai International Cricket Stadium                              3   

#   Eden Gardens                                                    10   

#   Feroz Shah Kotla                                                 3   

#   Green Park                                                       0   

#   Himachal Pradesh Cricket Association Stadium                     0   

#   Holkar Cricket Stadium                                           2   

#   JSCA International Stadium Complex                               0   

#   Kingsmead                                                        0   

#   M Chinnaswamy Stadium                                            9   

#   MA Chidambaram Stadium                                           7   

#   Maharashtra Cricket Association Stadium                          2   

#   Narendra Modi Stadium                                            0   

#   Nehru Stadium                                                    0   

#   New Wanderers Stadium                                            0   

#   Newlands                                                         1   

#   OUTsurance Oval                                                  0   

#   Punjab Cricket Association IS Bindra Stadium                     0   

#   Punjab Cricket Association Stadium                               4   

#   Rajiv Gandhi International Stadium                               7   

#   Sardar Patel Stadium                                             1   

#   Saurashtra Cricket Association Stadium                           1   

#   Sawai Mansingh Stadium                                           2   

#   Shaheed Veer Narayan Singh International Stadium                 0   

#   Sharjah Cricket Stadium                                          3   

#   Sheikh Zayed Stadium                                             6   

#   St George's Park                                                 2   

#   Subrata Roy Sahara Stadium                                       2   

#   SuperSport Park                                                  1   

#   Vidarbha Cricket Association Stadium                             0   

#   Wankhede Stadium                                                44   

#   Zayed Cricket Stadium                                            2   

#   

#   WinningTeam                                         Punjab Kings  \

#   Venue                                                              

#   Arun Jaitley Stadium                                           1   

#   Barabati Stadium                                               1   

#   Brabourne Stadium                                              2   

#   Buffalo Park                                                   0   

#   De Beers Diamond Oval                                          1   

#   Dr DY Patil Sports Academy                                     2   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...             1   

#   Dubai International Cricket Stadium                            7   

#   Eden Gardens                                                   3   

#   Feroz Shah Kotla                                               4   

#   Green Park                                                     0   

#   Himachal Pradesh Cricket Association Stadium                   5   

#   Holkar Cricket Stadium                                         4   

#   JSCA International Stadium Complex                             0   

#   Kingsmead                                                      2   

#   M Chinnaswamy Stadium                                          5   

#   MA Chidambaram Stadium                                         3   

#   Maharashtra Cricket Association Stadium                        1   

#   Narendra Modi Stadium                                          1   

#   Nehru Stadium                                                  0   

#   New Wanderers Stadium                                          1   

#   Newlands                                                       1   

#   OUTsurance Oval                                                1   

#   Punjab Cricket Association IS Bindra Stadium                   8   

#   Punjab Cricket Association Stadium                            22   

#   Rajiv Gandhi International Stadium                             4   

#   Sardar Patel Stadium                                           1   

#   Saurashtra Cricket Association Stadium                         2   

#   Sawai Mansingh Stadium                                         1   

#   Shaheed Veer Narayan Singh International Stadium               0   

#   Sharjah Cricket Stadium                                        5   

#   Sheikh Zayed Stadium                                           2   

#   St George's Park                                               1   

#   Subrata Roy Sahara Stadium                                     1   

#   SuperSport Park                                                0   

#   Vidarbha Cricket Association Stadium                           0   

#   Wankhede Stadium                                               8   

#   Zayed Cricket Stadium                                          0   

#   

#   WinningTeam                                         Rajasthan Royals  \

#   Venue                                                                  

#   Arun Jaitley Stadium                                               1   

#   Barabati Stadium                                                   0   

#   Brabourne Stadium                                                  5   

#   Buffalo Park                                                       0   

#   De Beers Diamond Oval                                              0   

#   Dr DY Patil Sports Academy                                         2   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...                 1   

#   Dubai International Cricket Stadium                                2   

#   Eden Gardens                                                       2   

#   Feroz Shah Kotla                                                   4   

#   Green Park                                                         0   

#   Himachal Pradesh Cricket Association Stadium                       0   

#   Holkar Cricket Stadium                                             0   

#   JSCA International Stadium Complex                                 0   

#   Kingsmead                                                          2   

#   M Chinnaswamy Stadium                                              4   

#   MA Chidambaram Stadium                                             1   

#   Maharashtra Cricket Association Stadium                            3   

#   Narendra Modi Stadium                                              1   

#   Nehru Stadium                                                      0   

#   New Wanderers Stadium                                              0   

#   Newlands                                                           1   

#   OUTsurance Oval                                                    0   

#   Punjab Cricket Association IS Bindra Stadium                       0   

#   Punjab Cricket Association Stadium                                 3   

#   Rajiv Gandhi International Stadium                                 2   

#   Sardar Patel Stadium                                               7   

#   Saurashtra Cricket Association Stadium                             0   

#   Sawai Mansingh Stadium                                            32   

#   Shaheed Veer Narayan Singh International Stadium                   0   

#   Sharjah Cricket Stadium                                            2   

#   Sheikh Zayed Stadium                                               6   

#   St George's Park                                                   1   

#   Subrata Roy Sahara Stadium                                         1   

#   SuperSport Park                                                    2   

#   Vidarbha Cricket Association Stadium                               1   

#   Wankhede Stadium                                                   9   

#   Zayed Cricket Stadium                                              1   

#   

#   WinningTeam                                         Rising Pune Supergiant  \

#   Venue                                                                        

#   Arun Jaitley Stadium                                                     0   

#   Barabati Stadium                                                         0   

#   Brabourne Stadium                                                        0   

#   Buffalo Park                                                             0   

#   De Beers Diamond Oval                                                    0   

#   Dr DY Patil Sports Academy                                               2   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...                       2   

#   Dubai International Cricket Stadium                                      0   

#   Eden Gardens                                                             1   

#   Feroz Shah Kotla                                                         2   

#   Green Park                                                               0   

#   Himachal Pradesh Cricket Association Stadium                             0   

#   Holkar Cricket Stadium                                                   0   

#   JSCA International Stadium Complex                                       1   

#   Kingsmead                                                                0   

#   M Chinnaswamy Stadium                                                    1   

#   MA Chidambaram Stadium                                                   1   

#   Maharashtra Cricket Association Stadium                                  5   

#   Narendra Modi Stadium                                                    0   

#   Nehru Stadium                                                            0   

#   New Wanderers Stadium                                                    0   

#   Newlands                                                                 0   

#   OUTsurance Oval                                                          0   

#   Punjab Cricket Association IS Bindra Stadium                             0   

#   Punjab Cricket Association Stadium                                       1   

#   Rajiv Gandhi International Stadium                                       3   

#   Sardar Patel Stadium                                                     0   

#   Saurashtra Cricket Association Stadium                                   0   

#   Sawai Mansingh Stadium                                                   0   

#   Shaheed Veer Narayan Singh International Stadium                         0   

#   Sharjah Cricket Stadium                                                  0   

#   Sheikh Zayed Stadium                                                     0   

#   St George's Park                                                         0   

#   Subrata Roy Sahara Stadium                                               4   

#   SuperSport Park                                                          0   

#   Vidarbha Cricket Association Stadium                                     0   

#   Wankhede Stadium                                                         4   

#   Zayed Cricket Stadium                                                    0   

#   

#   WinningTeam                                         Royal Challengers Bangalore  \

#   Venue                                                                             

#   Arun Jaitley Stadium                                                          1   

#   Barabati Stadium                                                              0   

#   Brabourne Stadium                                                             1   

#   Buffalo Park                                                                  0   

#   De Beers Diamond Oval                                                         0   

#   Dr DY Patil Sports Academy                                                    3   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...                            0   

#   Dubai International Cricket Stadium                                           8   

#   Eden Gardens                                                                  5   

#   Feroz Shah Kotla                                                              5   

#   Green Park                                                                    0   

#   Himachal Pradesh Cricket Association Stadium                                  0   

#   Holkar Cricket Stadium                                                        1   

#   JSCA International Stadium Complex                                            1   

#   Kingsmead                                                                     3   

#   M Chinnaswamy Stadium                                                        37   

#   MA Chidambaram Stadium                                                        5   

#   Maharashtra Cricket Association Stadium                                       4   

#   Narendra Modi Stadium                                                         1   

#   Nehru Stadium                                                                 1   

#   New Wanderers Stadium                                                         3   

#   Newlands                                                                      1   

#   OUTsurance Oval                                                               0   

#   Punjab Cricket Association IS Bindra Stadium                                  1   

#   Punjab Cricket Association Stadium                                            3   

#   Rajiv Gandhi International Stadium                                            2   

#   Sardar Patel Stadium                                                          1   

#   Saurashtra Cricket Association Stadium                                        1   

#   Sawai Mansingh Stadium                                                        3   

#   Shaheed Veer Narayan Singh International Stadium                              1   

#   Sharjah Cricket Stadium                                                       3   

#   Sheikh Zayed Stadium                                                          2   

#   St George's Park                                                              0   

#   Subrata Roy Sahara Stadium                                                    2   

#   SuperSport Park                                                               2   

#   Vidarbha Cricket Association Stadium                                          0   

#   Wankhede Stadium                                                              8   

#   Zayed Cricket Stadium                                                         0   

#   

#   WinningTeam                                         Sunrisers Hyderabad  \

#   Venue                                                                     

#   Arun Jaitley Stadium                                                  2   

#   Barabati Stadium                                                      3   

#   Brabourne Stadium                                                     3   

#   Buffalo Park                                                          0   

#   De Beers Diamond Oval                                                 1   

#   Dr DY Patil Sports Academy                                            5   

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...                    3   

#   Dubai International Cricket Stadium                                   7   

#   Eden Gardens                                                          2   

#   Feroz Shah Kotla                                                      6   

#   Green Park                                                            1   

#   Himachal Pradesh Cricket Association Stadium                          2   

#   Holkar Cricket Stadium                                                0   

#   JSCA International Stadium Complex                                    1   

#   Kingsmead                                                             2   

#   M Chinnaswamy Stadium                                                 3   

#   MA Chidambaram Stadium                                                3   

#   Maharashtra Cricket Association Stadium                               1   

#   Narendra Modi Stadium                                                 0   

#   Nehru Stadium                                                         1   

#   New Wanderers Stadium                                                 2   

#   Newlands                                                              2   

#   OUTsurance Oval                                                       0   

#   Punjab Cricket Association IS Bindra Stadium                          0   

#   Punjab Cricket Association Stadium                                    4   

#   Rajiv Gandhi International Stadium                                   33   

#   Sardar Patel Stadium                                                  1   

#   Saurashtra Cricket Association Stadium                                1   

#   Sawai Mansingh Stadium                                                1   

#   Shaheed Veer Narayan Singh International Stadium                      1   

#   Sharjah Cricket Stadium                                               2   

#   Sheikh Zayed Stadium                                                  2   

#   St George's Park                                                      0   

#   Subrata Roy Sahara Stadium                                            1   

#   SuperSport Park                                                       2   

#   Vidarbha Cricket Association Stadium                                  2   

#   Wankhede Stadium                                                      3   

#   Zayed Cricket Stadium                                                 1   

#   

#   WinningTeam                                         Unknown  

#   Venue                                                        

#   Arun Jaitley Stadium                                      0  

#   Barabati Stadium                                          0  

#   Brabourne Stadium                                         0  

#   Buffalo Park                                              0  

#   De Beers Diamond Oval                                     0  

#   Dr DY Patil Sports Academy                                0  

#   Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Sta...        0  

#   Dubai International Cricket Stadium                       0  

#   Eden Gardens                                              0  

#   Feroz Shah Kotla                                          1  

#   Green Park                                                0  

#   Himachal Pradesh Cricket Association Stadium              0  

#   Holkar Cricket Stadium                                    0  

#   JSCA International Stadium Complex                        0  

#   Kingsmead                                                 0  

#   M Chinnaswamy Stadium                                     3  

#   MA Chidambaram Stadium                                    0  

#   Maharashtra Cricket Association Stadium                   0  

#   Narendra Modi Stadium                                     0  

#   Nehru Stadium                                             0  

#   New Wanderers Stadium                                     0  

#   Newlands                                                  0  

#   OUTsurance Oval                                           0  

#   Punjab Cricket Association IS Bindra Stadium              0  

#   Punjab Cricket Association Stadium                        0  

#   Rajiv Gandhi International Stadium                        0  

#   Sardar Patel Stadium                                      0  

#   Saurashtra Cricket Association Stadium                    0  

#   Sawai Mansingh Stadium                                    0  

#   Shaheed Veer Narayan Singh International Stadium          0  

#   Sharjah Cricket Stadium                                   0  

#   Sheikh Zayed Stadium                                      0  

#   St George's Park                                          0  

#   Subrata Roy Sahara Stadium                                0  

#   SuperSport Park                                           0  

#   Vidarbha Cricket Association Stadium                      0  

#   Wankhede Stadium                                          0  

#   Zayed Cricket Stadium                                     0  

observed_values=ground.values
print('Observed Values:\n',observed_values)
# Output:
#   Observed Values:

#    [[ 2  8  0  0  0  0  3  1  1  0  1  2  0]

#    [ 0  0  0  0  3  0  0  1  0  0  0  3  0]

#    [ 1  4  2  0  0  2  7  2  5  0  1  3  0]

#    [ 1  1  0  0  0  0  1  0  0  0  0  0  0]

#    [ 1  0  0  0  0  0  0  1  0  0  0  1  0]

#    [ 6  3  2  0  3  3  6  2  2  2  3  5  0]

#    [ 2  2  0  0  0  0  2  1  1  2  0  3  0]

#    [ 9  7  0  0  3  0  3  7  2  0  8  7  0]

#    [ 5  2  3  1 45  0 10  3  2  1  5  2  0]

#    [ 5 23  1  1  5  0  3  4  4  2  5  6  1]

#    [ 0  1  2  0  0  0  0  0  0  0  0  1  0]

#    [ 1  1  0  0  0  0  0  5  0  0  0  2  0]

#    [ 0  0  0  1  1  0  2  4  0  0  1  0  0]

#    [ 3  0  0  0  1  0  0  0  0  1  1  1  0]

#    [ 1  3  0  0  2  0  0  2  2  0  3  2  0]

#    [ 5  4  1  0  8  0  9  5  4  1 37  3  3]

#    [40  4  0  0  3  0  7  3  1  1  5  3  0]

#    [ 6  2  4  0  5  2  2  1  3  5  4  1  0]

#    [ 0  2  1  0  1  0  0  1  1  0  1  0  0]

#    [ 0  1  0  2  0  0  0  0  0  0  1  1  0]

#    [ 1  1  0  0  0  0  0  1  0  0  3  2  0]

#    [ 0  1  0  0  0  0  1  1  1  0  1  2  0]

#    [ 0  1  0  0  0  0  0  1  0  0  0  0  0]

#    [ 0  0  0  0  1  0  0  8  0  0  1  0  0]

#    [ 3  1  2  0  3  0  4 22  3  1  3  4  0]

#    [ 3  5  0  0  5  0  7  4  2  3  2 33  0]

#    [ 0  1  0  0  0  0  1  1  7  0  1  1  0]

#    [ 0  1  3  0  1  0  1  2  0  0  1  1  0]

#    [ 3  2  0  0  3  0  2  1 32  0  3  1  0]

#    [ 0  4  0  0  0  0  0  0  0  0  1  1  0]

#    [ 3  5  0  0  5  0  3  5  2  0  3  2  0]

#    [ 3  2  0  0  6  0  6  2  6  0  2  2  0]

#    [ 2  1  0  0  0  0  2  1  1  0  0  0  0]

#    [ 1  1  0  0  3  0  2  1  1  4  2  1  0]

#    [ 2  2  0  0  1  0  1  0  2  0  2  2  0]

#    [ 0  0  0  0  0  0  0  0  1  0  0  2  0]

#    [11  6  4  1  4  2 44  8  9  4  8  3  0]

#    [ 1  1  0  0  2  0  2  0  1  0  0  1  0]]


val=ss.chi2_contingency(ground)
val
# Output:
#   (1560.2171905612277,

#    6.4669928623952325e-124,

#    444,

#    array([[2.29263158e+00, 1.95157895e+00, 4.73684211e-01, 1.13684211e-01,

#            2.16000000e+00, 1.70526316e-01, 2.48210526e+00, 1.91368421e+00,

#            1.81894737e+00, 5.11578947e-01, 2.06526316e+00, 1.97052632e+00,

#            7.57894737e-02],

#           [8.91578947e-01, 7.58947368e-01, 1.84210526e-01, 4.42105263e-02,

#            8.40000000e-01, 6.63157895e-02, 9.65263158e-01, 7.44210526e-01,

#            7.07368421e-01, 1.98947368e-01, 8.03157895e-01, 7.66315789e-01,

#            2.94736842e-02],

#           [3.43894737e+00, 2.92736842e+00, 7.10526316e-01, 1.70526316e-01,

#            3.24000000e+00, 2.55789474e-01, 3.72315789e+00, 2.87052632e+00,

#            2.72842105e+00, 7.67368421e-01, 3.09789474e+00, 2.95578947e+00,

#            1.13684211e-01],

#           [3.82105263e-01, 3.25263158e-01, 7.89473684e-02, 1.89473684e-02,

#            3.60000000e-01, 2.84210526e-02, 4.13684211e-01, 3.18947368e-01,

#            3.03157895e-01, 8.52631579e-02, 3.44210526e-01, 3.28421053e-01,

#            1.26315789e-02],

#           [3.82105263e-01, 3.25263158e-01, 7.89473684e-02, 1.89473684e-02,

#            3.60000000e-01, 2.84210526e-02, 4.13684211e-01, 3.18947368e-01,

#            3.03157895e-01, 8.52631579e-02, 3.44210526e-01, 3.28421053e-01,

#            1.26315789e-02],

#           [4.71263158e+00, 4.01157895e+00, 9.73684211e-01, 2.33684211e-01,

#            4.44000000e+00, 3.50526316e-01, 5.10210526e+00, 3.93368421e+00,

#            3.73894737e+00, 1.05157895e+00, 4.24526316e+00, 4.05052632e+00,

#            1.55789474e-01],

#           [1.65578947e+00, 1.40947368e+00, 3.42105263e-01, 8.21052632e-02,

#            1.56000000e+00, 1.23157895e-01, 1.79263158e+00, 1.38210526e+00,

#            1.31368421e+00, 3.69473684e-01, 1.49157895e+00, 1.42315789e+00,

#            5.47368421e-02],

#           [5.85894737e+00, 4.98736842e+00, 1.21052632e+00, 2.90526316e-01,

#            5.52000000e+00, 4.35789474e-01, 6.34315789e+00, 4.89052632e+00,

#            4.64842105e+00, 1.30736842e+00, 5.27789474e+00, 5.03578947e+00,

#            1.93684211e-01],

#           [1.00621053e+01, 8.56526316e+00, 2.07894737e+00, 4.98947368e-01,

#            9.48000000e+00, 7.48421053e-01, 1.08936842e+01, 8.39894737e+00,

#            7.98315789e+00, 2.24526316e+00, 9.06421053e+00, 8.64842105e+00,

#            3.32631579e-01],

#           [7.64210526e+00, 6.50526316e+00, 1.57894737e+00, 3.78947368e-01,

#            7.20000000e+00, 5.68421053e-01, 8.27368421e+00, 6.37894737e+00,

#            6.06315789e+00, 1.70526316e+00, 6.88421053e+00, 6.56842105e+00,

#            2.52631579e-01],

#           [5.09473684e-01, 4.33684211e-01, 1.05263158e-01, 2.52631579e-02,

#            4.80000000e-01, 3.78947368e-02, 5.51578947e-01, 4.25263158e-01,

#            4.04210526e-01, 1.13684211e-01, 4.58947368e-01, 4.37894737e-01,

#            1.68421053e-02],

#           [1.14631579e+00, 9.75789474e-01, 2.36842105e-01, 5.68421053e-02,

#            1.08000000e+00, 8.52631579e-02, 1.24105263e+00, 9.56842105e-01,

#            9.09473684e-01, 2.55789474e-01, 1.03263158e+00, 9.85263158e-01,

#            3.78947368e-02],

#           [1.14631579e+00, 9.75789474e-01, 2.36842105e-01, 5.68421053e-02,

#            1.08000000e+00, 8.52631579e-02, 1.24105263e+00, 9.56842105e-01,

#            9.09473684e-01, 2.55789474e-01, 1.03263158e+00, 9.85263158e-01,

#            3.78947368e-02],

#           [8.91578947e-01, 7.58947368e-01, 1.84210526e-01, 4.42105263e-02,

#            8.40000000e-01, 6.63157895e-02, 9.65263158e-01, 7.44210526e-01,

#            7.07368421e-01, 1.98947368e-01, 8.03157895e-01, 7.66315789e-01,

#            2.94736842e-02],

#           [1.91052632e+00, 1.62631579e+00, 3.94736842e-01, 9.47368421e-02,

#            1.80000000e+00, 1.42105263e-01, 2.06842105e+00, 1.59473684e+00,

#            1.51578947e+00, 4.26315789e-01, 1.72105263e+00, 1.64210526e+00,

#            6.31578947e-02],

#           [1.01894737e+01, 8.67368421e+00, 2.10526316e+00, 5.05263158e-01,

#            9.60000000e+00, 7.57894737e-01, 1.10315789e+01, 8.50526316e+00,

#            8.08421053e+00, 2.27368421e+00, 9.17894737e+00, 8.75789474e+00,

#            3.36842105e-01],

#           [8.53368421e+00, 7.26421053e+00, 1.76315789e+00, 4.23157895e-01,

#            8.04000000e+00, 6.34736842e-01, 9.23894737e+00, 7.12315789e+00,

#            6.77052632e+00, 1.90421053e+00, 7.68736842e+00, 7.33473684e+00,

#            2.82105263e-01],

#           [4.45789474e+00, 3.79473684e+00, 9.21052632e-01, 2.21052632e-01,

#            4.20000000e+00, 3.31578947e-01, 4.82631579e+00, 3.72105263e+00,

#            3.53684211e+00, 9.94736842e-01, 4.01578947e+00, 3.83157895e+00,

#            1.47368421e-01],

#           [8.91578947e-01, 7.58947368e-01, 1.84210526e-01, 4.42105263e-02,

#            8.40000000e-01, 6.63157895e-02, 9.65263158e-01, 7.44210526e-01,

#            7.07368421e-01, 1.98947368e-01, 8.03157895e-01, 7.66315789e-01,

#            2.94736842e-02],

#           [6.36842105e-01, 5.42105263e-01, 1.31578947e-01, 3.15789474e-02,

#            6.00000000e-01, 4.73684211e-02, 6.89473684e-01, 5.31578947e-01,

#            5.05263158e-01, 1.42105263e-01, 5.73684211e-01, 5.47368421e-01,

#            2.10526316e-02],

#           [1.01894737e+00, 8.67368421e-01, 2.10526316e-01, 5.05263158e-02,

#            9.60000000e-01, 7.57894737e-02, 1.10315789e+00, 8.50526316e-01,

#            8.08421053e-01, 2.27368421e-01, 9.17894737e-01, 8.75789474e-01,

#            3.36842105e-02],

#           [8.91578947e-01, 7.58947368e-01, 1.84210526e-01, 4.42105263e-02,

#            8.40000000e-01, 6.63157895e-02, 9.65263158e-01, 7.44210526e-01,

#            7.07368421e-01, 1.98947368e-01, 8.03157895e-01, 7.66315789e-01,

#            2.94736842e-02],

#           [2.54736842e-01, 2.16842105e-01, 5.26315789e-02, 1.26315789e-02,

#            2.40000000e-01, 1.89473684e-02, 2.75789474e-01, 2.12631579e-01,

#            2.02105263e-01, 5.68421053e-02, 2.29473684e-01, 2.18947368e-01,

#            8.42105263e-03],

#           [1.27368421e+00, 1.08421053e+00, 2.63157895e-01, 6.31578947e-02,

#            1.20000000e+00, 9.47368421e-02, 1.37894737e+00, 1.06315789e+00,

#            1.01052632e+00, 2.84210526e-01, 1.14736842e+00, 1.09473684e+00,

#            4.21052632e-02],

#           [5.85894737e+00, 4.98736842e+00, 1.21052632e+00, 2.90526316e-01,

#            5.52000000e+00, 4.35789474e-01, 6.34315789e+00, 4.89052632e+00,

#            4.64842105e+00, 1.30736842e+00, 5.27789474e+00, 5.03578947e+00,

#            1.93684211e-01],

#           [8.15157895e+00, 6.93894737e+00, 1.68421053e+00, 4.04210526e-01,

#            7.68000000e+00, 6.06315789e-01, 8.82526316e+00, 6.80421053e+00,

#            6.46736842e+00, 1.81894737e+00, 7.34315789e+00, 7.00631579e+00,

#            2.69473684e-01],

#           [1.52842105e+00, 1.30105263e+00, 3.15789474e-01, 7.57894737e-02,

#            1.44000000e+00, 1.13684211e-01, 1.65473684e+00, 1.27578947e+00,

#            1.21263158e+00, 3.41052632e-01, 1.37684211e+00, 1.31368421e+00,

#            5.05263158e-02],

#           [1.27368421e+00, 1.08421053e+00, 2.63157895e-01, 6.31578947e-02,

#            1.20000000e+00, 9.47368421e-02, 1.37894737e+00, 1.06315789e+00,

#            1.01052632e+00, 2.84210526e-01, 1.14736842e+00, 1.09473684e+00,

#            4.21052632e-02],

#           [5.98631579e+00, 5.09578947e+00, 1.23684211e+00, 2.96842105e-01,

#            5.64000000e+00, 4.45263158e-01, 6.48105263e+00, 4.99684211e+00,

#            4.74947368e+00, 1.33578947e+00, 5.39263158e+00, 5.14526316e+00,

#            1.97894737e-01],

#           [7.64210526e-01, 6.50526316e-01, 1.57894737e-01, 3.78947368e-02,

#            7.20000000e-01, 5.68421053e-02, 8.27368421e-01, 6.37894737e-01,

#            6.06315789e-01, 1.70526316e-01, 6.88421053e-01, 6.56842105e-01,

#            2.52631579e-02],

#           [3.56631579e+00, 3.03578947e+00, 7.36842105e-01, 1.76842105e-01,

#            3.36000000e+00, 2.65263158e-01, 3.86105263e+00, 2.97684211e+00,

#            2.82947368e+00, 7.95789474e-01, 3.21263158e+00, 3.06526316e+00,

#            1.17894737e-01],

#           [3.69368421e+00, 3.14421053e+00, 7.63157895e-01, 1.83157895e-01,

#            3.48000000e+00, 2.74736842e-01, 3.99894737e+00, 3.08315789e+00,

#            2.93052632e+00, 8.24210526e-01, 3.32736842e+00, 3.17473684e+00,

#            1.22105263e-01],

#           [8.91578947e-01, 7.58947368e-01, 1.84210526e-01, 4.42105263e-02,

#            8.40000000e-01, 6.63157895e-02, 9.65263158e-01, 7.44210526e-01,

#            7.07368421e-01, 1.98947368e-01, 8.03157895e-01, 7.66315789e-01,

#            2.94736842e-02],

#           [2.03789474e+00, 1.73473684e+00, 4.21052632e-01, 1.01052632e-01,

#            1.92000000e+00, 1.51578947e-01, 2.20631579e+00, 1.70105263e+00,

#            1.61684211e+00, 4.54736842e-01, 1.83578947e+00, 1.75157895e+00,

#            6.73684211e-02],

#           [1.52842105e+00, 1.30105263e+00, 3.15789474e-01, 7.57894737e-02,

#            1.44000000e+00, 1.13684211e-01, 1.65473684e+00, 1.27578947e+00,

#            1.21263158e+00, 3.41052632e-01, 1.37684211e+00, 1.31368421e+00,

#            5.05263158e-02],

#           [3.82105263e-01, 3.25263158e-01, 7.89473684e-02, 1.89473684e-02,

#            3.60000000e-01, 2.84210526e-02, 4.13684211e-01, 3.18947368e-01,

#            3.03157895e-01, 8.52631579e-02, 3.44210526e-01, 3.28421053e-01,

#            1.26315789e-02],

#           [1.32463158e+01, 1.12757895e+01, 2.73684211e+00, 6.56842105e-01,

#            1.24800000e+01, 9.85263158e-01, 1.43410526e+01, 1.10568421e+01,

#            1.05094737e+01, 2.95578947e+00, 1.19326316e+01, 1.13852632e+01,

#            4.37894737e-01],

#           [1.01894737e+00, 8.67368421e-01, 2.10526316e-01, 5.05263158e-02,

#            9.60000000e-01, 7.57894737e-02, 1.10315789e+00, 8.50526316e-01,

#            8.08421053e-01, 2.27368421e-01, 9.17894737e-01, 8.75789474e-01,

#            3.36842105e-02]]))

expected_values=val[3]
expected_values
# Output:
#   array([[2.29263158e+00, 1.95157895e+00, 4.73684211e-01, 1.13684211e-01,

#           2.16000000e+00, 1.70526316e-01, 2.48210526e+00, 1.91368421e+00,

#           1.81894737e+00, 5.11578947e-01, 2.06526316e+00, 1.97052632e+00,

#           7.57894737e-02],

#          [8.91578947e-01, 7.58947368e-01, 1.84210526e-01, 4.42105263e-02,

#           8.40000000e-01, 6.63157895e-02, 9.65263158e-01, 7.44210526e-01,

#           7.07368421e-01, 1.98947368e-01, 8.03157895e-01, 7.66315789e-01,

#           2.94736842e-02],

#          [3.43894737e+00, 2.92736842e+00, 7.10526316e-01, 1.70526316e-01,

#           3.24000000e+00, 2.55789474e-01, 3.72315789e+00, 2.87052632e+00,

#           2.72842105e+00, 7.67368421e-01, 3.09789474e+00, 2.95578947e+00,

#           1.13684211e-01],

#          [3.82105263e-01, 3.25263158e-01, 7.89473684e-02, 1.89473684e-02,

#           3.60000000e-01, 2.84210526e-02, 4.13684211e-01, 3.18947368e-01,

#           3.03157895e-01, 8.52631579e-02, 3.44210526e-01, 3.28421053e-01,

#           1.26315789e-02],

#          [3.82105263e-01, 3.25263158e-01, 7.89473684e-02, 1.89473684e-02,

#           3.60000000e-01, 2.84210526e-02, 4.13684211e-01, 3.18947368e-01,

#           3.03157895e-01, 8.52631579e-02, 3.44210526e-01, 3.28421053e-01,

#           1.26315789e-02],

#          [4.71263158e+00, 4.01157895e+00, 9.73684211e-01, 2.33684211e-01,

#           4.44000000e+00, 3.50526316e-01, 5.10210526e+00, 3.93368421e+00,

#           3.73894737e+00, 1.05157895e+00, 4.24526316e+00, 4.05052632e+00,

#           1.55789474e-01],

#          [1.65578947e+00, 1.40947368e+00, 3.42105263e-01, 8.21052632e-02,

#           1.56000000e+00, 1.23157895e-01, 1.79263158e+00, 1.38210526e+00,

#           1.31368421e+00, 3.69473684e-01, 1.49157895e+00, 1.42315789e+00,

#           5.47368421e-02],

#          [5.85894737e+00, 4.98736842e+00, 1.21052632e+00, 2.90526316e-01,

#           5.52000000e+00, 4.35789474e-01, 6.34315789e+00, 4.89052632e+00,

#           4.64842105e+00, 1.30736842e+00, 5.27789474e+00, 5.03578947e+00,

#           1.93684211e-01],

#          [1.00621053e+01, 8.56526316e+00, 2.07894737e+00, 4.98947368e-01,

#           9.48000000e+00, 7.48421053e-01, 1.08936842e+01, 8.39894737e+00,

#           7.98315789e+00, 2.24526316e+00, 9.06421053e+00, 8.64842105e+00,

#           3.32631579e-01],

#          [7.64210526e+00, 6.50526316e+00, 1.57894737e+00, 3.78947368e-01,

#           7.20000000e+00, 5.68421053e-01, 8.27368421e+00, 6.37894737e+00,

#           6.06315789e+00, 1.70526316e+00, 6.88421053e+00, 6.56842105e+00,

#           2.52631579e-01],

#          [5.09473684e-01, 4.33684211e-01, 1.05263158e-01, 2.52631579e-02,

#           4.80000000e-01, 3.78947368e-02, 5.51578947e-01, 4.25263158e-01,

#           4.04210526e-01, 1.13684211e-01, 4.58947368e-01, 4.37894737e-01,

#           1.68421053e-02],

#          [1.14631579e+00, 9.75789474e-01, 2.36842105e-01, 5.68421053e-02,

#           1.08000000e+00, 8.52631579e-02, 1.24105263e+00, 9.56842105e-01,

#           9.09473684e-01, 2.55789474e-01, 1.03263158e+00, 9.85263158e-01,

#           3.78947368e-02],

#          [1.14631579e+00, 9.75789474e-01, 2.36842105e-01, 5.68421053e-02,

#           1.08000000e+00, 8.52631579e-02, 1.24105263e+00, 9.56842105e-01,

#           9.09473684e-01, 2.55789474e-01, 1.03263158e+00, 9.85263158e-01,

#           3.78947368e-02],

#          [8.91578947e-01, 7.58947368e-01, 1.84210526e-01, 4.42105263e-02,

#           8.40000000e-01, 6.63157895e-02, 9.65263158e-01, 7.44210526e-01,

#           7.07368421e-01, 1.98947368e-01, 8.03157895e-01, 7.66315789e-01,

#           2.94736842e-02],

#          [1.91052632e+00, 1.62631579e+00, 3.94736842e-01, 9.47368421e-02,

#           1.80000000e+00, 1.42105263e-01, 2.06842105e+00, 1.59473684e+00,

#           1.51578947e+00, 4.26315789e-01, 1.72105263e+00, 1.64210526e+00,

#           6.31578947e-02],

#          [1.01894737e+01, 8.67368421e+00, 2.10526316e+00, 5.05263158e-01,

#           9.60000000e+00, 7.57894737e-01, 1.10315789e+01, 8.50526316e+00,

#           8.08421053e+00, 2.27368421e+00, 9.17894737e+00, 8.75789474e+00,

#           3.36842105e-01],

#          [8.53368421e+00, 7.26421053e+00, 1.76315789e+00, 4.23157895e-01,

#           8.04000000e+00, 6.34736842e-01, 9.23894737e+00, 7.12315789e+00,

#           6.77052632e+00, 1.90421053e+00, 7.68736842e+00, 7.33473684e+00,

#           2.82105263e-01],

#          [4.45789474e+00, 3.79473684e+00, 9.21052632e-01, 2.21052632e-01,

#           4.20000000e+00, 3.31578947e-01, 4.82631579e+00, 3.72105263e+00,

#           3.53684211e+00, 9.94736842e-01, 4.01578947e+00, 3.83157895e+00,

#           1.47368421e-01],

#          [8.91578947e-01, 7.58947368e-01, 1.84210526e-01, 4.42105263e-02,

#           8.40000000e-01, 6.63157895e-02, 9.65263158e-01, 7.44210526e-01,

#           7.07368421e-01, 1.98947368e-01, 8.03157895e-01, 7.66315789e-01,

#           2.94736842e-02],

#          [6.36842105e-01, 5.42105263e-01, 1.31578947e-01, 3.15789474e-02,

#           6.00000000e-01, 4.73684211e-02, 6.89473684e-01, 5.31578947e-01,

#           5.05263158e-01, 1.42105263e-01, 5.73684211e-01, 5.47368421e-01,

#           2.10526316e-02],

#          [1.01894737e+00, 8.67368421e-01, 2.10526316e-01, 5.05263158e-02,

#           9.60000000e-01, 7.57894737e-02, 1.10315789e+00, 8.50526316e-01,

#           8.08421053e-01, 2.27368421e-01, 9.17894737e-01, 8.75789474e-01,

#           3.36842105e-02],

#          [8.91578947e-01, 7.58947368e-01, 1.84210526e-01, 4.42105263e-02,

#           8.40000000e-01, 6.63157895e-02, 9.65263158e-01, 7.44210526e-01,

#           7.07368421e-01, 1.98947368e-01, 8.03157895e-01, 7.66315789e-01,

#           2.94736842e-02],

#          [2.54736842e-01, 2.16842105e-01, 5.26315789e-02, 1.26315789e-02,

#           2.40000000e-01, 1.89473684e-02, 2.75789474e-01, 2.12631579e-01,

#           2.02105263e-01, 5.68421053e-02, 2.29473684e-01, 2.18947368e-01,

#           8.42105263e-03],

#          [1.27368421e+00, 1.08421053e+00, 2.63157895e-01, 6.31578947e-02,

#           1.20000000e+00, 9.47368421e-02, 1.37894737e+00, 1.06315789e+00,

#           1.01052632e+00, 2.84210526e-01, 1.14736842e+00, 1.09473684e+00,

#           4.21052632e-02],

#          [5.85894737e+00, 4.98736842e+00, 1.21052632e+00, 2.90526316e-01,

#           5.52000000e+00, 4.35789474e-01, 6.34315789e+00, 4.89052632e+00,

#           4.64842105e+00, 1.30736842e+00, 5.27789474e+00, 5.03578947e+00,

#           1.93684211e-01],

#          [8.15157895e+00, 6.93894737e+00, 1.68421053e+00, 4.04210526e-01,

#           7.68000000e+00, 6.06315789e-01, 8.82526316e+00, 6.80421053e+00,

#           6.46736842e+00, 1.81894737e+00, 7.34315789e+00, 7.00631579e+00,

#           2.69473684e-01],

#          [1.52842105e+00, 1.30105263e+00, 3.15789474e-01, 7.57894737e-02,

#           1.44000000e+00, 1.13684211e-01, 1.65473684e+00, 1.27578947e+00,

#           1.21263158e+00, 3.41052632e-01, 1.37684211e+00, 1.31368421e+00,

#           5.05263158e-02],

#          [1.27368421e+00, 1.08421053e+00, 2.63157895e-01, 6.31578947e-02,

#           1.20000000e+00, 9.47368421e-02, 1.37894737e+00, 1.06315789e+00,

#           1.01052632e+00, 2.84210526e-01, 1.14736842e+00, 1.09473684e+00,

#           4.21052632e-02],

#          [5.98631579e+00, 5.09578947e+00, 1.23684211e+00, 2.96842105e-01,

#           5.64000000e+00, 4.45263158e-01, 6.48105263e+00, 4.99684211e+00,

#           4.74947368e+00, 1.33578947e+00, 5.39263158e+00, 5.14526316e+00,

#           1.97894737e-01],

#          [7.64210526e-01, 6.50526316e-01, 1.57894737e-01, 3.78947368e-02,

#           7.20000000e-01, 5.68421053e-02, 8.27368421e-01, 6.37894737e-01,

#           6.06315789e-01, 1.70526316e-01, 6.88421053e-01, 6.56842105e-01,

#           2.52631579e-02],

#          [3.56631579e+00, 3.03578947e+00, 7.36842105e-01, 1.76842105e-01,

#           3.36000000e+00, 2.65263158e-01, 3.86105263e+00, 2.97684211e+00,

#           2.82947368e+00, 7.95789474e-01, 3.21263158e+00, 3.06526316e+00,

#           1.17894737e-01],

#          [3.69368421e+00, 3.14421053e+00, 7.63157895e-01, 1.83157895e-01,

#           3.48000000e+00, 2.74736842e-01, 3.99894737e+00, 3.08315789e+00,

#           2.93052632e+00, 8.24210526e-01, 3.32736842e+00, 3.17473684e+00,

#           1.22105263e-01],

#          [8.91578947e-01, 7.58947368e-01, 1.84210526e-01, 4.42105263e-02,

#           8.40000000e-01, 6.63157895e-02, 9.65263158e-01, 7.44210526e-01,

#           7.07368421e-01, 1.98947368e-01, 8.03157895e-01, 7.66315789e-01,

#           2.94736842e-02],

#          [2.03789474e+00, 1.73473684e+00, 4.21052632e-01, 1.01052632e-01,

#           1.92000000e+00, 1.51578947e-01, 2.20631579e+00, 1.70105263e+00,

#           1.61684211e+00, 4.54736842e-01, 1.83578947e+00, 1.75157895e+00,

#           6.73684211e-02],

#          [1.52842105e+00, 1.30105263e+00, 3.15789474e-01, 7.57894737e-02,

#           1.44000000e+00, 1.13684211e-01, 1.65473684e+00, 1.27578947e+00,

#           1.21263158e+00, 3.41052632e-01, 1.37684211e+00, 1.31368421e+00,

#           5.05263158e-02],

#          [3.82105263e-01, 3.25263158e-01, 7.89473684e-02, 1.89473684e-02,

#           3.60000000e-01, 2.84210526e-02, 4.13684211e-01, 3.18947368e-01,

#           3.03157895e-01, 8.52631579e-02, 3.44210526e-01, 3.28421053e-01,

#           1.26315789e-02],

#          [1.32463158e+01, 1.12757895e+01, 2.73684211e+00, 6.56842105e-01,

#           1.24800000e+01, 9.85263158e-01, 1.43410526e+01, 1.10568421e+01,

#           1.05094737e+01, 2.95578947e+00, 1.19326316e+01, 1.13852632e+01,

#           4.37894737e-01],

#          [1.01894737e+00, 8.67368421e-01, 2.10526316e-01, 5.05263158e-02,

#           9.60000000e-01, 7.57894737e-02, 1.10315789e+00, 8.50526316e-01,

#           8.08421053e-01, 2.27368421e-01, 9.17894737e-01, 8.75789474e-01,

#           3.36842105e-02]])

no_of_rows=len(decision.iloc[0:2,0])
no_of_columns=len(decision.iloc[0,0:2])
dof=(no_of_rows-1)*(no_of_columns-1)
print('Degree of Freedom:',dof)
alpha=0.05
# Output:
#   Degree of Freedom: 1


from scipy.stats import chi2
chi_square=sum([(o-e)**2./e for o,e in zip(observed_values,expected_values)])
chi_square_statistic=chi_square[0]+chi_square[1]
print('chi square statistic:',chi_square_statistic)
# Output:
#   chi square statistic: 266.0978814029887


critical_value=chi2.ppf(q=1-alpha,df=dof)
print('Critical value',critical_value)
# Output:
#   Critical value 3.841458820694124


## Getting P value
p_value=1-chi2.cdf(x=chi_square_statistic,df=dof)
print('P value:',p_value)
print('Significance level:',alpha)
print('Degree of Freedom:',dof)
# Output:
#   P value: 0.0

#   Significance level: 0.05

#   Degree of Freedom: 1


if chi_square_statistic>=critical_value:
    print('Reject Null Hypothesis(H0) there is a relationship between venue and winning a match')
else:
    print('Retain Null Hypothesis(H0) there is no relationship between venue and winning a match')
    
if p_value<=alpha:
    print('Reject Null Hypothesis(H0) there is a relationship between venue and winning a match')
else:
    print('Retain Null Hypothesis(H0) there is no relationship between venue and winning a match')
# Output:
#   Reject Null Hypothesis(H0) there is a relationship between venue and winning a match

#   Reject Null Hypothesis(H0) there is a relationship between venue and winning a match


'''
## Observations:
It is clear that winning a toss and when a team playes in their home venue the chances of winning a match is higher.
'''

'''
# <font color='blue'>Data Analysis </font>
'''

'''
#### <font color='red'> Lets check the top 20 run scorers in IPL </font>
'''

top_run=df2_copy[['batsman_run']].groupby(df2_copy['batter']).size().sort_values(ascending=False).reset_index().rename(columns={0:'Runs Scored'})[:20]
top_run
# Output:
#               batter  Runs Scored

#   0          V Kohli         5266

#   1         S Dhawan         5083

#   2        RG Sharma         4632

#   3        DA Warner         4313

#   4         SK Raina         4177

#   5       RV Uthappa         3927

#   6         MS Dhoni         3802

#   7        G Gambhir         3524

#   8         CH Gayle         3516

#   9   AB de Villiers         3487

#   10       AM Rahane         3465

#   11      KD Karthik         3386

#   12       AT Rayudu         3375

#   13       MK Pandey         3106

#   14        KL Rahul         2933

#   15       SR Watson         2892

#   16    F du Plessis         2676

#   17       SV Samson         2663

#   18      KA Pollard         2447

#   19        PA Patel         2442

'''
####   <font color='green'> Lets check who took the most wickets in IPL (Top 20 records) </font>
'''

top_wicket=df2_copy[df2_copy['isWicketDelivery']==1].groupby('bowler').size().sort_values(ascending=False).reset_index().rename(columns={0:'Wickets'})[:20]
top_wicket
# Output:
#                bowler  Wickets

#   0          DJ Bravo      207

#   1        SL Malinga      188

#   2          A Mishra      175

#   3          R Ashwin      174

#   4         YS Chahal      172

#   5         SP Narine      171

#   6           B Kumar      165

#   7         PP Chawla      165

#   8   Harbhajan Singh      161

#   9         JJ Bumrah      161

#   10         UT Yadav      153

#   11        RA Jadeja      141

#   12    R Vinay Kumar      127

#   13   Sandeep Sharma      123

#   14          A Nehra      121

#   15      Rashid Khan      119

#   16           Z Khan      119

#   17   Mohammed Shami      116

#   18         AR Patel      109

#   19         K Rabada      108

'''
#### Lets Check which bowler has conceeded Most Dot balls
'''

df2_copy[df2_copy['total_run']==0].groupby('bowler').size().sort_values(ascending=False).reset_index().rename(columns={0:'Dot Balls Count'})[:10]
# Output:
#               bowler  Dot Balls Count

#   0          B Kumar             1385

#   1         R Ashwin             1377

#   2        SP Narine             1363

#   3  Harbhajan Singh             1263

#   4         A Mishra             1150

#   5       SL Malinga             1144

#   6        PP Chawla             1140

#   7         UT Yadav             1090

#   8        JJ Bumrah             1084

#   9          P Kumar             1075

'''
## Observation:
B.Kumar has considered the most dot balls which tells us that whichever team he is playing for might become a showstopper to bastman from hitting runs.

Also Note that considering more dot balls creates pressure for the batting team.
'''

# Now let us see most common dismissal types in IPL.
Out=df2_copy[df2_copy['kind']!='Unknown'].groupby('kind').size().reset_index().rename(columns={0:'No.of times'}).sort_values(by='No.of times',ascending=False)
Out
# Output:
#                       kind  No.of times

#   1                 caught         6837

#   0                 bowled         1944

#   8                run out         1007

#   4                    lbw          685

#   9                stumped          325

#   2      caught and bowled          323

#   3             hit wicket           14

#   6           retired hurt           13

#   5  obstructing the field            2

#   7            retired out            1

'''
## Observation:
    From the chart it is clear enough to see that most of the dismissal are from Caught
'''

'''
#### <font color='green'>Lets check which batsman has hitted more 4's and 6's (Top 20)</font>
'''

'''
#### Lets check who has hitted more 4s in IPL (Top 20)
'''

df2_copy[df2_copy['batsman_run']==4].groupby('batter').size().sort_values(ascending=False).reset_index()[:20].rename(columns={0:'No. of 4s hitted'})[:20]
# Output:
#               batter  No. of 4s hitted

#   0         S Dhawan               701

#   1          V Kohli               581

#   2        DA Warner               577

#   3        RG Sharma               519

#   4         SK Raina               506

#   5        G Gambhir               492

#   6       RV Uthappa               481

#   7        AM Rahane               431

#   8       KD Karthik               426

#   9   AB de Villiers               414

#   10        CH Gayle               408

#   11       SR Watson               377

#   12        PA Patel               365

#   13       AT Rayudu               349

#   14        MS Dhoni               346

#   15        V Sehwag               334

#   16        KL Rahul               327

#   17       MK Pandey               318

#   18    F du Plessis               315

#   19    SR Tendulkar               296

'''
#### Lets check who has hitted more 6s in IPL (Top 20)
'''

df2_copy[df2_copy['batsman_run']==6].groupby('batter').size().sort_values(ascending=False).reset_index()[:20].rename(columns={0:'No. of 6s hitted'})[:20]
# Output:
#               batter  No. of 6s hitted

#   0         CH Gayle               359

#   1   AB de Villiers               253

#   2        RG Sharma               241

#   3         MS Dhoni               229

#   4       KA Pollard               224

#   5          V Kohli               219

#   6        DA Warner               216

#   7         SK Raina               204

#   8        SR Watson               190

#   9       RV Uthappa               182

#   10      AD Russell               175

#   11        KL Rahul               164

#   12       AT Rayudu               164

#   13       YK Pathan               161

#   14       SV Samson               158

#   15    Yuvraj Singh               149

#   16        S Dhawan               137

#   17      JC Buttler               135

#   18      KD Karthik               134

#   19     BB McCullum               130

'''
## <font color='orange'>Head to head track between batsman and bowler</font>
#### Below code determines which batsman finds it easy for hitting fours and  sixes against which bowler.
'''

## Lets check number of 4s category
Four_hitting=df2_copy[(df2_copy['batsman_run']==4) & (df2_copy['bowler'])].groupby(['batter','bowler']).size().sort_values(ascending=False).reset_index().rename(columns={0:'No. of 4s hitted'})[:20]
Four_hitting
# Output:
#             batter           bowler  No. of 4s hitted

#   0       S Dhawan         DJ Bravo                20

#   1       S Dhawan   Mohammed Shami                20

#   2       S Dhawan      DS Kulkarni                19

#   3       PA Patel        MM Sharma                18

#   4      SR Watson       SL Malinga                18

#   5      RG Sharma         UT Yadav                18

#   6        V Kohli         DJ Bravo                17

#   7       S Dhawan  Harbhajan Singh                17

#   8      DA Warner        SP Narine                16

#   9      G Gambhir        JA Morkel                16

#   10     G Gambhir           Z Khan                16

#   11     DA Warner          P Kumar                16

#   12       V Kohli        JJ Bumrah                16

#   13       V Kohli         UT Yadav                16

#   14     RG Sharma        SP Narine                15

#   15      V Sehwag         RP Singh                15

#   16      SK Raina        PP Chawla                15

#   17       V Kohli        IK Pathan                15

#   18      PA Patel       MG Johnson                15

#   19  AC Gilchrist          A Nehra                15

## Lets check number of 6s category
Six_hitting=df2_copy[(df2_copy['batsman_run']==6) & (df2_copy['bowler'])].groupby(['batter','bowler']).size().sort_values(ascending=False).reset_index()[:20].rename(columns={0:'No. of 6s hitted'})[:20]
Six_hitting
# Output:
#               batter          bowler  No. of 6s hitted

#   0       KA Pollard        A Mishra                14

#   1       AD Russell  Mohammed Shami                11

#   2       KA Pollard       RA Jadeja                11

#   3         CH Gayle       PP Chawla                11

#   4         SK Raina       PP Chawla                10

#   5        DA Warner       YS Chahal                 9

#   6         CH Gayle         B Kumar                 9

#   7       GJ Maxwell       KV Sharma                 9

#   8        DA Warner       SP Narine                 9

#   9         CH Gayle        AR Patel                 8

#   10  AB de Villiers      SL Malinga                 8

#   11      KA Pollard        DJ Bravo                 8

#   12         V Kohli        A Mishra                 8

#   13       YK Pathan         PP Ojha                 8

#   14        KL Rahul  Mohammed Siraj                 8

#   15       YK Pathan       KV Sharma                 8

#   16  AB de Villiers       JJ Bumrah                 8

#   17      AD Russell        DJ Bravo                 8

#   18         RR Pant  Mohammed Siraj                 8

#   19       JA Morkel        SK Warne                 8

'''
## Observations:
    1.S Dhawan is very consistent on hitting the fours whereas CH Gayle busy with hitting maximum number of Sixes
    2.RG Sharma stays in Top 5 both in hitting  4s and 6s department.
'''

'''
## <font color='blue'>Now its time to check winning consistency of a team</font>
'''

##Lets Plot some intresing Trivia's
df1_copy['WinningTeam'].value_counts()
# Output:
#   Mumbai Indians                 131

#   Chennai Super Kings            121

#   Kolkata Knight Riders          114

#   Royal Challengers Bangalore    109

#   Sunrisers Hyderabad            104

#   Delhi Capitals                 103

#   Punjab Kings                   101

#   Rajasthan Royals                96

#   Rising Pune Supergiant          27

#   Gujarat Titans                  25

#   Lucknow Super Giants             9

#   Kochi Tuskers Kerala             6

#   Unknown                          4

#   Name: WinningTeam, dtype: int64

##Lets Plot some intresing Trivia's
df1_copy['TossWinner'].value_counts()
# Output:
#   Mumbai Indians                 123

#   Sunrisers Hyderabad            117

#   Delhi Capitals                 116

#   Kolkata Knight Riders          114

#   Chennai Super Kings            109

#   Royal Challengers Bangalore    105

#   Rajasthan Royals                99

#   Punjab Kings                    94

#   Rising Pune Supergiant          33

#   Gujarat Titans                  25

#   Kochi Tuskers Kerala             8

#   Lucknow Super Giants             7

#   Name: TossWinner, dtype: int64

'''
# Observations:
<font color=green>Below are the following wins by each team in rank wise  </font> 

    Mumbai Indians                 131

    Chennai Super Kings            121

    Kolkata Knight Riders          114

    Royal Challengers Bangalore    109

    Sunrisers Hyderabad            104

    Delhi Capitals                 103

    Punjab Kings                   101

    Rajasthan Royals                96

    Rising Pune Supergiant          27

    Gujarat Titans                  25

    Lucknow Super Giants             9

    Kochi Tuskers Kerala             6
   
   
       Also we can see that team winning the toss can turn to be a favor to the win the match.
       It is clearly seen that Mumbai Indians, Chennai Super Kings and Kolkata Knight Riders won considerable number of tosses which favours them to be a match winner.
'''

'''
####  Lets check which team has consistently reached Knockout stages (Finals)
'''

df1_copy[df1_copy['MatchNumber']=='Final'].groupby(['Team1']).size().sort_values(ascending=False).reset_index()[:20].rename(columns={0:'Finals Reached'})
# Output:
#                            Team1  Finals Reached

#   0          Chennai Super Kings               5

#   1               Mumbai Indians               3

#   2  Royal Challengers Bangalore               2

#   3        Kolkata Knight Riders               2

#   4          Sunrisers Hyderabad               1

#   5             Rajasthan Royals               1

#   6               Delhi Capitals               1

df1_copy[df1_copy['MatchNumber']=='Final'].groupby(['Team2']).size().sort_values(ascending=False).reset_index()[:20].rename(columns={0:'Finals Reached'})
# Output:
#                            Team2  Finals Reached

#   0          Chennai Super Kings               4

#   1               Mumbai Indians               3

#   2          Sunrisers Hyderabad               2

#   3  Royal Challengers Bangalore               1

#   4       Rising Pune Supergiant               1

#   5             Rajasthan Royals               1

#   6                 Punjab Kings               1

#   7        Kolkata Knight Riders               1

#   8               Gujarat Titans               1

'''
## Now lets check which team have won more IPL trophies
'''

df1_copy[df1_copy['MatchNumber']=='Final'].groupby('WinningTeam').size().sort_values(ascending=False).reset_index()[:20].rename(columns={0:'No.of IPLTrophies Won'})[:20]
# Output:
#                WinningTeam  No.of IPLTrophies Won

#   0         Mumbai Indians                      5

#   1    Chennai Super Kings                      4

#   2    Sunrisers Hyderabad                      2

#   3  Kolkata Knight Riders                      2

#   4       Rajasthan Royals                      1

#   5         Gujarat Titans                      1

'''
## Observation:
    It is clear that with the total number of wins that a team has is propotional to Number of IPL trophies Won.
    Since Mumbai Indians and Chennai Super Kings are the top 2 they have won 5 and 4 times each respectively.
    With this we can conclude that these 2 are the most consistent teams in IPL 
'''

'''
### <font color='red'>Lets deep dive into the bowling Segment </font>
'''

'''
#### Lets Check which all batsman are prone to get 'OUT' against DJ Bravo's bowling who is the leading wicket taker in IPL
'''

DJ=df2_copy[(df2_copy['bowler']=='DJ Bravo')& (df2_copy['player_out']!='Player not known')].groupby(['bowler','player_out','kind']).size().reset_index().rename(columns={0:'Number of times Out','player_out':'Batsman'}).sort_values(by='Number of times Out',ascending=False)[:20]
DJ
# Output:
#          bowler          Batsman    kind  Number of times Out

#   112  DJ Bravo        RG Sharma  caught                    5

#   10   DJ Bravo         AR Patel  caught                    4

#   47   DJ Bravo  Harbhajan Singh  caught                    4

#   120  DJ Bravo         S Dhawan  caught                    3

#   57   DJ Bravo        JH Kallis  caught                    3

#   63   DJ Bravo       KA Pollard  caught                    3

#   128  DJ Bravo         SK Raina  caught                    3

#   96   DJ Bravo         PA Patel  caught                    3

#   109  DJ Bravo      RA Tripathi  caught                    2

#   68   DJ Bravo          KK Nair  caught                    2

#   66   DJ Bravo       KD Karthik     lbw                    2

#   108  DJ Bravo        R Tewatia  caught                    2

#   146  DJ Bravo      Shivam Mavi  caught                    2

#   74   DJ Bravo        KV Sharma  caught                    2

#   100  DJ Bravo        PP Chawla  caught                    2

#   81   DJ Bravo       MG Johnson  caught                    2

#   42   DJ Bravo  Gurkeerat Singh  caught                    2

#   131  DJ Bravo       SL Malinga  caught                    2

#   137  DJ Bravo        SR Watson  bowled                    2

#   30   DJ Bravo         DJ Hooda  caught                    2

'''
## <font color='red'>Lets see the overall bowlers list against which batsman they got 'OUT' (Top 5)</font>
'''

for i in [c for c in df2_copy['bowler'].unique()]:
    print(df2_copy[(df2_copy['bowler']==i)& (df2_copy['player_out']!='Player not known')].groupby(['bowler','player_out','kind']).size().reset_index().rename(columns={0:'Number of times Out','player_out':'Batsman'}).sort_values(by='Number of times Out',ascending=False)[:5])
    print('\n'*5)
# Output:
#               bowler     Batsman    kind  Number of times Out

#   93  Mohammed Shami     V Kohli  caught                    4

#   24  Mohammed Shami   HH Pandya  caught                    3

#   35  Mohammed Shami   KH Pandya  caught                    3

#   81  Mohammed Shami  SO Hetmyer  caught                    3

#   96  Mohammed Shami     WP Saha  caught                    2

#   

#   

#   

#   

#   

#   

#           bowler            Batsman     kind  Number of times Out

#   10  Yash Dayal        YBK Jaiswal   caught                    2

#   0   Yash Dayal         AK Markram   caught                    1

#   1   Yash Dayal         D Padikkal   caught                    1

#   2   Yash Dayal  HE van der Dussen   caught                    1

#   3   Yash Dayal         JC Buttler  run out                    1

#   

#   

#   

#   

#   

#   

#            bowler         Batsman    kind  Number of times Out

#   32  LH Ferguson         PP Shaw  caught                    2

#   35  LH Ferguson         RR Pant  caught                    2

#   0   LH Ferguson  AB de Villiers  caught                    1

#   24  LH Ferguson   KS Williamson  caught                    1

#   25  LH Ferguson  LS Livingstone  caught                    1

#   

#   

#   

#   

#   

#   

#            bowler         Batsman    kind  Number of times Out

#   50  Rashid Khan  LS Livingstone  caught                    3

#   78  Rashid Khan        S Dhawan  caught                    3

#   2   Rashid Khan      AD Russell  caught                    2

#   16  Rashid Khan        CH Gayle     lbw                    2

#   58  Rashid Khan   Mandeep Singh  bowled                    2

#   

#   

#   

#   

#   

#   

#          bowler        Batsman               kind  Number of times Out

#   24  HH Pandya      MK Pandey             caught                    2

#   29  HH Pandya         N Rana             caught                    2

#   20  HH Pandya  KS Williamson             caught                    2

#   39  HH Pandya      SV Samson             caught                    2

#   36  HH Pandya     SO Hetmyer  caught and bowled                    1

#   

#   

#   

#   

#   

#   

#             bowler      Batsman     kind  Number of times Out

#   0  R Sai Kishore     A Badoni  stumped                    1

#   1  R Sai Kishore       MM Ali   caught                    1

#   2  R Sai Kishore  Mohsin Khan   caught                    1

#   3  R Sai Kishore     R Ashwin   caught                    1

#   4  R Sai Kishore    SV Samson   caught                    1

#   

#   

#   

#   

#   

#   

#         bowler       Batsman    kind  Number of times Out

#   50  TA Boult       PP Shaw  caught                    3

#   21  TA Boult  F du Plessis  caught                    3

#   22  TA Boult    GJ Maxwell  caught                    2

#   58  TA Boult    RD Gaikwad  caught                    2

#   14  TA Boult     BA Stokes  caught                    2

#   

#   

#   

#   

#   

#   

#                  bowler    Batsman    kind  Number of times Out

#   37  M Prasidh Krishna  RG Sharma  caught                    2

#   47  M Prasidh Krishna    V Kohli  caught                    2

#   33  M Prasidh Krishna  Q de Kock  caught                    2

#   9   M Prasidh Krishna  DA Warner  caught                    2

#   0   M Prasidh Krishna   AJ Finch  bowled                    1

#   

#   

#   

#   

#   

#   

#          bowler     Batsman    kind  Number of times Out

#   76  YS Chahal      N Rana  caught                    5

#   85  YS Chahal   Q de Kock  caught                    5

#   71  YS Chahal   MK Pandey  caught                    4

#   99  YS Chahal    SK Raina  caught                    4

#   50  YS Chahal  KA Pollard  caught                    4

#   

#   

#   

#   

#   

#   

#        bowler       Batsman    kind  Number of times Out

#   0  OC McCoy  F du Plessis  caught                    1

#   1  OC McCoy      HV Patel  bowled                    1

#   2  OC McCoy     JO Holder  caught                    1

#   3  OC McCoy     MK Lomror  caught                    1

#   4  OC McCoy        MM Ali  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler     Batsman    kind  Number of times Out

#   94   R Ashwin    PA Patel  caught                    4

#   108  R Ashwin  RV Uthappa  caught                    4

#   64   R Ashwin  KA Pollard  caught                    4

#   140  R Ashwin   YK Pathan  caught                    3

#   32   R Ashwin   DA Warner  caught                    3

#   

#   

#   

#   

#   

#   

#               bowler      Batsman    kind  Number of times Out

#   25  Mohammed Siraj    Q de Kock  caught                    2

#   42  Mohammed Siraj      SS Iyer  caught                    2

#   29  Mohammed Siraj  RA Tripathi  caught                    2

#   24  Mohammed Siraj      PP Shaw  caught                    2

#   30  Mohammed Siraj      RR Pant  bowled                    2

#   

#   

#   

#   

#   

#   

#             bowler       Batsman    kind  Number of times Out

#   28  JR Hazlewood       SS Iyer  caught                    2

#   5   JR Hazlewood    EJG Morgan  caught                    2

#   0   JR Hazlewood      A Badoni  caught                    1

#   16  JR Hazlewood     MK Pandey  caught                    1

#   29  JR Hazlewood  Shubman Gill  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler        Batsman    kind  Number of times Out

#   0   GJ Maxwell      AT Rayudu  bowled                    1

#   16  GJ Maxwell  Mandeep Singh  bowled                    1

#   29  GJ Maxwell      SS Tiwary     lbw                    1

#   28  GJ Maxwell       SK Raina  caught                    1

#   27  GJ Maxwell       SK Raina  bowled                    1

#   

#   

#   

#   

#   

#   

#             bowler      Batsman               kind  Number of times Out

#   3  Shahbaz Ahmed  JM Bairstow             caught                    2

#   0  Shahbaz Ahmed  Abdul Samad  caught and bowled                    1

#   1  Shahbaz Ahmed     DJ Hooda             caught                    1

#   2  Shahbaz Ahmed    HH Pandya             caught                    1

#   4  Shahbaz Ahmed     KL Rahul             caught                    1

#   

#   

#   

#   

#   

#   

#         bowler    Batsman     kind  Number of times Out

#   7   HV Patel  AT Rayudu   caught                    5

#   68  HV Patel   S Dhawan   caught                    2

#   77  HV Patel    SS Iyer   caught                    2

#   62  HV Patel  RG Sharma   caught                    2

#   61  HV Patel  RD Chahar  run out                    2

#   

#   

#   

#   

#   

#   

#             bowler         Batsman    kind  Number of times Out

#   0   PWH de Silva      AK Markram  caught                    1

#   14  PWH de Silva       RA Jadeja  caught                    1

#   25  PWH de Silva     Umran Malik     lbw                    1

#   24  PWH de Silva      TG Southee  caught                    1

#   23  PWH de Silva  Shashank Singh  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler      Batsman    kind  Number of times Out

#   0  Mohsin Khan      A Tomar  caught                    1

#   1  Mohsin Khan   AD Russell  caught                    1

#   2  Mohsin Khan  B Indrajith  caught                    1

#   3  Mohsin Khan     D Brevis  caught                    1

#   4  Mohsin Khan    DA Warner  caught                    1

#   

#   

#   

#   

#   

#   

#            bowler      Batsman     kind  Number of times Out

#   0  PVD Chameera   Anuj Rawat   caught                    1

#   1  PVD Chameera   JD Unadkat  run out                    1

#   2  PVD Chameera  JM Bairstow   caught                    1

#   3  PVD Chameera   KA Pollard   caught                    1

#   4  PVD Chameera     M Ashwin  run out                    1

#   

#   

#   

#   

#   

#   

#          bowler         Batsman    kind  Number of times Out

#   0   KH Pandya  AB de Villiers  caught                    3

#   41  KH Pandya         RR Pant  caught                    3

#   44  KH Pandya       SR Watson  caught                    2

#   38  KH Pandya     RA Tripathi  caught                    2

#   14  KH Pandya      GJ Maxwell  caught                    2

#   

#   

#   

#   

#   

#   

#           bowler       Batsman    kind  Number of times Out

#   22  Avesh Khan      N Pooran  caught                    2

#   7   Avesh Khan     DA Miller  caught                    2

#   38  Avesh Khan  Shubman Gill  caught                    2

#   31  Avesh Khan     RG Sharma  caught                    2

#   33  Avesh Khan        S Dube  caught                    2

#   

#   

#   

#   

#   

#   

#             bowler       Batsman    kind  Number of times Out

#   5   Ravi Bishnoi     DA Warner  caught                    3

#   27  Ravi Bishnoi      SA Yadav  caught                    2

#   3   Ravi Bishnoi   Abdul Samad  caught                    2

#   7   Ravi Bishnoi    EJG Morgan  caught                    2

#   8   Ravi Bishnoi  Ishan Kishan  caught                    2

#   

#   

#   

#   

#   

#   

#         bowler          Batsman    kind  Number of times Out

#   0  AS Joseph       AD Russell  caught                    1

#   1  AS Joseph        AT Rayudu  caught                    1

#   2  AS Joseph  Abhishek Sharma  bowled                    1

#   3  AS Joseph          B Kumar  bowled                    1

#   4  AS Joseph        DA Warner  bowled                    1

#   

#   

#   

#   

#   

#   

#              bowler    Batsman               kind  Number of times Out

#   0  LS Livingstone  DA Miller             caught                    1

#   1  LS Livingstone  DA Warner             caught                    1

#   2  LS Livingstone   DJ Bravo  caught and bowled                    1

#   3  LS Livingstone   R Powell             caught                    1

#   4  LS Livingstone    RR Pant            stumped                    1

#   

#   

#   

#   

#   

#   

#               bowler         Batsman     kind  Number of times Out

#   25  Arshdeep Singh         PK Garg   caught                    2

#   4   Arshdeep Singh      D Padikkal   caught                    2

#   28  Arshdeep Singh      RD Gaikwad   caught                    2

#   0   Arshdeep Singh  AB de Villiers  run out                    1

#   32  Arshdeep Singh          S Dube   caught                    1

#   

#   

#   

#   

#   

#   

#         bowler        Batsman    kind  Number of times Out

#   38  K Rabada       KL Rahul  caught                    3

#   71  K Rabada       SA Yadav  caught                    3

#   80  K Rabada        V Kohli  caught                    3

#   40  K Rabada  KS Williamson  caught                    2

#   28  K Rabada      JC Archer  caught                    2

#   

#   

#   

#   

#   

#   

#        bowler            Batsman     kind  Number of times Out

#   0  NT Ellis            B Kumar  run out                    1

#   1  NT Ellis          J Suchith   caught                    1

#   2  NT Ellis           N Pooran   caught                    1

#   3  NT Ellis          SS Tiwary   caught                    1

#   4  NT Ellis  Washington Sundar   caught                    1

#   

#   

#   

#   

#   

#   

#             bowler          Batsman     kind  Number of times Out

#   0  Harpreet Brar   AB de Villiers   caught                    1

#   1  Harpreet Brar       AK Markram  stumped                    1

#   2  Harpreet Brar  Abhishek Sharma   caught                    1

#   3  Harpreet Brar       GJ Maxwell   bowled                    1

#   4  Harpreet Brar       GJ Maxwell   caught                    1

#   

#   

#   

#   

#   

#   

#         bowler    Batsman    kind  Number of times Out

#   8    B Kumar  AM Rahane  caught                    6

#   118  B Kumar  SR Watson  caught                    3

#   135  B Kumar  YK Pathan  caught                    3

#   69   B Kumar  MK Pandey  caught                    3

#   27   B Kumar   DR Smith  caught                    3

#   

#   

#   

#   

#   

#   

#                  bowler     Batsman    kind  Number of times Out

#   26  Washington Sundar     SS Iyer  caught                    2

#   6   Washington Sundar  EJG Morgan  caught                    2

#   20  Washington Sundar   RG Sharma  caught                    2

#   1   Washington Sundar   AT Rayudu  caught                    2

#   0   Washington Sundar   AM Rahane  caught                    1

#   

#   

#   

#   

#   

#   

#                bowler      Batsman    kind  Number of times Out

#   0  Fazalhaq Farooqi  JM Bairstow  bowled                    1

#   1  Fazalhaq Farooqi     S Dhawan  bowled                    1

#   

#   

#   

#   

#   

#   

#          bowler          Batsman     kind  Number of times Out

#   9   J Suchith          NV Ojha   caught                    2

#   3   J Suchith       GJ Maxwell   caught                    2

#   12  J Suchith         SK Raina   caught                    2

#   0   J Suchith  Aman Hakim Khan   bowled                    1

#   15  J Suchith  SS Prabhudessai  stumped                    1

#   

#   

#   

#   

#   

#   

#            bowler       Batsman    kind  Number of times Out

#   7   Umran Malik  Ishan Kishan  caught                    2

#   0   Umran Malik     A Manohar  bowled                    1

#   13  Umran Malik        N Rana  caught                    1

#   22  Umran Malik      VG Arora  bowled                    1

#   21  Umran Malik   Tilak Varma  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler      Batsman     kind  Number of times Out

#   0  R Shepherd     A Badoni  run out                    1

#   1  R Shepherd     DJ Hooda   caught                    1

#   2  R Shepherd    MK Pandey   caught                    1

#   3  R Shepherd  YBK Jaiswal   caught                    1

#   

#   

#   

#   

#   

#   

#        bowler          Batsman    kind  Number of times Out

#   10  DR Sams       RD Gaikwad  caught                    2

#   0   DR Sams        AT Rayudu  caught                    1

#   1   DR Sams  Abhishek Sharma  caught                    1

#   2   DR Sams         CH Gayle  caught                    1

#   3   DR Sams        DA Warner  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler     Batsman    kind  Number of times Out

#   0  HR Shokeen  D Padikkal  caught                    1

#   1  HR Shokeen  JC Buttler  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler     Batsman    kind  Number of times Out

#   22   JJ Bumrah    DJ Bravo  caught                    4

#   32   JJ Bumrah  GJ Maxwell  bowled                    4

#   87   JJ Bumrah     RR Pant  caught                    3

#   104  JJ Bumrah   SPD Smith  caught                    3

#   101  JJ Bumrah  SO Hetmyer  caught                    3

#   

#   

#   

#   

#   

#   

#          bowler       Batsman     kind  Number of times Out

#   9  M Markande    RV Uthappa   caught                    2

#   0  M Markande     AT Rayudu      lbw                    1

#   1  M Markande  Basil Thampi   bowled                    1

#   2  M Markande     DL Chahar  stumped                    1

#   3  M Markande      KL Rahul   caught                    1

#   

#   

#   

#   

#   

#   

#            bowler     Batsman    kind  Number of times Out

#   12  RP Meredith   SPD Smith  caught                    2

#   0   RP Meredith    A Badoni  caught                    1

#   1   RP Meredith   AT Rayudu  caught                    1

#   2   RP Meredith  D Padikkal  bowled                    1

#   3   RP Meredith    DJ Hooda  caught                    1

#   

#   

#   

#   

#   

#   

#               bowler       Batsman               kind  Number of times Out

#   0  Ramandeep Singh    AK Markram             caught                    1

#   1  Ramandeep Singh  M Theekshana             caught                    1

#   2  Ramandeep Singh       PK Garg  caught and bowled                    1

#   3  Ramandeep Singh   RA Tripathi             caught                    1

#   4  Ramandeep Singh       RR Pant             caught                    1

#   

#   

#   

#   

#   

#   

#         bowler          Batsman    kind  Number of times Out

#   27  KK Ahmed          PP Shaw  caught                    3

#   21  KK Ahmed  M Shahrukh Khan  caught                    2

#   4   KK Ahmed        AT Rayudu  caught                    2

#   38  KK Ahmed     Shubman Gill  caught                    2

#   37  KK Ahmed      SW Billings  caught                    2

#   

#   

#   

#   

#   

#   

#         bowler         Batsman    kind  Number of times Out

#   4   A Nortje      D Padikkal  caught                    2

#   25  A Nortje      RD Gaikwad  caught                    2

#   26  A Nortje       RG Sharma  caught                    2

#   14  A Nortje       KM Jadhav     lbw                    2

#   0   A Nortje  AB de Villiers  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler         Batsman    kind  Number of times Out

#   12  SN Thakur      D Padikkal  caught                    3

#   39  SN Thakur        N Pooran  caught                    3

#   0   SN Thakur  AB de Villiers  caught                    2

#   69  SN Thakur         VR Iyer  caught                    2

#   65  SN Thakur    Shubman Gill  caught                    2

#   

#   

#   

#   

#   

#   

#         bowler       Batsman    kind  Number of times Out

#   4   MR Marsh    EJG Morgan  caught                    2

#   0   MR Marsh      A Mishra  caught                    1

#   12  MR Marsh  MC Henriques  caught                    1

#   21  MR Marsh       S Sohal  caught                    1

#   20  MR Marsh        S Dube  caught                    1

#   

#   

#   

#   

#   

#   

#              bowler        Batsman    kind  Number of times Out

#   17  Kuldeep Yadav     GJ Maxwell  caught                    3

#   41  Kuldeep Yadav        RR Pant  caught                    2

#   25  Kuldeep Yadav  KS Williamson  caught                    2

#   38  Kuldeep Yadav      Q de Kock  caught                    2

#   19  Kuldeep Yadav   Ishan Kishan  caught                    2

#   

#   

#   

#   

#   

#   

#         bowler         Batsman    kind  Number of times Out

#   79  AR Patel       SR Watson  bowled                    3

#   8   AR Patel     BB McCullum  caught                    3

#   0   AR Patel  AB de Villiers  caught                    2

#   85  AR Patel       SV Samson  bowled                    2

#   24  AR Patel    F du Plessis  caught                    2

#   

#   

#   

#   

#   

#   

#                bowler          Batsman    kind  Number of times Out

#   0  Mukesh Choudhary         AR Patel  bowled                    1

#   1  Mukesh Choudhary  Abhishek Sharma  caught                    1

#   2  Mukesh Choudhary         D Brevis  caught                    1

#   3  Mukesh Choudhary          DR Sams     lbw                    1

#   4  Mukesh Choudhary     Ishan Kishan  bowled                    1

#   

#   

#   

#   

#   

#   

#               bowler        Batsman    kind  Number of times Out

#   0  Simarjeet Singh     JC Buttler  caught                    1

#   1  Simarjeet Singh      KS Bharat  caught                    1

#   2  Simarjeet Singh  Kuldeep Yadav  caught                    1

#   3  Simarjeet Singh      RG Sharma  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler     Batsman    kind  Number of times Out

#   6  MJ Santner   SP Narine  caught                    2

#   0  MJ Santner  AK Markram  caught                    1

#   1  MJ Santner   AM Rahane  caught                    1

#   2  MJ Santner  D Padikkal  caught                    1

#   3  MJ Santner     E Lewis  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler       Batsman    kind  Number of times Out

#   0  M Pathirana     HH Pandya  caught                    1

#   1  M Pathirana  Shubman Gill     lbw                    1

#   

#   

#   

#   

#   

#   

#       bowler    Batsman    kind  Number of times Out

#   0   MM Ali   AD Hales  caught                    1

#   15  MM Ali   MR Marsh  caught                    1

#   27  MM Ali    SS Iyer  caught                    1

#   26  MM Ali  SM Curran     lbw                    1

#   25  MM Ali   SK Raina  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler      Batsman    kind  Number of times Out

#   0  PH Solanki   SO Hetmyer  caught                    1

#   1  PH Solanki  YBK Jaiswal  caught                    1

#   

#   

#   

#   

#   

#   

#       bowler          Batsman    kind  Number of times Out

#   55  S Kaul        SV Samson  caught                    2

#   35  S Kaul    Mandeep Singh  caught                    2

#   10  S Kaul  C de Grandhomme  caught                    2

#   14  S Kaul     DT Christian  caught                    2

#   0   S Kaul   AB de Villiers  bowled                    1

#   

#   

#   

#   

#   

#   

#         bowler  Batsman     kind  Number of times Out

#   0  MK Lomror  WP Saha  stumped                    1

#   

#   

#   

#   

#   

#   

#          bowler       Batsman    kind  Number of times Out

#   92   UT Yadav     RG Sharma  caught                    5

#   24   UT Yadav     DA Warner  caught                    4

#   122  UT Yadav  Yuvraj Singh  caught                    3

#   15   UT Yadav      CH Gayle  caught                    3

#   100  UT Yadav      SK Raina  caught                    3

#   

#   

#   

#   

#   

#   

#           bowler    Batsman               kind  Number of times Out

#   8   TG Southee   CH Gayle             caught                    2

#   37  TG Southee   S Dhawan             caught                    2

#   12  TG Southee  HH Pandya             caught                    2

#   0   TG Southee   AD Hales             bowled                    1

#   39  TG Southee   SA Yadav  caught and bowled                    1

#   

#   

#   

#   

#   

#   

#           bowler         Batsman    kind  Number of times Out

#   111  SP Narine       RG Sharma  caught                    3

#   2    SP Narine  AB de Villiers  bowled                    3

#   72   SP Narine     Lalit Yadav     lbw                    3

#   47   SP Narine      GJ Maxwell  caught                    3

#   128  SP Narine       SR Watson  caught                    3

#   

#   

#   

#   

#   

#   

#         bowler    Batsman    kind  Number of times Out

#   15  CV Varun   MS Dhoni  bowled                    3

#   30  CV Varun   S Dhawan  caught                    2

#   0   CV Varun   AR Patel  bowled                    1

#   23  CV Varun  Q de Kock  caught                    1

#   24  CV Varun  R Tewatia  bowled                    1

#   

#   

#   

#   

#   

#   

#           bowler      Batsman    kind  Number of times Out

#   53  AD Russell      RR Pant  caught                    3

#   64  AD Russell      SS Iyer  caught                    3

#   46  AD Russell    Q de Kock  caught                    2

#   50  AD Russell  RA Tripathi  caught                    2

#   58  AD Russell     SA Yadav  caught                    2

#   

#   

#   

#   

#   

#   

#      bowler         Batsman     kind  Number of times Out

#   0  N Rana  AB de Villiers   caught                    1

#   1  N Rana       AM Rahane  stumped                    1

#   2  N Rana       DJM Short   bowled                    1

#   3  N Rana        N Pooran   caught                    1

#   4  N Rana        PA Patel      lbw                    1

#   

#   

#   

#   

#   

#   

#          bowler          Batsman    kind  Number of times Out

#   23  JO Holder  NM Coulter-Nile  caught                    2

#   47  JO Holder          V Kohli  caught                    2

#   10  JO Holder     F du Plessis  caught                    2

#   27  JO Holder          R Parag  caught                    2

#   0   JO Holder         AJ Finch  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler     Batsman               kind  Number of times Out

#   0   K Gowtham    AD Hales             caught                    1

#   10  K Gowtham    MR Marsh             caught                    1

#   17  K Gowtham   SP Narine            stumped                    1

#   16  K Gowtham    S Dhawan             bowled                    1

#   15  K Gowtham  RV Uthappa  caught and bowled                    1

#   

#   

#   

#   

#   

#   

#           bowler     Batsman    kind  Number of times Out

#   8   MP Stoinis   KH Pandya  caught                    3

#   15  MP Stoinis   Q de Kock  caught                    3

#   24  MP Stoinis   SV Samson  caught                    2

#   10  MP Stoinis  MA Agarwal  caught                    2

#   12  MP Stoinis      N Rana  caught                    2

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#            bowler      Batsman    kind  Number of times Out

#   18  T Natarajan       N Rana  caught                    2

#   17  T Natarajan     MS Dhoni  caught                    2

#   0   T Natarajan     A Nortje  caught                    1

#   30  T Natarajan       S Dube  caught                    1

#   24  T Natarajan  RA Tripathi  bowled                    1

#   

#   

#   

#   

#   

#   

#               bowler      Batsman    kind  Number of times Out

#   0  Abhishek Sharma     AJ Finch     lbw                    1

#   1  Abhishek Sharma      C Munro  caught                    1

#   2  Abhishek Sharma     DJ Hooda     lbw                    1

#   3  Abhishek Sharma  JDS Neesham  caught                    1

#   4  Abhishek Sharma   KA Pollard  caught                    1

#   

#   

#   

#   

#   

#   

#         bowler         Batsman     kind  Number of times Out

#   18  R Dhawan        S Dhawan   caught                    2

#   10  R Dhawan       IK Pathan   caught                    2

#   0   R Dhawan  AB de Villiers   caught                    1

#   13  R Dhawan       MK Tiwary  run out                    1

#   22  R Dhawan       YK Pathan      lbw                    1

#   

#   

#   

#   

#   

#   

#          bowler          Batsman    kind  Number of times Out

#   15  RD Chahar       GJ Maxwell  caught                    2

#   3   RD Chahar  Abhishek Sharma  caught                    2

#   47  RD Chahar     Shubman Gill  caught                    2

#   32  RD Chahar         MS Dhoni  caught                    2

#   35  RD Chahar          PP Shaw  caught                    2

#   

#   

#   

#   

#   

#   

#           bowler     Batsman    kind  Number of times Out

#   0  Lalit Yadav     E Lewis  caught                    1

#   1  Lalit Yadav  EJG Morgan  caught                    1

#   2  Lalit Yadav   KH Pandya  bowled                    1

#   3  Lalit Yadav      N Rana  caught                    1

#   4  Lalit Yadav   RD Chahar  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler      Batsman               kind  Number of times Out

#   0  A Badoni     SA Yadav             caught                    1

#   1  A Badoni  YBK Jaiswal  caught and bowled                    1

#   

#   

#   

#   

#   

#   

#        bowler         Batsman     kind  Number of times Out

#   0  M Jansen  AB de Villiers  run out                    1

#   1  M Jansen        AJ Finch   caught                    1

#   2  M Jansen      Anuj Rawat   caught                    1

#   3  M Jansen       DA Miller   caught                    1

#   4  M Jansen    F du Plessis   bowled                    1

#   

#   

#   

#   

#   

#   

#           bowler          Batsman    kind  Number of times Out

#   0  K Kartikeya        AM Rahane  bowled                    1

#   1  K Kartikeya         DJ Bravo  caught                    1

#   2  K Kartikeya        SV Samson  caught                    1

#   3  K Kartikeya  Simarjeet Singh     lbw                    1

#   4  K Kartikeya          VR Iyer  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler          Batsman    kind  Number of times Out

#   112  DJ Bravo        RG Sharma  caught                    5

#   10   DJ Bravo         AR Patel  caught                    4

#   47   DJ Bravo  Harbhajan Singh  caught                    4

#   120  DJ Bravo         S Dhawan  caught                    3

#   57   DJ Bravo        JH Kallis  caught                    3

#   

#   

#   

#   

#   

#   

#            bowler        Batsman    kind  Number of times Out

#   9  M Theekshana  Shahbaz Ahmed  bowled                    2

#   0  M Theekshana      A Manohar  caught                    1

#   1  M Theekshana     Anuj Rawat     lbw                    1

#   2  M Theekshana      DA Warner     lbw                    1

#   3  M Theekshana   F du Plessis  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler        Batsman    kind  Number of times Out

#   2  C Sakariya      AT Rayudu  caught                    2

#   6  C Sakariya       KL Rahul  caught                    2

#   0  C Sakariya       AJ Finch  bowled                    1

#   1  C Sakariya       AR Patel  caught                    1

#   3  C Sakariya  JA Richardson  caught                    1

#   

#   

#   

#   

#   

#   

#      bowler       Batsman    kind  Number of times Out

#   0  KR Sen      AJ Finch  bowled                    1

#   1  KR Sen      DJ Hooda  bowled                    1

#   2  KR Sen  F du Plessis  caught                    1

#   3  KR Sen    GJ Maxwell  caught                    1

#   4  KR Sen      HV Patel  caught                    1

#   

#   

#   

#   

#   

#   

#         bowler         Batsman    kind  Number of times Out

#   27  M Ashwin         WP Saha  caught                    2

#   23  M Ashwin         SS Iyer  caught                    2

#   19  M Ashwin        SA Yadav     lbw                    2

#   17  M Ashwin      RV Uthappa  caught                    2

#   0   M Ashwin  AB de Villiers  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler         Batsman    kind  Number of times Out

#   65  KA Pollard         V Kohli  caught                    3

#   37  KA Pollard       MK Pandey  caught                    2

#   6   KA Pollard  AB de Villiers  caught                    2

#   53  KA Pollard     S Badrinath  caught                    2

#   60  KA Pollard       SR Watson  caught                    2

#   

#   

#   

#   

#   

#   

#           bowler       Batsman    kind  Number of times Out

#   11  PJ Cummins  Ishan Kishan  caught                    4

#   4   PJ Cummins     BA Stokes  caught                    2

#   35  PJ Cummins      SA Yadav  caught                    2

#   31  PJ Cummins    RV Uthappa  caught                    2

#   32  PJ Cummins  Ravi Bishnoi  caught                    1

#   

#   

#   

#   

#   

#   

#       bowler     Batsman    kind  Number of times Out

#   0  VR Iyer    AR Patel  caught                    1

#   1  VR Iyer    KL Rahul  caught                    1

#   2  VR Iyer  SO Hetmyer  caught                    1

#   

#   

#   

#   

#   

#   

#            bowler       Batsman    kind  Number of times Out

#   0  Kartik Tyagi    AD Russell  caught                    1

#   1  Kartik Tyagi      DJ Hooda  caught                    1

#   2  Kartik Tyagi    GJ Maxwell  caught                    1

#   3  Kartik Tyagi  Ishan Kishan  caught                    1

#   4  Kartik Tyagi   JM Bairstow  caught                    1

#   

#   

#   

#   

#   

#   

#            bowler       Batsman    kind  Number of times Out

#   24  Shivam Mavi     SV Samson  caught                    5

#   21  Shivam Mavi     RG Sharma  caught                    2

#   7   Shivam Mavi  F du Plessis  caught                    2

#   0   Shivam Mavi   Abdul Samad  caught                    1

#   14  Shivam Mavi       KK Nair  caught                    1

#   

#   

#   

#   

#   

#   

#      bowler    Batsman    kind  Number of times Out

#   0  AS Roy  DR Shorey  caught                    1

#   1  AS Roy    KK Nair  caught                    1

#   

#   

#   

#   

#   

#   

#            bowler   Batsman    kind  Number of times Out

#   0  Harshit Rana  MR Marsh  caught                    1

#   

#   

#   

#   

#   

#   

#               bowler         Batsman    kind  Number of times Out

#   99  Sandeep Sharma         V Kohli  caught                    4

#   17  Sandeep Sharma        CH Gayle  caught                    3

#   76  Sandeep Sharma       RG Sharma  caught                    3

#   69  Sandeep Sharma        PA Patel  caught                    3

#   0   Sandeep Sharma  AB de Villiers  caught                    2

#   

#   

#   

#   

#   

#   

#           bowler     Batsman    kind  Number of times Out

#   28  PJ Sangwan    SK Raina  caught                    2

#   37  PJ Sangwan    TL Suman  caught                    2

#   23  PJ Sangwan  RV Uthappa  caught                    2

#   17  PJ Sangwan  MV Boucher  caught                    2

#   16  PJ Sangwan   ML Hayden  caught                    2

#   

#   

#   

#   

#   

#   

#          bowler       Batsman     kind  Number of times Out

#   29  R Tewatia  Shubman Gill   caught                    2

#   0   R Tewatia     AT Rayudu   caught                    1

#   26  R Tewatia     SP Narine   caught                    1

#   20  R Tewatia     RG Sharma   caught                    1

#   21  R Tewatia       RR Pant  run out                    1

#   

#   

#   

#   

#   

#   

#         bowler   Batsman               kind  Number of times Out

#   0  SA Abbott  MR Marsh  caught and bowled                    1

#   

#   

#   

#   

#   

#   

#        bowler         Batsman               kind  Number of times Out

#   0   S Gopal  AB de Villiers             caught                    2

#   46  S Gopal         V Kohli             caught                    2

#   35  S Gopal   SE Rutherford             caught                    1

#   26  S Gopal         PP Shaw  caught and bowled                    1

#   27  S Gopal       Q de Kock             caught                    1

#   

#   

#   

#   

#   

#   

#          bowler Batsman    kind  Number of times Out

#   0  AK Markram  MM Ali  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler      Batsman    kind  Number of times Out

#   28   RA Jadeja   GJ Maxwell  bowled                    5

#   96   RA Jadeja    SPD Smith  caught                    3

#   100  RA Jadeja    SR Watson  caught                    3

#   84   RA Jadeja   RV Uthappa  caught                    2

#   45   RA Jadeja  LMP Simmons  caught                    2

#   

#   

#   

#   

#   

#   

#           bowler        Batsman     kind  Number of times Out

#   0  D Pretorius       HV Patel  run out                    1

#   1  D Pretorius      JM Sharma   caught                    1

#   2  D Pretorius       KL Rahul   caught                    1

#   3  D Pretorius  KS Williamson      lbw                    1

#   4  D Pretorius      Q de Kock   caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#                  bowler    Batsman    kind  Number of times Out

#   31  Mustafizur Rahman  RA Jadeja  caught                    2

#   44  Mustafizur Rahman  SR Watson  caught                    2

#   0   Mustafizur Rahman  A Manohar  caught                    1

#   39  Mustafizur Rahman   SA Yadav  caught                    1

#   29  Mustafizur Rahman  R Tewatia  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#           bowler       Batsman    kind  Number of times Out

#   55  JD Unadkat      PA Patel  caught                    3

#   64  JD Unadkat    RV Uthappa  caught                    3

#   85  JD Unadkat  Yuvraj Singh  caught                    2

#   9   JD Unadkat   BB McCullum  caught                    2

#   48  JD Unadkat     MK Pandey  caught                    2

#   

#   

#   

#   

#   

#   

#       bowler          Batsman     kind  Number of times Out

#   0  R Parag         CH Gayle   caught                    1

#   1  R Parag  Gurkeerat Singh   caught                    1

#   2  R Parag          RR Pant  run out                    1

#   3  R Parag          SS Iyer   caught                    1

#   4  R Parag     Shubman Gill   caught                    1

#   

#   

#   

#   

#   

#   

#        bowler       Batsman     kind  Number of times Out

#   0  VG Arora  Ishan Kishan   caught                    1

#   1  VG Arora    KA Pollard  run out                    1

#   2  VG Arora        MM Ali   bowled                    1

#   3  VG Arora    RV Uthappa   caught                    1

#   

#   

#   

#   

#   

#   

#          bowler      Batsman     kind  Number of times Out

#   24  CJ Jordan   RV Uthappa   caught                    2

#   18  CJ Jordan      P Kumar   bowled                    2

#   0   CJ Jordan    AT Rayudu   caught                    1

#   16  CJ Jordan  NLTC Perera   caught                    1

#   29  CJ Jordan   UT Khawaja  run out                    1

#   

#   

#   

#   

#   

#   

#        bowler     Batsman     kind  Number of times Out

#   0  OF Smith   AT Rayudu   caught                    1

#   1  OF Smith    D Brevis   caught                    1

#   2  OF Smith   HH Pandya  run out                    1

#   3  OF Smith  JD Unadkat   caught                    1

#   4  OF Smith   JJ Bumrah   caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#        bowler     Batsman    kind  Number of times Out

#   0  TS Mills  AD Russell  caught                    1

#   1  TS Mills   AM Rahane  caught                    1

#   2  TS Mills     AP Tare  bowled                    1

#   3  TS Mills   CR Woakes  caught                    1

#   4  TS Mills  D Padikkal  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler    Batsman    kind  Number of times Out

#   0  FA Allen  DA Warner  caught                    1

#   1  FA Allen  Q de Kock     lbw                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#           bowler          Batsman    kind  Number of times Out

#   0  JDS Neesham      Abdul Samad  caught                    1

#   1  JDS Neesham  Abhishek Sharma  caught                    1

#   2  JDS Neesham          PP Shaw  caught                    1

#   3  JDS Neesham        R Tewatia  caught                    1

#   4  JDS Neesham           S Dube  bowled                    1

#   

#   

#   

#   

#   

#   

#         bowler          Batsman     kind  Number of times Out

#   2  V Shankar     F du Plessis   caught                    2

#   0  V Shankar  C de Grandhomme  run out                    1

#   1  V Shankar       D Padikkal   bowled                    1

#   3  V Shankar       JC Buttler   caught                    1

#   4  V Shankar      Lalit Yadav  run out                    1

#   

#   

#   

#   

#   

#   

#             bowler     Batsman               kind  Number of times Out

#   0   Basil Thampi  AS Rajpoot             bowled                    1

#   1   Basil Thampi    CH Gayle  caught and bowled                    1

#   24  Basil Thampi     V Kohli             caught                    1

#   23  Basil Thampi     SS Iyer             bowled                    1

#   22  Basil Thampi   SN Thakur             caught                    1

#   

#   

#   

#   

#   

#   

#          bowler         Batsman     kind  Number of times Out

#   0  Akash Deep    Ishan Kishan   caught                    1

#   1  Akash Deep  LS Livingstone   caught                    1

#   2  Akash Deep          N Rana   caught                    1

#   3  Akash Deep     Tilak Varma  run out                    1

#   4  Akash Deep        UT Yadav   bowled                    1

#   

#   

#   

#   

#   

#   

#           bowler    Batsman    kind  Number of times Out

#   0  DG Nalkande  JM Sharma  caught                    1

#   1  DG Nalkande   OF Smith  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#         bowler          Batsman    kind  Number of times Out

#   0  DJ Willey  C de Grandhomme  caught                    1

#   1  DJ Willey        K Gowtham  caught                    1

#   2  DJ Willey      YBK Jaiswal  bowled                    1

#   

#   

#   

#   

#   

#   

#        bowler  Batsman kind  Number of times Out

#   0  D Brevis  V Kohli  lbw                    1

#   

#   

#   

#   

#   

#   

#       bowler      Batsman     kind  Number of times Out

#   1   AJ Tye   AD Russell   caught                    2

#   21  AJ Tye   KA Pollard   caught                    2

#   30  AJ Tye    RA Jadeja   caught                    2

#   31  AJ Tye  RA Tripathi   caught                    2

#   32  AJ Tye   RD Gaikwad  run out                    1

#   

#   

#   

#   

#   

#   

#              bowler          Batsman    kind  Number of times Out

#   16  Navdeep Saini        SP Narine  caught                    2

#   9   Navdeep Saini       KA Pollard  caught                    2

#   0   Navdeep Saini  Abhishek Sharma  caught                    1

#   11  Navdeep Saini    Mohammad Nabi  caught                    1

#   19  Navdeep Saini         T Banton  bowled                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#           bowler     Batsman    kind  Number of times Out

#   0  Abdul Samad  AK Markram  caught                    1

#   1  Abdul Samad   KM Jadhav  caught                    1

#   

#   

#   

#   

#   

#   

#         bowler        Batsman    kind  Number of times Out

#   41  VR Aaron      YK Pathan  caught                    2

#   26  VR Aaron  Mandeep Singh  caught                    2

#   28  VR Aaron        NV Ojha  caught                    2

#   0   VR Aaron       A Badoni  caught                    1

#   32  VR Aaron       S Dhawan  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler     Batsman    kind  Number of times Out

#   0  DJ Hooda     C Munro  caught                    1

#   1  DJ Hooda    CH Gayle  caught                    1

#   2  DJ Hooda   DA Miller  caught                    1

#   3  DJ Hooda   G Gambhir  caught                    1

#   4  DJ Hooda  KD Karthik  caught                    1

#   

#   

#   

#   

#   

#   

#            bowler    Batsman    kind  Number of times Out

#   0  TU Deshpande  BA Stokes  caught                    1

#   1  TU Deshpande  MK Pandey  caught                    1

#   2  TU Deshpande    S Gopal  caught                    1

#   3  TU Deshpande  SM Curran  caught                    1

#   

#   

#   

#   

#   

#   

#      bowler          Batsman     kind  Number of times Out

#   0  S Dube  Abhishek Sharma  run out                    1

#   1  S Dube       GJ Maxwell   caught                    1

#   2  S Dube         MR Marsh   caught                    1

#   3  S Dube         N Pooran   caught                    1

#   4  S Dube          PK Garg   bowled                    1

#   

#   

#   

#   

#   

#   

#                bowler         Batsman     kind  Number of times Out

#   27  NM Coulter-Nile       KV Sharma   caught                    2

#   4   NM Coulter-Nile        AR Patel   caught                    2

#   32  NM Coulter-Nile       RG Sharma   caught                    2

#   33  NM Coulter-Nile         RR Pant   caught                    2

#   0   NM Coulter-Nile  A Ashish Reddy  run out                    1

#   

#   

#   

#   

#   

#   

#            bowler     Batsman    kind  Number of times Out

#   0  KL Nagarkoti   AT Rayudu  caught                    1

#   1  KL Nagarkoti   JC Archer  caught                    1

#   2  KL Nagarkoti     PP Shaw  caught                    1

#   3  KL Nagarkoti     R Parag  caught                    1

#   4  KL Nagarkoti  RV Uthappa  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler       Batsman          kind  Number of times Out

#   0  AF Milne     AT Rayudu  retired hurt                    1

#   1  AF Milne     BA Stokes        bowled                    1

#   2  AF Milne  Ishan Kishan        caught                    1

#   3  AF Milne  MC Henriques        caught                    1

#   4  AF Milne     MK Tiwary       run out                    1

#   

#   

#   

#   

#   

#   

#                bowler    Batsman    kind  Number of times Out

#   51  Shakib Al Hasan   SK Raina  caught                    2

#   3   Shakib Al Hasan  AM Rahane  caught                    2

#   53  Shakib Al Hasan  SP Narine  caught                    2

#   8   Shakib Al Hasan  AT Rayudu  caught                    2

#   44  Shakib Al Hasan  RG Sharma  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler    Batsman    kind  Number of times Out

#   28  DL Chahar    PP Shaw  caught                    4

#   42  DL Chahar  SV Samson  caught                    3

#   26  DL Chahar     N Rana  caught                    2

#   16  DL Chahar   DJ Hooda  caught                    2

#   31  DL Chahar  Q de Kock  caught                    2

#   

#   

#   

#   

#   

#   

#          bowler          Batsman    kind  Number of times Out

#   0  GHS Garton       AK Markram  caught                    1

#   1  GHS Garton  Abhishek Sharma  caught                    1

#   2  GHS Garton          E Lewis  caught                    1

#   

#   

#   

#   

#   

#   

#             bowler       Batsman    kind  Number of times Out

#   0   DT Christian  AC Gilchrist  caught                    1

#   1   DT Christian      AR Patel  caught                    1

#   22  DT Christian       NV Ojha     lbw                    1

#   23  DT Christian       PK Garg  caught                    1

#   24  DT Christian      R Dravid  bowled                    1

#   

#   

#   

#   

#   

#   

#         bowler     Batsman    kind  Number of times Out

#   0  TK Curran   AT Rayudu  caught                    1

#   1  TK Curran   HH Pandya  caught                    1

#   2  TK Curran   K Gowtham  caught                    1

#   3  TK Curran   KM Jadhav  caught                    1

#   4  TK Curran  MA Agarwal  caught                    1

#   

#   

#   

#   

#   

#   

#       bowler     Batsman               kind  Number of times Out

#   0  J Yadav    AR Patel             caught                    1

#   1  J Yadav   DA Warner             bowled                    1

#   2  J Yadav  EJG Morgan             caught                    1

#   3  J Yadav     PP Shaw  caught and bowled                    1

#   4  J Yadav     RR Pant             caught                    1

#   

#   

#   

#   

#   

#   

#        bowler    Batsman    kind  Number of times Out

#   0  IC Porel  SV Samson  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#          bowler     Batsman    kind  Number of times Out

#   0   CH Morris  AD Russell  caught                    4

#   38  CH Morris  KD Karthik  caught                    3

#   75  CH Morris    SK Raina  caught                    3

#   10  CH Morris    CH Gayle  caught                    2

#   59  CH Morris  PJ Cummins  caught                    2

#   

#   

#   

#   

#   

#   

#           bowler         Batsman    kind  Number of times Out

#   0  KA Jamieson       DA Warner  caught                    1

#   1  KA Jamieson         M Vohra  caught                    1

#   2  KA Jamieson        N Pooran  caught                    1

#   3  KA Jamieson  P Simran Singh  caught                    1

#   4  KA Jamieson      PJ Cummins  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler Batsman    kind  Number of times Out

#   0  GD Phillips  N Rana  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#          bowler     Batsman    kind  Number of times Out

#   30  SM Curran     V Kohli  caught                    2

#   29  SM Curran   SV Samson  caught                    2

#   26  SM Curran   SPD Smith  caught                    2

#   0   SM Curran  AD Russell  bowled                    1

#   1   SM Curran    AJ Finch  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler      Batsman               kind  Number of times Out

#   0  T Shamsi    AM Rahane            stumped                    1

#   1  T Shamsi  BB McCullum  caught and bowled                    1

#   2  T Shamsi    DA Warner             caught                    1

#   

#   

#   

#   

#   

#   

#         bowler          Batsman    kind  Number of times Out

#   0  RG Sharma         AM Nayar  bowled                    1

#   1  RG Sharma          AS Raut  bowled                    1

#   2  RG Sharma  Harbhajan Singh  bowled                    1

#   3  RG Sharma        JP Duminy  caught                    1

#   4  RG Sharma    KC Sangakkara  caught                    1

#   

#   

#   

#   

#   

#   

#             bowler    Batsman    kind  Number of times Out

#   16  MC Henriques  GJ Bailey  caught                    3

#   40  MC Henriques  YK Pathan  caught                    2

#   39  MC Henriques    WP Saha  caught                    2

#   0   MC Henriques  A Symonds  caught                    1

#   30  MC Henriques   R Dravid  bowled                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#                 bowler   Batsman    kind  Number of times Out

#   0  S Sandeep Warrier  CH Gayle  caught                    1

#   1  S Sandeep Warrier  KL Rahul  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#       bowler      Batsman    kind  Number of times Out

#   0  KM Asif      C Munro  caught                    1

#   1  KM Asif      PP Shaw  caught                    1

#   2  KM Asif   RV Uthappa  caught                    1

#   3  KM Asif  YBK Jaiswal  caught                    1

#   

#   

#   

#   

#   

#   

#             bowler         Batsman    kind  Number of times Out

#   0  Mohammad Nabi  AB de Villiers  bowled                    1

#   1  Mohammad Nabi         E Lewis  caught                    1

#   2  Mohammad Nabi      EJG Morgan  bowled                    1

#   3  Mohammad Nabi      EJG Morgan  caught                    1

#   4  Mohammad Nabi    Ishan Kishan  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler      Batsman    kind  Number of times Out

#   12   PP Chawla    AT Rayudu  caught                    4

#   131  PP Chawla      V Kohli  bowled                    3

#   114  PP Chawla     SK Raina  caught                    3

#   14   PP Chawla  BB McCullum  caught                    3

#   89   PP Chawla      NV Ojha  caught                    2

#   

#   

#   

#   

#   

#   

#         bowler          Batsman    kind  Number of times Out

#   59  I Sharma        SR Watson  caught                    2

#   66  I Sharma  Y Venugopal Rao  caught                    2

#   3   I Sharma        AM Rahane  caught                    2

#   47  I Sharma        RG Sharma  caught                    2

#   63  I Sharma       TM Dilshan  caught                    2

#   

#   

#   

#   

#   

#   

#            bowler     Batsman    kind  Number of times Out

#   47  DS Kulkarni   RG Sharma  caught                    4

#   11  DS Kulkarni   DA Miller  caught                    3

#   7   DS Kulkarni    CH Gayle  bowled                    3

#   48  DS Kulkarni  RV Uthappa  caught                    3

#   28  DS Kulkarni    KL Rahul  caught                    3

#   

#   

#   

#   

#   

#   

#        bowler      Batsman    kind  Number of times Out

#   20  L Ngidi      RR Pant  caught                    2

#   14  L Ngidi     KL Rahul  bowled                    2

#   0   L Ngidi       AJ Tye  caught                    1

#   1   L Ngidi  BB McCullum  caught                    1

#   24  L Ngidi    SV Samson  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler     Batsman    kind  Number of times Out

#   37   A Mishra  GJ Maxwell  caught                    5

#   100  A Mishra   RG Sharma  caught                    5

#   2    A Mishra   A Symonds  caught                    3

#   120  A Mishra   SR Watson  caught                    3

#   113  A Mishra    SK Raina  caught                    3

#   

#   

#   

#   

#   

#   

#            bowler        Batsman    kind  Number of times Out

#   28  Imran Tahir   Ishan Kishan  caught                    4

#   33  Imran Tahir     KD Karthik  caught                    2

#   3   Imran Tahir     AD Russell  caught                    2

#   48  Imran Tahir  Navdeep Saini  caught                    2

#   9   Imran Tahir       AR Patel  caught                    2

#   

#   

#   

#   

#   

#   

#              bowler         Batsman    kind  Number of times Out

#   0   KW Richardson  AB de Villiers  bowled                    1

#   11  KW Richardson         NV Ojha  caught                    1

#   19  KW Richardson    Yuvraj Singh  caught                    1

#   18  KW Richardson         V Kohli  caught                    1

#   17  KW Richardson          S Dube  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler      Batsman    kind  Number of times Out

#   5   CR Woakes     CH Gayle  caught                    2

#   8   CR Woakes   JC Buttler  caught                    2

#   9   CR Woakes   KA Pollard  caught                    2

#   0   CR Woakes   AD Russell  caught                    1

#   16  CR Woakes  RA Tripathi  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler     Batsman    kind  Number of times Out

#   0  LI Meriwala  MA Agarwal  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#             bowler     Batsman    kind  Number of times Out

#   0  JA Richardson  JC Buttler  bowled                    1

#   1  JA Richardson     RR Pant  caught                    1

#   2  JA Richardson    S Dhawan  bowled                    1

#   

#   

#   

#   

#   

#   

#                 bowler     Batsman     kind  Number of times Out

#   60   Harbhajan Singh     KK Nair   caught                    4

#   16   Harbhajan Singh    CH Gayle   caught                    3

#   28   Harbhajan Singh    DR Smith   caught                    3

#   119  Harbhajan Singh    SK Raina  stumped                    2

#   106  Harbhajan Singh  RV Uthappa   caught                    2

#   

#   

#   

#   

#   

#   

#                 bowler          Batsman    kind  Number of times Out

#   0   Mujeeb Ur Rahman        BA Stokes  caught                    2

#   10  Mujeeb Ur Rahman        Q de Kock  caught                    1

#   17  Mujeeb Ur Rahman  Shakib Al Hasan  caught                    1

#   16  Mujeeb Ur Rahman        SV Samson  caught                    1

#   15  Mujeeb Ur Rahman          SS Iyer  caught                    1

#   

#   

#   

#   

#   

#   

#         bowler      Batsman               kind  Number of times Out

#   7   S Nadeem    AT Rayudu             caught                    3

#   28  S Nadeem    MK Pandey             bowled                    2

#   3   S Nadeem     AJ Finch             caught                    2

#   5   S Nadeem    AM Rahane             caught                    2

#   0   S Nadeem  AB McDonald  caught and bowled                    1

#   

#   

#   

#   

#   

#   

#          bowler    Batsman    kind  Number of times Out

#   4   BA Stokes  DA Warner  caught                    2

#   17  BA Stokes   N Pooran  caught                    2

#   0   BA Stokes   AF Milne  bowled                    1

#   15  BA Stokes  MK Tiwary  caught                    1

#   27  BA Stokes    V Kohli  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#        bowler         Batsman     kind  Number of times Out

#   15  A Zampa         RR Pant   caught                    2

#   0   A Zampa  AB de Villiers   caught                    1

#   1   A Zampa         B Kumar   caught                    1

#   18  A Zampa         WP Saha   caught                    1

#   17  A Zampa       SV Samson  stumped                    1

#   

#   

#   

#   

#   

#   

#            bowler     Batsman    kind  Number of times Out

#   0  JL Pattinson  AS Rajpoot  caught                    1

#   1  JL Pattinson   DA Warner  caught                    1

#   2  JL Pattinson  JC Buttler  caught                    1

#   3  JL Pattinson     M Vijay     lbw                    1

#   4  JL Pattinson   MK Pandey  caught                    1

#   

#   

#   

#   

#   

#   

#       bowler        Batsman    kind  Number of times Out

#   0  I Udana     AD Russell  caught                    1

#   1  I Udana      AT Rayudu  bowled                    1

#   2  I Udana   Ishan Kishan  caught                    1

#   3  I Udana  KS Williamson  caught                    1

#   4  I Udana        R Parag  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#          bowler       Batsman    kind  Number of times Out

#   25  JC Archer        N Rana  caught                    2

#   4   JC Archer      CH Gayle  caught                    2

#   17  JC Archer     KH Pandya  caught                    2

#   9   JC Archer  F du Plessis  caught                    2

#   31  JC Archer     RG Sharma  caught                    2

#   

#   

#   

#   

#   

#   

#           bowler     Batsman    kind  Number of times Out

#   0  SS Cottrell    AR Patel  caught                    1

#   1  SS Cottrell  D Padikkal  caught                    1

#   2  SS Cottrell  JC Buttler  caught                    1

#   3  SS Cottrell   Q de Kock  bowled                    1

#   4  SS Cottrell    R Ashwin  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler      Batsman    kind  Number of times Out

#   7   AS Rajpoot    K Gowtham  caught                    2

#   0   AS Rajpoot   AD Russell  caught                    1

#   12  AS Rajpoot    MK Pandey  bowled                    1

#   21  AS Rajpoot  SW Billings  bowled                    1

#   20  AS Rajpoot    SS Tiwary  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#          bowler          Batsman    kind  Number of times Out

#   41  KV Sharma       RV Uthappa  caught                    3

#   49  KV Sharma  Shakib Al Hasan  caught                    2

#   14  KV Sharma        G Gambhir  caught                    2

#   20  KV Sharma       KD Karthik  caught                    2

#   10  KV Sharma         DJ Hooda  caught                    2

#   

#   

#   

#   

#   

#   

#         bowler     Batsman    kind  Number of times Out

#   95  DW Steyn      Z Khan  bowled                    2

#   37  DW Steyn  KD Karthik  caught                    2

#   50  DW Steyn    MS Dhoni  caught                    2

#   31  DW Steyn   JH Kallis  caught                    2

#   67  DW Steyn    RP Singh  bowled                    2

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#         bowler      Batsman    kind  Number of times Out

#   0   CH Gayle    A Symonds  caught                    1

#   10  CH Gayle    M Klinger  bowled                    1

#   17  CH Gayle     SK Raina  bowled                    1

#   16  CH Gayle    PP Chawla  bowled                    1

#   15  CH Gayle  PC Valthaty  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler      Batsman    kind  Number of times Out

#   7   MM Sharma    AT Rayudu  caught                    6

#   57  MM Sharma     S Dhawan  caught                    3

#   9   MM Sharma  BB McCullum  bowled                    2

#   32  MM Sharma   KA Pollard  caught                    2

#   34  MM Sharma     KL Rahul  bowled                    2

#   

#   

#   

#   

#   

#   

#               bowler    Batsman    kind  Number of times Out

#   53  MJ McClenaghan  SV Samson  caught                    4

#   55  MJ McClenaghan    V Kohli  caught                    4

#   52  MJ McClenaghan    SS Iyer  caught                    2

#   47  MJ McClenaghan   SE Marsh  caught                    2

#   23  MJ McClenaghan    KK Nair  caught                    2

#   

#   

#   

#   

#   

#   

#            bowler       Batsman    kind  Number of times Out

#   157  SL Malinga  Yuvraj Singh  caught                    3

#   127  SL Malinga      S Dhawan  bowled                    3

#   70   SL Malinga    KD Karthik  caught                    3

#   106  SL Malinga       P Kumar  bowled                    3

#   32   SL Malinga     DA Miller  caught                    3

#   

#   

#   

#   

#   

#   

#        bowler        Batsman     kind  Number of times Out

#   0  KMA Paul  CR Brathwaite   caught                    1

#   1  KMA Paul       DJ Hooda  run out                    1

#   2  KMA Paul    JM Bairstow   caught                    1

#   3  KMA Paul     KA Pollard   caught                    1

#   4  KMA Paul  KS Williamson   caught                    1

#   

#   

#   

#   

#   

#   

#             bowler         Batsman    kind  Number of times Out

#   0  SE Rutherford  AB de Villiers  caught                    1

#   

#   

#   

#   

#   

#   

#         bowler        Batsman    kind  Number of times Out

#   0  HF Gurney      HH Pandya  caught                    1

#   1  HF Gurney     JC Buttler  caught                    1

#   2  HF Gurney  Mandeep Singh  caught                    1

#   3  HF Gurney    RA Tripathi  caught                    1

#   4  HF Gurney      RG Sharma     lbw                    1

#   

#   

#   

#   

#   

#   

#            bowler      Batsman    kind  Number of times Out

#   0  K Khejroliya     AR Patel     lbw                    1

#   1  K Khejroliya      KK Nair  bowled                    1

#   2  K Khejroliya  Rashid Khan  caught                    1

#   

#   

#   

#   

#   

#   

#               bowler     Batsman     kind  Number of times Out

#   0  C de Grandhomme   DR Shorey   caught                    1

#   1  C de Grandhomme     HM Amla   caught                    1

#   2  C de Grandhomme   JP Duminy  run out                    1

#   3  C de Grandhomme  MA Agarwal   caught                    1

#   4  C de Grandhomme      P Negi      lbw                    1

#   

#   

#   

#   

#   

#   

#        bowler     Batsman    kind  Number of times Out

#   0  O Thomas  AD Russell  caught                    1

#   1  O Thomas   DA Warner  caught                    1

#   2  O Thomas   H Klaasen  caught                    1

#   3  O Thomas      P Negi  caught                    1

#   4  O Thomas     WP Saha  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler          Batsman    kind  Number of times Out

#   0  IS Sodhi          AD Nath  caught                    1

#   1  IS Sodhi  C de Grandhomme  caught                    1

#   2  IS Sodhi        CA Ingram  caught                    1

#   3  IS Sodhi    KS Williamson  caught                    1

#   4  IS Sodhi       MA Agarwal  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler         Batsman     kind  Number of times Out

#   6   STR Binny        DR Smith   caught                    2

#   0   STR Binny  A Ashish Reddy   caught                    1

#   14  STR Binny      MEK Hussey   bowled                    1

#   25  STR Binny        V Sehwag  run out                    1

#   24  STR Binny       SPD Smith   caught                    1

#   

#   

#   

#   

#   

#   

#        bowler     Batsman          kind  Number of times Out

#   8   BB Sran  KD Karthik        caught                    2

#   14  BB Sran  RV Uthappa        caught                    2

#   4   BB Sran    DJ Bravo        caught                    2

#   9   BB Sran   KH Pandya        caught                    1

#   15  BB Sran    S Dhawan  retired hurt                    1

#   

#   

#   

#   

#   

#   

#            bowler     Batsman     kind  Number of times Out

#   0  S Lamichhane    CH Gayle   caught                    1

#   1  S Lamichhane    DJ Hooda   caught                    1

#   2  S Lamichhane  KA Pollard   caught                    1

#   3  S Lamichhane   KH Pandya   caught                    1

#   4  S Lamichhane    KL Rahul  stumped                    1

#   

#   

#   

#   

#   

#   

#             bowler          Batsman     kind  Number of times Out

#   0  CR Brathwaite   AB de Villiers   caught                    1

#   1  CR Brathwaite        DA Warner   caught                    1

#   2  CR Brathwaite  Harbhajan Singh  run out                    1

#   3  CR Brathwaite       KD Karthik   caught                    1

#   4  CR Brathwaite         KL Rahul   bowled                    1

#   

#   

#   

#   

#   

#   

#             bowler    Batsman    kind  Number of times Out

#   0  Y Prithvi Raj  DA Warner  bowled                    1

#   

#   

#   

#   

#   

#   

#          bowler    Batsman     kind  Number of times Out

#   0  GC Viljoen    AD Nath   caught                    1

#   1  GC Viljoen  KH Pandya   caught                    1

#   2  GC Viljoen    PP Shaw  run out                    1

#   3  GC Viljoen  RG Sharma      lbw                    1

#   4  GC Viljoen    RR Pant   caught                    1

#   

#   

#   

#   

#   

#   

#       bowler      Batsman    kind  Number of times Out

#   9   P Negi      CA Lynn  bowled                    2

#   32  P Negi    SR Watson  caught                    2

#   23  P Negi  RA Tripathi  caught                    2

#   26  P Negi     S Nadeem  caught                    1

#   20  P Negi       N Rana  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler         Batsman     kind  Number of times Out

#   0  KC Cariappa  AB de Villiers  stumped                    1

#   1  KC Cariappa         AD Nath      lbw                    1

#   2  KC Cariappa         KK Nair   caught                    1

#   3  KC Cariappa        KL Rahul   bowled                    1

#   4  KC Cariappa         NV Ojha  stumped                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#              bowler    Batsman    kind  Number of times Out

#   0  JP Behrendorff  AT Rayudu  caught                    1

#   1  JP Behrendorff   CH Gayle  caught                    1

#   2  JP Behrendorff  MK Pandey  caught                    1

#   3  JP Behrendorff   SK Raina  caught                    1

#   4  JP Behrendorff    V Kohli  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#             bowler   Batsman    kind  Number of times Out

#   0  SC Kuggeleijn  KL Rahul  caught                    1

#   1  SC Kuggeleijn   SN Khan  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#          bowler       Batsman    kind  Number of times Out

#   36  YK Pathan      SK Raina  caught                    3

#   5   YK Pathan      BJ Hodge  bowled                    2

#   27  YK Pathan      PA Patel  caught                    2

#   0   YK Pathan  AC Gilchrist     lbw                    1

#   31  YK Pathan      R Dravid  bowled                    1

#   

#   

#   

#   

#   

#   

#         bowler   Batsman    kind  Number of times Out

#   0  GH Vihari  CH Gayle  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#           bowler    Batsman    kind  Number of times Out

#   2  BCJ Cutting   CH Gayle  caught                    2

#   0  BCJ Cutting   AJ Finch  bowled                    1

#   1  BCJ Cutting  CA Ingram  caught                    1

#   3  BCJ Cutting   DR Smith  caught                    1

#   4  BCJ Cutting  G Gambhir  caught                    1

#   

#   

#   

#   

#   

#   

#         bowler       Batsman               kind  Number of times Out

#   16  SK Raina       PP Ojha             caught                    2

#   0   SK Raina       A Singh  caught and bowled                    1

#   15  SK Raina       NV Ojha             caught                    1

#   27  SK Raina  Yuvraj Singh             bowled                    1

#   26  SK Raina    VVS Laxman             caught                    1

#   

#   

#   

#   

#   

#   

#          bowler                  Batsman    kind  Number of times Out

#   0  B Laughlin                AT Rayudu  caught                    2

#   1  B Laughlin               GJ Maxwell  caught                    1

#   2  B Laughlin  JPR Scantlebury-Searles  caught                    1

#   3  B Laughlin               KD Karthik  caught                    1

#   4  B Laughlin                   P Negi  caught                    1

#   

#   

#   

#   

#   

#   

#                       bowler        Batsman    kind  Number of times Out

#   0  JPR Scantlebury-Searles       AJ Finch  caught                    1

#   1  JPR Scantlebury-Searles  KS Williamson  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler     Batsman    kind  Number of times Out

#   0  LE Plunkett     KK Nair  caught                    1

#   1  LE Plunkett    KL Rahul  caught                    1

#   2  LE Plunkett  MA Agarwal  bowled                    1

#   3  LE Plunkett   MK Pandey  caught                    1

#   

#   

#   

#   

#   

#   

#              bowler         Batsman     kind  Number of times Out

#   0   Anureet Singh  AD Mascarenhas   bowled                    1

#   11  Anureet Singh         KK Nair   caught                    1

#   19  Anureet Singh         V Kohli   bowled                    1

#   18  Anureet Singh         SN Khan   caught                    1

#   17  Anureet Singh        S Dhawan  run out                    1

#   

#   

#   

#   

#   

#   

#          bowler    Batsman    kind  Number of times Out

#   14  SR Watson   CH Gayle  caught                    3

#   13  SR Watson  AT Rayudu  caught                    3

#   42  SR Watson  KV Sharma  caught                    2

#   66  SR Watson  RA Jadeja  caught                    2

#   18  SR Watson  DA Warner  caught                    2

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#            bowler       Batsman    kind  Number of times Out

#   0  Ankit Sharma   BB McCullum  caught                    1

#   1  Ankit Sharma      DR Smith  caught                    1

#   2  Ankit Sharma  F du Plessis  caught                    1

#   3  Ankit Sharma      JD Ryder  caught                    1

#   4  Ankit Sharma   LMP Simmons  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler    Batsman    kind  Number of times Out

#   42  MG Johnson   S Dhawan  caught                    3

#   1   MG Johnson   AJ Finch  bowled                    2

#   3   MG Johnson  AM Rahane  caught                    2

#   44  MG Johnson   SK Raina  caught                    2

#   13  MG Johnson  G Gambhir  caught                    2

#   

#   

#   

#   

#   

#   

#          bowler       Batsman    kind  Number of times Out

#   19  JP Duminy  Yuvraj Singh  caught                    2

#   3   JP Duminy     DA Miller  bowled                    2

#   17  JP Duminy      V Sehwag  caught                    2

#   11  JP Duminy     RA Jadeja  caught                    1

#   18  JP Duminy       WA Mota  caught                    1

#   

#   

#   

#   

#   

#   

#         bowler    Batsman    kind  Number of times Out

#   0  MK Tiwary  R Sathish  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler    Batsman     kind  Number of times Out

#   0  CJ Anderson  AT Rayudu  run out                    1

#   1  CJ Anderson  CA Pujara   caught                    1

#   2  CJ Anderson  DA Miller      lbw                    1

#   3  CJ Anderson  DA Warner   caught                    1

#   4  CJ Anderson  DJG Sammy   caught                    1

#   

#   

#   

#   

#   

#   

#          bowler     Batsman    kind  Number of times Out

#   0  B Stanlake  AD Russell  caught                    1

#   1  B Stanlake   BA Stokes  caught                    1

#   2  B Stanlake  KA Pollard  caught                    1

#   3  B Stanlake     KK Nair  bowled                    1

#   4  B Stanlake      N Rana  caught                    1

#   

#   

#   

#   

#   

#   

#             bowler     Batsman     kind  Number of times Out

#   32  Yuvraj Singh   STR Binny   caught                    2

#   24  Yuvraj Singh  RV Uthappa   caught                    2

#   0   Yuvraj Singh   A Symonds   caught                    1

#   27  Yuvraj Singh    S Dhawan  stumped                    1

#   21  Yuvraj Singh   RG Sharma  run out                    1

#   

#   

#   

#   

#   

#   

#         bowler    Batsman    kind  Number of times Out

#   0  DJM Short  Q de Kock  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#              bowler     Batsman    kind  Number of times Out

#   98  R Vinay Kumar   YK Pathan  caught                    4

#   70  R Vinay Kumar   RG Sharma  caught                    3

#   76  R Vinay Kumar  SC Ganguly  caught                    3

#   7   R Vinay Kumar  AD Mathews  caught                    3

#   42  R Vinay Kumar   JH Kallis  caught                    3

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#             bowler      Batsman     kind  Number of times Out

#   3   Bipul Sharma    AM Rahane   caught                    2

#   5   Bipul Sharma  BB McCullum   caught                    2

#   12  Bipul Sharma    MK Pandey  run out                    2

#   0   Bipul Sharma    A Symonds  run out                    1

#   11  Bipul Sharma      M Vohra   caught                    1

#   

#   

#   

#   

#   

#   

#       bowler    Batsman    kind  Number of times Out

#   57  Z Khan   MS Dhoni  caught                    7

#   26  Z Khan  G Gambhir  caught                    6

#   71  Z Khan   S Dhawan  caught                    3

#   77  Z Khan   SK Raina  caught                    2

#   59  Z Khan    NV Ojha  caught                    2

#   

#   

#   

#   

#   

#   

#       bowler      Batsman     kind  Number of times Out

#   0  TM Head  CJ Anderson  stumped                    1

#   1  TM Head   PJ Cummins   caught                    1

#   2  TM Head    RA Jadeja  run out                    1

#   

#   

#   

#   

#   

#   

#             bowler   Batsman               kind  Number of times Out

#   0  Swapnil Singh  MS Dhoni  caught and bowled                    1

#   

#   

#   

#   

#   

#   

#        bowler          Batsman    kind  Number of times Out

#   21  P Kumar  Harbhajan Singh  caught                    4

#   58  P Kumar         S Dhawan  caught                    4

#   64  P Kumar         SK Raina  caught                    3

#   49  P Kumar         PA Patel  caught                    3

#   63  P Kumar       SC Ganguly  caught                    2

#   

#   

#   

#   

#   

#   

#            bowler     Batsman    kind  Number of times Out

#   56  JP Faulkner    S Dhawan  caught                    3

#   35  JP Faulkner  MG Johnson  caught                    2

#   26  JP Faulkner  KA Pollard  caught                    2

#   48  JP Faulkner   RG Sharma  caught                    2

#   28  JP Faulkner  KD Karthik  caught                    2

#   

#   

#   

#   

#   

#   

#         bowler     Batsman    kind  Number of times Out

#   43  MM Patel    R Dravid  caught                    3

#   35  MM Patel   MK Tiwary  caught                    2

#   10  MM Patel   DJ Hussey  caught                    2

#   64  MM Patel    V Sehwag  caught                    2

#   57  MM Patel  SP Goswami  caught                    2

#   

#   

#   

#   

#   

#   

#          bowler         Batsman     kind  Number of times Out

#   0  Ankit Soni  AB de Villiers  run out                    1

#   1  Ankit Soni      JC Buttler  run out                    1

#   2  Ankit Soni          N Rana      lbw                    1

#   3  Ankit Soni          P Negi   caught                    1

#   

#   

#   

#   

#   

#   

#          bowler         Batsman     kind  Number of times Out

#   2  MN Samuels        CL White   caught                    2

#   0  MN Samuels    AC Gilchrist  run out                    1

#   1  MN Samuels  AD Mascarenhas   caught                    1

#   3  MN Samuels    F du Plessis   caught                    1

#   4  MN Samuels      MA Agarwal   caught                    1

#   

#   

#   

#   

#   

#   

#        bowler    Batsman     kind  Number of times Out

#   0  MJ Henry    CA Lynn  run out                    1

#   1  MJ Henry  MK Pandey   caught                    1

#   

#   

#   

#   

#   

#   

#         bowler          Batsman    kind  Number of times Out

#   0   DR Smith   AB de Villiers  caught                    1

#   14  DR Smith       MJ Guptill  caught                    1

#   25  DR Smith  Shakib Al Hasan  caught                    1

#   24  DR Smith  Shakib Al Hasan  bowled                    1

#   23  DR Smith        SS Tiwary  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler    Batsman    kind  Number of times Out

#   0  A Choudhary  DA Warner  caught                    1

#   1  A Choudhary    HM Amla  caught                    1

#   2  A Choudhary  MM Sharma  caught                    1

#   3  A Choudhary   PA Patel  caught                    1

#   4  A Choudhary  SP Narine  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler       Batsman    kind  Number of times Out

#   0  S Badree     AM Rahane  bowled                    1

#   1  S Badree     AM Rahane  caught                    1

#   2  S Badree   BB McCullum  caught                    1

#   3  S Badree     CM Gautam  caught                    1

#   4  S Badree  Ishan Kishan     lbw                    1

#   

#   

#   

#   

#   

#   

#          bowler    Batsman    kind  Number of times Out

#   22  S Aravind    M Vijay  caught                    2

#   39  S Aravind  SR Watson  caught                    2

#   10  S Aravind  G Gambhir  caught                    2

#   33  S Aravind  RJ Harris  caught                    1

#   25  S Aravind  MK Pandey  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler     Batsman    kind  Number of times Out

#   97  A Nehra     V Kohli  caught                    5

#   38  A Nehra  KD Karthik  caught                    3

#   30  A Nehra    HV Patel  caught                    2

#   9   A Nehra    AM Nayar  caught                    2

#   44  A Nehra     M Vijay  caught                    2

#   

#   

#   

#   

#   

#   

#          bowler       Batsman     kind  Number of times Out

#   81  IK Pathan       V Kohli   caught                    3

#   65  IK Pathan    RV Uthappa   caught                    3

#   33  IK Pathan    KA Pollard   bowled                    2

#   22  IK Pathan     G Gambhir  run out                    2

#   4   IK Pathan  AC Gilchrist   caught                    2

#   

#   

#   

#   

#   

#   

#        bowler  Batsman    kind  Number of times Out

#   0  NB Singh  M Vohra  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#          bowler  Batsman               kind  Number of times Out

#   0  SS Agarwal  HM Amla  caught and bowled                    1

#   

#   

#   

#   

#   

#   

#           bowler       Batsman    kind  Number of times Out

#   0   AD Mathews  AC Gilchrist  caught                    2

#   17  AD Mathews      R Dravid  caught                    2

#   14  AD Mathews      PA Patel  caught                    2

#   11  AD Mathews       M Vijay  caught                    2

#   13  AD Mathews     MK Pandey  bowled                    1

#   

#   

#   

#   

#   

#   

#         bowler      Batsman    kind  Number of times Out

#   0  S Kaushik  BCJ Cutting  caught                    1

#   1  S Kaushik   GJ Maxwell  caught                    1

#   2  S Kaushik      M Vijay  caught                    1

#   3  S Kaushik    Q de Kock  caught                    1

#   4  S Kaushik     SE Marsh  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler      Batsman    kind  Number of times Out

#   44  SB Jakati    YK Pathan  caught                    2

#   3   SB Jakati  BB McCullum  bowled                    2

#   41  SB Jakati      V Kohli  caught                    2

#   17  SB Jakati   KD Karthik  caught                    2

#   37  SB Jakati    SS Tiwary  caught                    2

#   

#   

#   

#   

#   

#   

#         bowler       Batsman    kind  Number of times Out

#   1   AB Dinda  AC Gilchrist  caught                    2

#   30  AB Dinda    KD Karthik  caught                    2

#   39  AB Dinda      MS Dhoni  caught                    2

#   50  AB Dinda     RG Sharma  caught                    2

#   59  AB Dinda     SS Tiwary  caught                    2

#   

#   

#   

#   

#   

#   

#         bowler        Batsman     kind  Number of times Out

#   29  R Bhatia  KC Sangakkara   caught                    2

#   44  R Bhatia        NV Ojha   caught                    2

#   53  R Bhatia      RG Sharma   caught                    2

#   59  R Bhatia       SK Raina   caught                    2

#   15  R Bhatia      DJ Hussey  run out                    2

#   

#   

#   

#   

#   

#   

#              bowler       Batsman               kind  Number of times Out

#   35  Iqbal Abdulla    RV Uthappa             caught                    2

#   0   Iqbal Abdulla  AC Gilchrist             bowled                    1

#   32  Iqbal Abdulla      R Bhatia            run out                    1

#   24  Iqbal Abdulla       M Vijay             caught                    1

#   25  Iqbal Abdulla       M Vijay  caught and bowled                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#        bowler     Batsman    kind  Number of times Out

#   15  MS Gony      K Goel  caught                    2

#   13  MS Gony   JH Kallis  caught                    2

#   0   MS Gony  AB Agarkar  caught                    1

#   27  MS Gony    R Dravid     lbw                    1

#   22  MS Gony    NK Patel  bowled                    1

#   

#   

#   

#   

#   

#   

#         bowler    Batsman     kind  Number of times Out

#   49  M Morkel  MK Tiwary   caught                    3

#   59  M Morkel  RG Sharma   caught                    2

#   45  M Morkel    M Vohra   caught                    2

#   54  M Morkel    P Kumar  run out                    2

#   17  M Morkel   CH Gayle   caught                    2

#   

#   

#   

#   

#   

#   

#         bowler      Batsman               kind  Number of times Out

#   0  R Sathish     GC Smith  caught and bowled                    1

#   1  R Sathish     MS Dhoni            run out                    1

#   2  R Sathish  NLTC Perera             bowled                    1

#   3  R Sathish   SC Ganguly             caught                    1

#   4  R Sathish    SPD Smith            run out                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#            bowler     Batsman     kind  Number of times Out

#   24  NLTC Perera   PP Chawla   caught                    2

#   28  NLTC Perera  RV Uthappa   caught                    2

#   0   NLTC Perera    A Mishra  run out                    1

#   26  NLTC Perera    R Dravid   caught                    1

#   20  NLTC Perera  MN Samuels   caught                    1

#   

#   

#   

#   

#   

#   

#         bowler         Batsman    kind  Number of times Out

#   0  KJ Abbott  AB de Villiers  bowled                    1

#   1  KJ Abbott    KP Pietersen  caught                    1

#   

#   

#   

#   

#   

#   

#               bowler       Batsman    kind  Number of times Out

#   0  Gurkeerat Singh     G Gambhir  caught                    1

#   1  Gurkeerat Singh  MC Henriques  caught                    1

#   2  Gurkeerat Singh      SA Yadav  bowled                    1

#   3  Gurkeerat Singh     SS Tiwary  caught                    1

#   4  Gurkeerat Singh    UT Khawaja  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler    Batsman     kind  Number of times Out

#   0  Sachin Baby   AJ Finch   caught                    1

#   1  Sachin Baby  MM Sharma  run out                    1

#   2  Sachin Baby  S Kaushik   caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#         bowler         Batsman    kind  Number of times Out

#   0   PV Tambe        AB Dinda     lbw                    1

#   1   PV Tambe  AB de Villiers  caught                    1

#   26  PV Tambe         V Kohli  caught                    1

#   25  PV Tambe       UBT Chand  bowled                    1

#   24  PV Tambe        SE Marsh  caught                    1

#   

#   

#   

#   

#   

#   

#       bowler       Batsman     kind  Number of times Out

#   0  V Kohli   BB McCullum   caught                    1

#   1  V Kohli  DB Ravi Teja   bowled                    1

#   2  V Kohli       KK Nair  run out                    1

#   3  V Kohli     LPC Silva   caught                    1

#   4  V Kohli       WP Saha   caught                    1

#   

#   

#   

#   

#   

#   

#         bowler     Batsman    kind  Number of times Out

#   48  RP Singh     NV Ojha  caught                    4

#   45  RP Singh  MV Boucher  bowled                    2

#   40  RP Singh     M Vijay  bowled                    2

#   73  RP Singh   SR Watson  caught                    2

#   19  RP Singh    DJ Bravo  caught                    2

#   

#   

#   

#   

#   

#   

#        bowler      Batsman    kind  Number of times Out

#   22  GB Hogg     V Sehwag  caught                    2

#   0   GB Hogg     A Mishra  caught                    1

#   1   GB Hogg  BB McCullum     lbw                    1

#   21  GB Hogg    SV Samson  caught                    1

#   20  GB Hogg      SS Iyer  bowled                    1

#   

#   

#   

#   

#   

#   

#             bowler       Batsman    kind  Number of times Out

#   2  Parvez Rasool  Yuvraj Singh  caught                    2

#   0  Parvez Rasool     JH Kallis  caught                    1

#   1  Parvez Rasool      S Dhawan  bowled                    1

#   

#   

#   

#   

#   

#   

#         bowler        Batsman     kind  Number of times Out

#   0  SM Boland  CR Brathwaite   caught                    1

#   1  SM Boland      JP Duminy  run out                    1

#   2  SM Boland      SV Samson   caught                    1

#   

#   

#   

#   

#   

#   

#          bowler           Batsman    kind  Number of times Out

#   19  JA Morkel  DPMD Jayawardene  caught                    3

#   80  JA Morkel      Yuvraj Singh  caught                    2

#   37  JA Morkel       LRPL Taylor  caught                    2

#   54  JA Morkel         PP Chawla  caught                    2

#   33  JA Morkel        KD Karthik  caught                    2

#   

#   

#   

#   

#   

#   

#      bowler     Batsman     kind  Number of times Out

#   0  P Sahu    AJ Finch  stumped                    1

#   1  P Sahu   G Gambhir   caught                    1

#   2  P Sahu  RV Uthappa      lbw                    1

#   

#   

#   

#   

#   

#   

#        bowler    Batsman               kind  Number of times Out

#   0   D Wiese  AT Rayudu             caught                    1

#   9   D Wiese   MS Dhoni             caught                    1

#   15  D Wiese  SPD Smith             caught                    1

#   14  D Wiese   S Dhawan             caught                    1

#   13  D Wiese  RG Sharma  caught and bowled                    1

#   

#   

#   

#   

#   

#   

#               bowler     Batsman               kind  Number of times Out

#   0   A Ashish Reddy   DJG Sammy             bowled                    1

#   10  A Ashish Reddy     N Saini                lbw                    1

#   17  A Ashish Reddy     V Kohli  caught and bowled                    1

#   16  A Ashish Reddy     V Kohli             caught                    1

#   15  A Ashish Reddy  RV Uthappa                lbw                    1

#   

#   

#   

#   

#   

#   

#           bowler    Batsman    kind  Number of times Out

#   0  JW Hastings  DA Warner  bowled                    1

#   1  JW Hastings    KK Nair  caught                    1

#   2  JW Hastings     Z Khan  caught                    1

#   

#   

#   

#   

#   

#   

#       bowler       Batsman     kind  Number of times Out

#   0  S Ladda  AC Gilchrist   caught                    1

#   1  S Ladda     DA Miller   bowled                    1

#   2  S Ladda      DJ Bravo   caught                    1

#   3  S Ladda    KA Pollard  stumped                    1

#   4  S Ladda       P Dogra  stumped                    1

#   

#   

#   

#   

#   

#   

#         bowler          Batsman     kind  Number of times Out

#   0   MA Starc         A Mishra   bowled                    1

#   29  MA Starc           P Negi  run out                    1

#   22  MA Starc  Karanveer Singh   bowled                    1

#   23  MA Starc          M Vohra   caught                    1

#   24  MA Starc       MA Agarwal   caught                    1

#   

#   

#   

#   

#   

#   

#              bowler      Batsman    kind  Number of times Out

#   9   Azhar Mahmood   EJG Morgan  caught                    2

#   12  Azhar Mahmood    JA Morkel  caught                    2

#   0   Azhar Mahmood  AB McDonald  caught                    1

#   16  Azhar Mahmood    LJ Wright  caught                    1

#   27  Azhar Mahmood    YK Pathan  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler         Batsman     kind  Number of times Out

#   5   IC Pandey       G Gambhir   caught                    2

#   6   IC Pandey       JP Duminy   bowled                    2

#   10  IC Pandey         M Vohra   caught                    2

#   0   IC Pandey  AB de Villiers   caught                    1

#   1   IC Pandey        AM Nayar  run out                    1

#   

#   

#   

#   

#   

#   

#            bowler      Batsman     kind  Number of times Out

#   5  BE Hendricks   KD Karthik   caught                    2

#   0  BE Hendricks  BB McCullum   bowled                    1

#   1  BE Hendricks    DA Warner   caught                    1

#   2  BE Hendricks   EJG Morgan   caught                    1

#   3  BE Hendricks      J Botha  run out                    1

#   

#   

#   

#   

#   

#   

#         bowler   Batsman    kind  Number of times Out

#   0  GS Sandhu  DJ Bravo  caught                    1

#   

#   

#   

#   

#   

#   

#         bowler     Batsman               kind  Number of times Out

#   0  RS Bopara  AD Russell             caught                    1

#   1  RS Bopara    DJ Bravo  caught and bowled                    1

#   2  RS Bopara    DR Smith            run out                    1

#   3  RS Bopara     KK Nair  caught and bowled                    1

#   4  RS Bopara     MJ Lumb             caught                    1

#   

#   

#   

#   

#   

#   

#        bowler        Batsman     kind  Number of times Out

#   12  J Botha  KC Sangakkara   caught                    2

#   0   J Botha      A Symonds   bowled                    1

#   14  J Botha         M Kaif   caught                    1

#   24  J Botha      SS Shaikh  run out                    1

#   23  J Botha      SPD Smith   caught                    1

#   

#   

#   

#   

#   

#   

#          bowler     Batsman     kind  Number of times Out

#   0  M de Lange  AD Mathews   caught                    1

#   1  M de Lange  KD Karthik   bowled                    1

#   2  M de Lange   MJ Clarke   bowled                    1

#   3  M de Lange   MK Tiwary   caught                    1

#   4  M de Lange      P Negi  run out                    1

#   

#   

#   

#   

#   

#   

#                bowler      Batsman     kind  Number of times Out

#   7   Karanveer Singh     SK Raina  run out                    2

#   11  Karanveer Singh    YK Pathan   caught                    2

#   0   Karanveer Singh    G Gambhir   caught                    1

#   1   Karanveer Singh  JDS Neesham   caught                    1

#   2   Karanveer Singh    JP Duminy   caught                    1

#   

#   

#   

#   

#   

#   

#                bowler     Batsman               kind  Number of times Out

#   0  RN ten Doeschate  EJG Morgan            run out                    1

#   1  RN ten Doeschate     NV Ojha  caught and bowled                    1

#   2  RN ten Doeschate   SS Tiwary             caught                    1

#   

#   

#   

#   

#   

#   

#       bowler   Batsman    kind  Number of times Out

#   0  RG More  SA Yadav  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler        Batsman     kind  Number of times Out

#   9  J Theron       SK Raina   caught                    2

#   0  J Theron      A Symonds   bowled                    1

#   1  J Theron  Azhar Mahmood  run out                    1

#   2  J Theron       CH Gayle   caught                    1

#   3  J Theron     KA Pollard   caught                    1

#   

#   

#   

#   

#   

#   

#             bowler      Batsman    kind  Number of times Out

#   0  DJ Muthuswami     DJ Bravo     lbw                    1

#   1  DJ Muthuswami  LMP Simmons  caught                    1

#   2  DJ Muthuswami    MK Pandey  caught                    1

#   3  DJ Muthuswami   RV Uthappa  caught                    1

#   

#   

#   

#   

#   

#   

#             bowler       Batsman    kind  Number of times Out

#   0  Shivam Sharma      AJ Finch  bowled                    1

#   1  Shivam Sharma      DJ Hooda  bowled                    1

#   2  Shivam Sharma     JA Morkel  caught                    1

#   3  Shivam Sharma  Yuvraj Singh  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler     Batsman     kind  Number of times Out

#   0  AN Ahmed    AM Nayar   caught                    1

#   1  AN Ahmed     B Kumar   caught                    1

#   2  AN Ahmed    DW Steyn  run out                    1

#   3  AN Ahmed  EJG Morgan   caught                    1

#   4  AN Ahmed   G Gambhir   bowled                    1

#   

#   

#   

#   

#   

#   

#       bowler   Batsman    kind  Number of times Out

#   0  P Suyal  DJ Bravo  caught                    1

#   1  P Suyal   V Kohli  caught                    1

#   

#   

#   

#   

#   

#   

#         bowler       Batsman    kind  Number of times Out

#   0  DJG Sammy  AC Gilchrist  bowled                    1

#   1  DJG Sammy   BMAJ Mendis  caught                    1

#   2  DJG Sammy       BR Dunk  bowled                    1

#   3  DJG Sammy     CA Pujara  caught                    1

#   4  DJG Sammy     DA Miller  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler    Batsman    kind  Number of times Out

#   15  PP Ojha  G Gambhir  caught                    4

#   48  PP Ojha   MS Dhoni  caught                    4

#   73  PP Ojha  SR Watson  caught                    2

#   83  PP Ojha  YK Pathan  caught                    2

#   23  PP Ojha  JH Kallis  caught                    2

#   

#   

#   

#   

#   

#   

#         bowler     Batsman     kind  Number of times Out

#   65  L Balaji     V Kohli   caught                    3

#   33  L Balaji  MEK Hussey   caught                    2

#   24  L Balaji  KD Karthik   caught                    2

#   53  L Balaji    SK Raina  run out                    2

#   15  L Balaji   G Gambhir   caught                    2

#   

#   

#   

#   

#   

#   

#        bowler     Batsman    kind  Number of times Out

#   24  P Awana   RA Jadeja  caught                    2

#   33  P Awana     V Kohli  caught                    2

#   26  P Awana   RG Sharma  caught                    2

#   12  P Awana  KA Pollard  caught                    2

#   27  P Awana  RV Uthappa  caught                    2

#   

#   

#   

#   

#   

#   

#          bowler      Batsman     kind  Number of times Out

#   18  KK Cooper   KD Karthik   caught                    2

#   30  KK Cooper     SK Raina   caught                    2

#   5   KK Cooper      AP Tare   caught                    2

#   24  KK Cooper  PC Valthaty   caught                    1

#   19  KK Cooper    KV Sharma  run out                    1

#   

#   

#   

#   

#   

#   

#         bowler    Batsman    kind  Number of times Out

#   7  R Rampaul    M Vijay  caught                    2

#   0  R Rampaul   AJ Finch  caught                    1

#   1  R Rampaul  AM Rahane  caught                    1

#   2  R Rampaul  BJ Rohrer  bowled                    1

#   3  R Rampaul  DA Warner  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#        bowler      Batsman    kind  Number of times Out

#   0  VS Malik  BB McCullum  caught                    1

#   1  VS Malik    GH Vihari  caught                    1

#   2  VS Malik    MD Mishra     lbw                    1

#   3  VS Malik     PA Patel  caught                    1

#   4  VS Malik     SE Marsh  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler     Batsman    kind  Number of times Out

#   9   WD Parnell   G Gambhir  caught                    2

#   0   WD Parnell   AM Rahane  caught                    1

#   16  WD Parnell    PA Patel  caught                    1

#   28  WD Parnell   YK Pathan  caught                    1

#   27  WD Parnell  VVS Laxman  bowled                    1

#   

#   

#   

#   

#   

#   

#               bowler           Batsman     kind  Number of times Out

#   22  M Muralitharan        KD Karthik   caught                    3

#   45  M Muralitharan        RV Uthappa  stumped                    2

#   26  M Muralitharan            M Kaif   caught                    2

#   7   M Muralitharan  DPMD Jayawardene   caught                    2

#   20  M Muralitharan     KC Sangakkara   caught                    2

#   

#   

#   

#   

#   

#   

#          bowler    Batsman    kind  Number of times Out

#   0  K Santokie   BJ Hodge  caught                    1

#   1  K Santokie   SE Marsh  caught                    1

#   2  K Santokie  SV Samson  caught                    1

#   

#   

#   

#   

#   

#   

#              bowler     Batsman    kind  Number of times Out

#   20  BW Hilfenhaus    V Sehwag  bowled                    2

#   1   BW Hilfenhaus   DA Warner  caught                    2

#   11  BW Hilfenhaus  MEK Hussey  bowled                    1

#   19  BW Hilfenhaus   SR Watson  caught                    1

#   18  BW Hilfenhaus  SL Malinga  bowled                    1

#   

#   

#   

#   

#   

#   

#               bowler        Batsman     kind  Number of times Out

#   0  Y Venugopal Rao       A Chopra  run out                    1

#   1  Y Venugopal Rao      JA Morkel   caught                    1

#   2  Y Venugopal Rao  LA Carseldine      lbw                    1

#   3  Y Venugopal Rao      RA Jadeja   caught                    1

#   4  Y Venugopal Rao     RV Uthappa   caught                    1

#   

#   

#   

#   

#   

#   

#         bowler         Batsman     kind  Number of times Out

#   0  DJ Hussey  AB de Villiers   caught                    1

#   1  DJ Hussey        AS Yadav   caught                    1

#   2  DJ Hussey        CL White   caught                    1

#   3  DJ Hussey       DJ Harris   caught                    1

#   4  DJ Hussey       GJ Bailey  run out                    1

#   

#   

#   

#   

#   

#   

#        bowler           Batsman     kind  Number of times Out

#   0  R Shukla          AJ Finch   bowled                    1

#   1  R Shukla       BCJ Cutting  run out                    1

#   2  R Shukla          CH Gayle   bowled                    1

#   3  R Shukla         DA Warner  run out                    1

#   4  R Shukla  DPMD Jayawardene   caught                    1

#   

#   

#   

#   

#   

#   

#           bowler     Batsman    kind  Number of times Out

#   0  LMP Simmons  RV Uthappa  bowled                    1

#   

#   

#   

#   

#   

#   

#          bowler        Batsman    kind  Number of times Out

#   66  JH Kallis   Yuvraj Singh  caught                    2

#   2   JH Kallis       AJ Finch  bowled                    2

#   39  JH Kallis  Mandeep Singh  caught                    2

#   30  JH Kallis        M Vijay  caught                    2

#   55  JH Kallis       SK Raina  caught                    2

#   

#   

#   

#   

#   

#   

#          bowler     Batsman    kind  Number of times Out

#   0   LR Shukla    A Mishra  caught                    1

#   9   LR Shukla    SB Joshi  caught                    1

#   15  LR Shukla  WPUJC Vaas  bowled                    1

#   14  LR Shukla   VY Mahesh  bowled                    1

#   13  LR Shukla   STR Binny     lbw                    1

#   

#   

#   

#   

#   

#   

#         bowler     Batsman     kind  Number of times Out

#   27  M Kartik  RV Uthappa   caught                    3

#   0   M Kartik    A Mishra  run out                    1

#   19  M Kartik     P Dogra   bowled                    1

#   21  M Kartik     PP Ojha  run out                    1

#   22  M Kartik    R Dravid   caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#         bowler         Batsman               kind  Number of times Out

#   16  R Sharma   KC Sangakkara             caught                    2

#   15  R Sharma   KC Sangakkara             bowled                    2

#   0   R Sharma  AB de Villiers             bowled                    1

#   29  R Sharma        R Dravid  caught and bowled                    1

#   23  R Sharma         MS Wade                lbw                    1

#   

#   

#   

#   

#   

#   

#           bowler       Batsman    kind  Number of times Out

#   14  SK Trivedi     DJ Hussey  caught                    3

#   43  SK Trivedi     RG Sharma  caught                    3

#   24  SK Trivedi     JH Kallis  caught                    2

#   62  SK Trivedi  Yuvraj Singh  caught                    2

#   34  SK Trivedi     MK Pandey  caught                    2

#   

#   

#   

#   

#   

#   

#           bowler     Batsman     kind  Number of times Out

#   3  Anand Rajan     J Botha   caught                    2

#   0  Anand Rajan    BA Bhatt  run out                    1

#   1  Anand Rajan    CH Gayle   bowled                    1

#   2  Anand Rajan   G Gambhir   caught                    1

#   4  Anand Rajan  KA Pollard   caught                    1

#   

#   

#   

#   

#   

#   

#          bowler           Batsman     kind  Number of times Out

#   6  AG Murtaza           NV Ojha   caught                    2

#   9  AG Murtaza          V Sehwag  run out                    2

#   0  AG Murtaza    AB de Villiers      lbw                    1

#   1  AG Murtaza          B Chipli      lbw                    1

#   2  AG Murtaza  DPMD Jayawardene   caught                    1

#   

#   

#   

#   

#   

#   

#            bowler          Batsman    kind  Number of times Out

#   0  AC Gilchrist  Harbhajan Singh  caught                    1

#   

#   

#   

#   

#   

#   

#         bowler       Batsman     kind  Number of times Out

#   1   BJ Hodge  AC Gilchrist   caught                    2

#   0   BJ Hodge     AA Chavan  run out                    1

#   9   BJ Hodge       PR Shah   caught                    1

#   15  BJ Hodge       V Kohli   caught                    1

#   14  BJ Hodge    SP Goswami   caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#         bowler           Batsman    kind  Number of times Out

#   0  AA Chavan       BB McCullum     lbw                    1

#   1  AA Chavan      Bipul Sharma  caught                    1

#   2  AA Chavan  DPMD Jayawardene     lbw                    1

#   3  AA Chavan        KA Pollard  caught                    1

#   4  AA Chavan      KP Pietersen  caught                    1

#   

#   

#   

#   

#   

#   

#                 bowler        Batsman    kind  Number of times Out

#   0   RE van der Merwe      A Symonds  bowled                    1

#   13  RE van der Merwe       MS Dhoni  caught                    1

#   23  RE van der Merwe  ST Jayasuriya  caught                    1

#   22  RE van der Merwe       SK Raina  caught                    1

#   21  RE van der Merwe    S Sreesanth  bowled                    1

#   

#   

#   

#   

#   

#   

#               bowler         Batsman     kind  Number of times Out

#   0  SMSM Senanayake  A Ashish Reddy   bowled                    1

#   1  SMSM Senanayake    AC Gilchrist      lbw                    1

#   2  SMSM Senanayake       AM Rahane  stumped                    1

#   3  SMSM Senanayake       CA Pujara   caught                    1

#   4  SMSM Senanayake       DA Miller   bowled                    1

#   

#   

#   

#   

#   

#   

#         bowler      Batsman    kind  Number of times Out

#   0  LJ Wright  S Badrinath  caught                    1

#   1  LJ Wright   TM Dilshan  caught                    1

#   

#   

#   

#   

#   

#   

#        bowler           Batsman     kind  Number of times Out

#   0  RV Gomez         DJ Jacobs   bowled                    1

#   1  RV Gomez         G Gambhir   caught                    1

#   2  RV Gomez         JH Kallis   bowled                    1

#   3  RV Gomez  RN ten Doeschate  run out                    1

#   4  RV Gomez       S Badrinath      lbw                    1

#   

#   

#   

#   

#   

#   

#              bowler     Batsman     kind  Number of times Out

#   28  Harmeet Singh    V Sehwag   caught                    2

#   23  Harmeet Singh  RV Uthappa   bowled                    2

#   15  Harmeet Singh  MN Samuels   bowled                    1

#   27  Harmeet Singh  TM Dilshan      lbw                    1

#   26  Harmeet Singh    SK Warne  run out                    1

#   

#   

#   

#   

#   

#   

#        bowler      Batsman               kind  Number of times Out

#   7  BA Bhatt    JH Kallis             caught                    2

#   0  BA Bhatt   AL Menaria             caught                    1

#   1  BA Bhatt      AS Raut             caught                    1

#   2  BA Bhatt  DS Kulkarni  caught and bowled                    1

#   3  BA Bhatt   EJG Morgan             caught                    1

#   

#   

#   

#   

#   

#   

#           bowler     Batsman     kind  Number of times Out

#   0   AB Agarkar   A Symonds   caught                    1

#   17  AB Agarkar    MS Bisla   caught                    1

#   31  AB Agarkar  WPUJC Vaas   caught                    1

#   30  AB Agarkar    V Sehwag   bowled                    1

#   29  AB Agarkar    TL Suman  run out                    1

#   

#   

#   

#   

#   

#   

#        bowler    Batsman    kind  Number of times Out

#   0  A Mithun  JA Morkel  caught                    1

#   1  A Mithun  JH Kallis  caught                    1

#   2  A Mithun   JR Hopes  caught                    1

#   3  A Mithun    MS Wade  bowled                    1

#   4  A Mithun  RA Jadeja  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler         Batsman     kind  Number of times Out

#   0  BAW Mendis        AM Nayar  run out                    1

#   1  BAW Mendis   Azhar Mahmood      lbw                    1

#   2  BAW Mendis        GC Smith   caught                    1

#   3  BAW Mendis       KM Jadhav   caught                    1

#   4  BAW Mendis  PD Collingwood   caught                    1

#   

#   

#   

#   

#   

#   

#               bowler     Batsman     kind  Number of times Out

#   0  J Syed Mohammad   BJ Haddin   caught                    1

#   1  J Syed Mohammad   DJ Harris  run out                    1

#   2  J Syed Mohammad    DR Smith   bowled                    1

#   3  J Syed Mohammad    JD Ryder   caught                    1

#   4  J Syed Mohammad  MEK Hussey   caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#          bowler        Batsman               kind  Number of times Out

#   0  A Chandila    AP Majumdar  caught and bowled                    1

#   1  A Chandila       CL White  caught and bowled                    1

#   2  A Chandila       JD Ryder             caught                    1

#   3  A Chandila        M Vijay  caught and bowled                    1

#   4  A Chandila  Mandeep Singh  caught and bowled                    1

#   

#   

#   

#   

#   

#   

#            bowler         Batsman          kind  Number of times Out

#   33  S Sreesanth      TM Dilshan        caught                    3

#   0   S Sreesanth  AB de Villiers        caught                    2

#   1   S Sreesanth    AC Gilchrist        caught                    2

#   36  S Sreesanth      VVS Laxman  retired hurt                    1

#   27  S Sreesanth        SK Raina        caught                    1

#   

#   

#   

#   

#   

#   

#         bowler    Batsman     kind  Number of times Out

#   0  R McLaren  A Symonds   bowled                    1

#   1  R McLaren  AT Rayudu  run out                    1

#   2  R McLaren   JD Ryder   caught                    1

#   3  R McLaren  JH Kallis   bowled                    1

#   4  R McLaren  JP Duminy   caught                    1

#   

#   

#   

#   

#   

#   

#        bowler     Batsman    kind  Number of times Out

#   7   SW Tait  KD Karthik  caught                    2

#   0   SW Tait    AJ Finch  caught                    1

#   13  SW Tait   R McLaren  caught                    1

#   23  SW Tait  VVS Laxman  caught                    1

#   22  SW Tait    V Sehwag  caught                    1

#   

#   

#   

#   

#   

#   

#   Empty DataFrame

#   Columns: [bowler, Batsman, kind, Number of times Out]

#   Index: []

#   

#   

#   

#   

#   

#   

#        bowler         Batsman    kind  Number of times Out

#   0  CL White  AB de Villiers  caught                    1

#   

#   

#   

#   

#   

#   

#           bowler   Batsman     kind  Number of times Out

#   0  BMAJ Mendis  PA Patel  stumped                    1

#   

#   

#   

#   

#   

#   

#        bowler         Batsman     kind  Number of times Out

#   0  S Narwal    AC Gilchrist   caught                    1

#   1  S Narwal       DA Warner   bowled                    1

#   2  S Narwal       G Gambhir   caught                    1

#   3  S Narwal  PD Collingwood  run out                    1

#   4  S Narwal        R Sharma   caught                    1

#   

#   

#   

#   

#   

#   

#        bowler    Batsman    kind  Number of times Out

#   0  TL Suman   CH Gayle  caught                    1

#   1  TL Suman   DJ Bravo  caught                    1

#   2  TL Suman  IK Pathan  caught                    1

#   3  TL Suman    M Vijay  caught                    1

#   4  TL Suman    PR Shah  caught                    1

#   

#   

#   

#   

#   

#   

#      bowler          Batsman     kind  Number of times Out

#   0   B Lee       AB Agarkar  run out                    1

#   1   B Lee      AC Blizzard   caught                    1

#   28  B Lee  Y Venugopal Rao  run out                    1

#   27  B Lee          Y Nagar   bowled                    1

#   26  B Lee         V Sehwag   caught                    1

#   

#   

#   

#   

#   

#   

#        bowler      Batsman    kind  Number of times Out

#   0  AM Nayar     AN Ghosh  caught                    1

#   1  AM Nayar  BB McCullum  caught                    1

#   2  AM Nayar     BJ Hodge  bowled                    1

#   3  AM Nayar    BJ Rohrer  caught                    1

#   4  AM Nayar    LPC Silva  caught                    1

#   

#   

#   

#   

#   

#   

#          bowler       Batsman     kind  Number of times Out

#   17  DP Nannes      MS Dhoni   caught                    2

#   11  DP Nannes     JP Duminy   caught                    2

#   1   DP Nannes  AC Gilchrist   caught                    2

#   32  DP Nannes     SS Tiwary  run out                    1

#   31  DP Nannes  SR Tendulkar      lbw                    1

#   

#   

#   

#   

#   

#   

#        bowler       Batsman    kind  Number of times Out

#   0  AJ Finch  SR Tendulkar  caught"
    },
    "Langchain_Series_GenAI": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
# GenAI Chatbot Project

## Overview
This project demonstrates the integration of Langchain and OpenAI to create a conversational AI chatbot. The chatbot utilizes the capabilities of Langchain for language processing and OpenAI's GPT-3.5 model for generating responses.

## Requirements
- Python 3.10
- langchain_openai
- langchain_core
- streamlit
- python-dotenv

## Installation
1. Clone the repository:
git clone https://github.com/Parthiban-R-3997/Langchain_Series_GenAI.git
cd Langchain_Series_GenAI


2. Install dependencies:
pip install -r requirements.txt



## Usage
1. Set up environment variables:
- Create a `.env` file in the root directory of your project.
- Add the following variables to your `.env` file:
  ```
  LANGCHAIN_API_KEY='your_langchain_api_key_here'
  OPENAI_API_KEY='your_openai_api_key_here'
  ```
2. Run the Streamlit app:
streamlit run app.py


3. Enter the topic you want to search for in the text input field and the chatbot will provide responses based on the input.

## Example
![screenshot](https://github.com/Parthiban-R-3997/Langchain_Series_GenAI/assets/26496805/ef76bcf3-30cd-4745-b338-842966d75fa2)

## License
This project is licensed under the [MIT License](LICENSE).





================================================
File: LICENSE
================================================
                    GNU GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The GNU General Public License is a free, copyleft license for
software and other kinds of works.

  The licenses for most software and other practical works are designed
to take away your freedom to share and change the works.  By contrast,
the GNU General Public License is intended to guarantee your freedom to
share and change all versions of a program--to make sure it remains free
software for all its users.  We, the Free Software Foundation, use the
GNU General Public License for most of our software; it applies also to
any other work released this way by its authors.  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
them if you wish), that you receive source code or can get it if you
want it, that you can change the software or use pieces of it in new
free programs, and that you know you can do these things.

  To protect your rights, we need to prevent others from denying you
these rights or asking you to surrender the rights.  Therefore, you have
certain responsibilities if you distribute copies of the software, or if
you modify it: responsibilities to respect the freedom of others.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must pass on to the recipients the same
freedoms that you received.  You must make sure that they, too, receive
or can get the source code.  And you must show them these terms so they
know their rights.

  Developers that use the GNU GPL protect your rights with two steps:
(1) assert copyright on the software, and (2) offer you this License
giving you legal permission to copy, distribute and/or modify it.

  For the developers' and authors' protection, the GPL clearly explains
that there is no warranty for this free software.  For both users' and
authors' sake, the GPL requires that modified versions be marked as
changed, so that their problems will not be attributed erroneously to
authors of previous versions.

  Some devices are designed to deny users access to install or run
modified versions of the software inside them, although the manufacturer
can do so.  This is fundamentally incompatible with the aim of
protecting users' freedom to change the software.  The systematic
pattern of such abuse occurs in the area of products for individuals to
use, which is precisely where it is most unacceptable.  Therefore, we
have designed this version of the GPL to prohibit the practice for those
products.  If such problems arise substantially in other domains, we
stand ready to extend this provision to those domains in future versions
of the GPL, as needed to protect the freedom of users.

  Finally, every program is threatened constantly by software patents.
States should not allow patents to restrict development and use of
software on general-purpose computers, but in those that do, we wish to
avoid the special danger that patents applied to a free program could
make it effectively proprietary.  To prevent this, the GPL assures that
patents cannot be used to render the program non-free.

  The precise terms and conditions for copying, distribution and
modification follow.

                       TERMS AND CONDITIONS

  0. Definitions.

  'This License' refers to version 3 of the GNU General Public License.

  'Copyright' also means copyright-like laws that apply to other kinds of
works, such as semiconductor masks.

  'The Program' refers to any copyrightable work licensed under this
License.  Each licensee is addressed as 'you'.  'Licensees' and
'recipients' may be individuals or organizations.

  To 'modify' a work means to copy from or adapt all or part of the work
in a fashion requiring copyright permission, other than the making of an
exact copy.  The resulting work is called a 'modified version' of the
earlier work or a work 'based on' the earlier work.

  A 'covered work' means either the unmodified Program or a work based
on the Program.

  To 'propagate' a work means to do anything with it that, without
permission, would make you directly or secondarily liable for
infringement under applicable copyright law, except executing it on a
computer or modifying a private copy.  Propagation includes copying,
distribution (with or without modification), making available to the
public, and in some countries other activities as well.

  To 'convey' a work means any kind of propagation that enables other
parties to make or receive copies.  Mere interaction with a user through
a computer network, with no transfer of a copy, is not conveying.

  An interactive user interface displays 'Appropriate Legal Notices'
to the extent that it includes a convenient and prominently visible
feature that (1) displays an appropriate copyright notice, and (2)
tells the user that there is no warranty for the work (except to the
extent that warranties are provided), that licensees may convey the
work under this License, and how to view a copy of this License.  If
the interface presents a list of user commands or options, such as a
menu, a prominent item in the list meets this criterion.

  1. Source Code.

  The 'source code' for a work means the preferred form of the work
for making modifications to it.  'Object code' means any non-source
form of a work.

  A 'Standard Interface' means an interface that either is an official
standard defined by a recognized standards body, or, in the case of
interfaces specified for a particular programming language, one that
is widely used among developers working in that language.

  The 'System Libraries' of an executable work include anything, other
than the work as a whole, that (a) is included in the normal form of
packaging a Major Component, but which is not part of that Major
Component, and (b) serves only to enable use of the work with that
Major Component, or to implement a Standard Interface for which an
implementation is available to the public in source code form.  A
'Major Component', in this context, means a major essential component
(kernel, window system, and so on) of the specific operating system
(if any) on which the executable work runs, or a compiler used to
produce the work, or an object code interpreter used to run it.

  The 'Corresponding Source' for a work in object code form means all
the source code needed to generate, install, and (for an executable
work) run the object code and to modify the work, including scripts to
control those activities.  However, it does not include the work's
System Libraries, or general-purpose tools or generally available free
programs which are used unmodified in performing those activities but
which are not part of the work.  For example, Corresponding Source
includes interface definition files associated with source files for
the work, and the source code for shared libraries and dynamically
linked subprograms that the work is specifically designed to require,
such as by intimate data communication or control flow between those
subprograms and other parts of the work.

  The Corresponding Source need not include anything that users
can regenerate automatically from other parts of the Corresponding
Source.

  The Corresponding Source for a work in source code form is that
same work.

  2. Basic Permissions.

  All rights granted under this License are granted for the term of
copyright on the Program, and are irrevocable provided the stated
conditions are met.  This License explicitly affirms your unlimited
permission to run the unmodified Program.  The output from running a
covered work is covered by this License only if the output, given its
content, constitutes a covered work.  This License acknowledges your
rights of fair use or other equivalent, as provided by copyright law.

  You may make, run and propagate covered works that you do not
convey, without conditions so long as your license otherwise remains
in force.  You may convey covered works to others for the sole purpose
of having them make modifications exclusively for you, or provide you
with facilities for running those works, provided that you comply with
the terms of this License in conveying all material for which you do
not control copyright.  Those thus making or running the covered works
for you must do so exclusively on your behalf, under your direction
and control, on terms that prohibit them from making any copies of
your copyrighted material outside their relationship with you.

  Conveying under any other circumstances is permitted solely under
the conditions stated below.  Sublicensing is not allowed; section 10
makes it unnecessary.

  3. Protecting Users' Legal Rights From Anti-Circumvention Law.

  No covered work shall be deemed part of an effective technological
measure under any applicable law fulfilling obligations under article
11 of the WIPO copyright treaty adopted on 20 December 1996, or
similar laws prohibiting or restricting circumvention of such
measures.

  When you convey a covered work, you waive any legal power to forbid
circumvention of technological measures to the extent such circumvention
is effected by exercising rights under this License with respect to
the covered work, and you disclaim any intention to limit operation or
modification of the work as a means of enforcing, against the work's
users, your or third parties' legal rights to forbid circumvention of
technological measures.

  4. Conveying Verbatim Copies.

  You may convey verbatim copies of the Program's source code as you
receive it, in any medium, provided that you conspicuously and
appropriately publish on each copy an appropriate copyright notice;
keep intact all notices stating that this License and any
non-permissive terms added in accord with section 7 apply to the code;
keep intact all notices of the absence of any warranty; and give all
recipients a copy of this License along with the Program.

  You may charge any price or no price for each copy that you convey,
and you may offer support or warranty protection for a fee.

  5. Conveying Modified Source Versions.

  You may convey a work based on the Program, or the modifications to
produce it from the Program, in the form of source code under the
terms of section 4, provided that you also meet all of these conditions:

    a) The work must carry prominent notices stating that you modified
    it, and giving a relevant date.

    b) The work must carry prominent notices stating that it is
    released under this License and any conditions added under section
    7.  This requirement modifies the requirement in section 4 to
    'keep intact all notices'.

    c) You must license the entire work, as a whole, under this
    License to anyone who comes into possession of a copy.  This
    License will therefore apply, along with any applicable section 7
    additional terms, to the whole of the work, and all its parts,
    regardless of how they are packaged.  This License gives no
    permission to license the work in any other way, but it does not
    invalidate such permission if you have separately received it.

    d) If the work has interactive user interfaces, each must display
    Appropriate Legal Notices; however, if the Program has interactive
    interfaces that do not display Appropriate Legal Notices, your
    work need not make them do so.

  A compilation of a covered work with other separate and independent
works, which are not by their nature extensions of the covered work,
and which are not combined with it such as to form a larger program,
in or on a volume of a storage or distribution medium, is called an
'aggregate' if the compilation and its resulting copyright are not
used to limit the access or legal rights of the compilation's users
beyond what the individual works permit.  Inclusion of a covered work
in an aggregate does not cause this License to apply to the other
parts of the aggregate.

  6. Conveying Non-Source Forms.

  You may convey a covered work in object code form under the terms
of sections 4 and 5, provided that you also convey the
machine-readable Corresponding Source under the terms of this License,
in one of these ways:

    a) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by the
    Corresponding Source fixed on a durable physical medium
    customarily used for software interchange.

    b) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by a
    written offer, valid for at least three years and valid for as
    long as you offer spare parts or customer support for that product
    model, to give anyone who possesses the object code either (1) a
    copy of the Corresponding Source for all the software in the
    product that is covered by this License, on a durable physical
    medium customarily used for software interchange, for a price no
    more than your reasonable cost of physically performing this
    conveying of source, or (2) access to copy the
    Corresponding Source from a network server at no charge.

    c) Convey individual copies of the object code with a copy of the
    written offer to provide the Corresponding Source.  This
    alternative is allowed only occasionally and noncommercially, and
    only if you received the object code with such an offer, in accord
    with subsection 6b.

    d) Convey the object code by offering access from a designated
    place (gratis or for a charge), and offer equivalent access to the
    Corresponding Source in the same way through the same place at no
    further charge.  You need not require recipients to copy the
    Corresponding Source along with the object code.  If the place to
    copy the object code is a network server, the Corresponding Source
    may be on a different server (operated by you or a third party)
    that supports equivalent copying facilities, provided you maintain
    clear directions next to the object code saying where to find the
    Corresponding Source.  Regardless of what server hosts the
    Corresponding Source, you remain obligated to ensure that it is
    available for as long as needed to satisfy these requirements.

    e) Convey the object code using peer-to-peer transmission, provided
    you inform other peers where the object code and Corresponding
    Source of the work are being offered to the general public at no
    charge under subsection 6d.

  A separable portion of the object code, whose source code is excluded
from the Corresponding Source as a System Library, need not be
included in conveying the object code work.

  A 'User Product' is either (1) a 'consumer product', which means any
tangible personal property which is normally used for personal, family,
or household purposes, or (2) anything designed or sold for incorporation
into a dwelling.  In determining whether a product is a consumer product,
doubtful cases shall be resolved in favor of coverage.  For a particular
product received by a particular user, 'normally used' refers to a
typical or common use of that class of product, regardless of the status
of the particular user or of the way in which the particular user
actually uses, or expects or is expected to use, the product.  A product
is a consumer product regardless of whether the product has substantial
commercial, industrial or non-consumer uses, unless such uses represent
the only significant mode of use of the product.

  'Installation Information' for a User Product means any methods,
procedures, authorization keys, or other information required to install
and execute modified versions of a covered work in that User Product from
a modified version of its Corresponding Source.  The information must
suffice to ensure that the continued functioning of the modified object
code is in no case prevented or interfered with solely because
modification has been made.

  If you convey an object code work under this section in, or with, or
specifically for use in, a User Product, and the conveying occurs as
part of a transaction in which the right of possession and use of the
User Product is transferred to the recipient in perpetuity or for a
fixed term (regardless of how the transaction is characterized), the
Corresponding Source conveyed under this section must be accompanied
by the Installation Information.  But this requirement does not apply
if neither you nor any third party retains the ability to install
modified object code on the User Product (for example, the work has
been installed in ROM).

  The requirement to provide Installation Information does not include a
requirement to continue to provide support service, warranty, or updates
for a work that has been modified or installed by the recipient, or for
the User Product in which it has been modified or installed.  Access to a
network may be denied when the modification itself materially and
adversely affects the operation of the network or violates the rules and
protocols for communication across the network.

  Corresponding Source conveyed, and Installation Information provided,
in accord with this section must be in a format that is publicly
documented (and with an implementation available to the public in
source code form), and must require no special password or key for
unpacking, reading or copying.

  7. Additional Terms.

  'Additional permissions' are terms that supplement the terms of this
License by making exceptions from one or more of its conditions.
Additional permissions that are applicable to the entire Program shall
be treated as though they were included in this License, to the extent
that they are valid under applicable law.  If additional permissions
apply only to part of the Program, that part may be used separately
under those permissions, but the entire Program remains governed by
this License without regard to the additional permissions.

  When you convey a copy of a covered work, you may at your option
remove any additional permissions from that copy, or from any part of
it.  (Additional permissions may be written to require their own
removal in certain cases when you modify the work.)  You may place
additional permissions on material, added by you to a covered work,
for which you have or can give appropriate copyright permission.

  Notwithstanding any other provision of this License, for material you
add to a covered work, you may (if authorized by the copyright holders of
that material) supplement the terms of this License with terms:

    a) Disclaiming warranty or limiting liability differently from the
    terms of sections 15 and 16 of this License; or

    b) Requiring preservation of specified reasonable legal notices or
    author attributions in that material or in the Appropriate Legal
    Notices displayed by works containing it; or

    c) Prohibiting misrepresentation of the origin of that material, or
    requiring that modified versions of such material be marked in
    reasonable ways as different from the original version; or

    d) Limiting the use for publicity purposes of names of licensors or
    authors of the material; or

    e) Declining to grant rights under trademark law for use of some
    trade names, trademarks, or service marks; or

    f) Requiring indemnification of licensors and authors of that
    material by anyone who conveys the material (or modified versions of
    it) with contractual assumptions of liability to the recipient, for
    any liability that these contractual assumptions directly impose on
    those licensors and authors.

  All other non-permissive additional terms are considered 'further
restrictions' within the meaning of section 10.  If the Program as you
received it, or any part of it, contains a notice stating that it is
governed by this License along with a term that is a further
restriction, you may remove that term.  If a license document contains
a further restriction but permits relicensing or conveying under this
License, you may add to a covered work material governed by the terms
of that license document, provided that the further restriction does
not survive such relicensing or conveying.

  If you add terms to a covered work in accord with this section, you
must place, in the relevant source files, a statement of the
additional terms that apply to those files, or a notice indicating
where to find the applicable terms.

  Additional terms, permissive or non-permissive, may be stated in the
form of a separately written license, or stated as exceptions;
the above requirements apply either way.

  8. Termination.

  You may not propagate or modify a covered work except as expressly
provided under this License.  Any attempt otherwise to propagate or
modify it is void, and will automatically terminate your rights under
this License (including any patent licenses granted under the third
paragraph of section 11).

  However, if you cease all violation of this License, then your
license from a particular copyright holder is reinstated (a)
provisionally, unless and until the copyright holder explicitly and
finally terminates your license, and (b) permanently, if the copyright
holder fails to notify you of the violation by some reasonable means
prior to 60 days after the cessation.

  Moreover, your license from a particular copyright holder is
reinstated permanently if the copyright holder notifies you of the
violation by some reasonable means, this is the first time you have
received notice of violation of this License (for any work) from that
copyright holder, and you cure the violation prior to 30 days after
your receipt of the notice.

  Termination of your rights under this section does not terminate the
licenses of parties who have received copies or rights from you under
this License.  If your rights have been terminated and not permanently
reinstated, you do not qualify to receive new licenses for the same
material under section 10.

  9. Acceptance Not Required for Having Copies.

  You are not required to accept this License in order to receive or
run a copy of the Program.  Ancillary propagation of a covered work
occurring solely as a consequence of using peer-to-peer transmission
to receive a copy likewise does not require acceptance.  However,
nothing other than this License grants you permission to propagate or
modify any covered work.  These actions infringe copyright if you do
not accept this License.  Therefore, by modifying or propagating a
covered work, you indicate your acceptance of this License to do so.

  10. Automatic Licensing of Downstream Recipients.

  Each time you convey a covered work, the recipient automatically
receives a license from the original licensors, to run, modify and
propagate that work, subject to this License.  You are not responsible
for enforcing compliance by third parties with this License.

  An 'entity transaction' is a transaction transferring control of an
organization, or substantially all assets of one, or subdividing an
organization, or merging organizations.  If propagation of a covered
work results from an entity transaction, each party to that
transaction who receives a copy of the work also receives whatever
licenses to the work the party's predecessor in interest had or could
give under the previous paragraph, plus a right to possession of the
Corresponding Source of the work from the predecessor in interest, if
the predecessor has it or can get it with reasonable efforts.

  You may not impose any further restrictions on the exercise of the
rights granted or affirmed under this License.  For example, you may
not impose a license fee, royalty, or other charge for exercise of
rights granted under this License, and you may not initiate litigation
(including a cross-claim or counterclaim in a lawsuit) alleging that
any patent claim is infringed by making, using, selling, offering for
sale, or importing the Program or any portion of it.

  11. Patents.

  A 'contributor' is a copyright holder who authorizes use under this
License of the Program or a work on which the Program is based.  The
work thus licensed is called the contributor's 'contributor version'.

  A contributor's 'essential patent claims' are all patent claims
owned or controlled by the contributor, whether already acquired or
hereafter acquired, that would be infringed by some manner, permitted
by this License, of making, using, or selling its contributor version,
but do not include claims that would be infringed only as a
consequence of further modification of the contributor version.  For
purposes of this definition, 'control' includes the right to grant
patent sublicenses in a manner consistent with the requirements of
this License.

  Each contributor grants you a non-exclusive, worldwide, royalty-free
patent license under the contributor's essential patent claims, to
make, use, sell, offer for sale, import and otherwise run, modify and
propagate the contents of its contributor version.

  In the following three paragraphs, a 'patent license' is any express
agreement or commitment, however denominated, not to enforce a patent
(such as an express permission to practice a patent or covenant not to
sue for patent infringement).  To 'grant' such a patent license to a
party means to make such an agreement or commitment not to enforce a
patent against the party.

  If you convey a covered work, knowingly relying on a patent license,
and the Corresponding Source of the work is not available for anyone
to copy, free of charge and under the terms of this License, through a
publicly available network server or other readily accessible means,
then you must either (1) cause the Corresponding Source to be so
available, or (2) arrange to deprive yourself of the benefit of the
patent license for this particular work, or (3) arrange, in a manner
consistent with the requirements of this License, to extend the patent
license to downstream recipients.  'Knowingly relying' means you have
actual knowledge that, but for the patent license, your conveying the
covered work in a country, or your recipient's use of the covered work
in a country, would infringe one or more identifiable patents in that
country that you have reason to believe are valid.

  If, pursuant to or in connection with a single transaction or
arrangement, you convey, or propagate by procuring conveyance of, a
covered work, and grant a patent license to some of the parties
receiving the covered work authorizing them to use, propagate, modify
or convey a specific copy of the covered work, then the patent license
you grant is automatically extended to all recipients of the covered
work and works based on it.

  A patent license is 'discriminatory' if it does not include within
the scope of its coverage, prohibits the exercise of, or is
conditioned on the non-exercise of one or more of the rights that are
specifically granted under this License.  You may not convey a covered
work if you are a party to an arrangement with a third party that is
in the business of distributing software, under which you make payment
to the third party based on the extent of your activity of conveying
the work, and under which the third party grants, to any of the
parties who would receive the covered work from you, a discriminatory
patent license (a) in connection with copies of the covered work
conveyed by you (or copies made from those copies), or (b) primarily
for and in connection with specific products or compilations that
contain the covered work, unless you entered into that arrangement,
or that patent license was granted, prior to 28 March 2007.

  Nothing in this License shall be construed as excluding or limiting
any implied license or other defenses to infringement that may
otherwise be available to you under applicable patent law.

  12. No Surrender of Others' Freedom.

  If conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot convey a
covered work so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you may
not convey it at all.  For example, if you agree to terms that obligate you
to collect a royalty for further conveying from those to whom you convey
the Program, the only way you could satisfy both those terms and this
License would be to refrain entirely from conveying the Program.

  13. Use with the GNU Affero General Public License.

  Notwithstanding any other provision of this License, you have
permission to link or combine any covered work with a work licensed
under version 3 of the GNU Affero General Public License into a single
combined work, and to convey the resulting work.  The terms of this
License will continue to apply to the part which is the covered work,
but the special requirements of the GNU Affero General Public License,
section 13, concerning interaction through a network will apply to the
combination as such.

  14. Revised Versions of this License.

  The Free Software Foundation may publish revised and/or new versions of
the GNU General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

  Each version is given a distinguishing version number.  If the
Program specifies that a certain numbered version of the GNU General
Public License 'or any later version' applies to it, you have the
option of following the terms and conditions either of that numbered
version or of any later version published by the Free Software
Foundation.  If the Program does not specify a version number of the
GNU General Public License, you may choose any version ever published
by the Free Software Foundation.

  If the Program specifies that a proxy can decide which future
versions of the GNU General Public License can be used, that proxy's
public statement of acceptance of a version permanently authorizes you
to choose that version for the Program.

  Later license versions may give you additional or different
permissions.  However, no additional obligations are imposed on any
author or copyright holder as a result of your choosing to follow a
later version.

  15. Disclaimer of Warranty.

  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM 'AS IS' WITHOUT WARRANTY
OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

  16. Limitation of Liability.

  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
SUCH DAMAGES.

  17. Interpretation of Sections 15 and 16.

  If the disclaimer of warranty and limitation of liability provided
above cannot be given local legal effect according to their terms,
reviewing courts shall apply local law that most closely approximates
an absolute waiver of all civil liability in connection with the
Program, unless a warranty or assumption of liability accompanies a
copy of the Program in return for a fee.

                     END OF TERMS AND CONDITIONS

            How to Apply These Terms to Your New Programs

  If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

  To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
state the exclusion of warranty; and each file should have at least
the 'copyright' line and a pointer to where the full notice is found.

    <one line to give the program's name and a brief idea of what it does.>
    Copyright (C) <year>  <name of author>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

Also add information on how to contact you by electronic and paper mail.

  If the program does terminal interaction, make it output a short
notice like this when it starts in an interactive mode:

    <program>  Copyright (C) <year>  <name of author>
    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
    This is free software, and you are welcome to redistribute it
    under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, your program's commands
might be different; for a GUI interface, you would use an 'about box'.

  You should also get your employer (if you work as a programmer) or school,
if any, to sign a 'copyright disclaimer' for the program, if necessary.
For more information on this, and how to apply and follow the GNU GPL, see
<https://www.gnu.org/licenses/>.

  The GNU General Public License does not permit incorporating your program
into proprietary programs.  If your program is a subroutine library, you
may consider it more useful to permit linking proprietary applications with
the library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.  But first, please read
<https://www.gnu.org/licenses/why-not-lgpl.html>.


================================================
File: app.py
================================================
from langchain_openai import ChatOpenAI
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser ##Default Ouput Parser for LLM

import streamlit as st
import os
from dotenv import load_dotenv

load_dotenv()  ##Loads the .env files


## Langmith tracking
os.environ['LANGCHAIN_TRACING_V2']='true'
os.environ['LANGCHAIN_API_KEY']=os.getenv('LANGCHAIN_API_KEY')

## Prompt Template

prompt=ChatPromptTemplate.from_messages(
    [
        ('system','You are a helpful assistant. Please response to the user queries'),
        ('user','Question:{question}')
    ]
)

## streamlit framework

st.title('Langchain Demo With OPENAI API')
input_text=st.text_input('Search the topic u want')

# openAI LLM 
llm=ChatOpenAI(model='gpt-3.5-turbo')
output_parser=StrOutputParser()
chain=prompt|llm|output_parser

if input_text:
    st.write(chain.invoke({'question':input_text}))

================================================
File: localama.py
================================================
from langchain_openai import ChatOpenAI
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser
from langchain_community.llms import Ollama
import streamlit as st
import os
from dotenv import load_dotenv

load_dotenv()

os.environ['LANGCHAIN_TRACING_V2']='true'
os.environ['LANGCHAIN_API_KEY']=os.getenv('LANGCHAIN_API_KEY')

## Prompt Template

prompt=ChatPromptTemplate.from_messages(
    [
        ('system','You are a helpful assistant. Please response to the user queries'),
        ('user','Question:{question}')
    ]
)
## streamlit framework

st.title('Langchain Demo With LLAMA2 API')
input_text=st.text_input('Search the topic u want')

# ollama LLAma2 LLm 
llm=Ollama(model='llama2')
output_parser=StrOutputParser()
chain=prompt|llm|output_parser

if input_text:
    st.write(chain.invoke({'question':input_text}))

================================================
File: requirements.txt
================================================
langchain_openai 
langchain_core
python-dotenv
streamlit
langchain_community


"
    },
    "MLProject": {
        "description": null,
        "readme": "
================================================
File: README.md
================================================
## End to End ML Projects

================================================
File: application.py
================================================
from flask import Flask,request,render_template
import numpy as np
import pandas as pd

from sklearn.preprocessing import StandardScaler
from src.pipeline.predict_pipeline import CustomData,PredictPipeline

application=Flask(__name__) ## Creates an entry point

app=application

## Route for a home page

@app.route('/')
def index():
    return render_template('index.html') 

@app.route('/predictdata',methods=['GET','POST'])
def predict_datapoint():
    if request.method=='GET': ##Here we are getting the input values 
        return render_template('home.html')
    else:                     ## Here in the else block we are doing POST action after which we are mapping to data and calculating standard scaling and pediction
        data=CustomData(
            gender=request.form.get('gender'),
            race_ethnicity=request.form.get('ethnicity'),
            parental_level_of_education=request.form.get('parental_level_of_education'),
            lunch=request.form.get('lunch'),
            test_preparation_course=request.form.get('test_preparation_course'),
            reading_score=float(request.form.get('writing_score')),
            writing_score=float(request.form.get('reading_score'))

        )
        pred_df=data.get_data_as_data_frame()
        print(pred_df)

        predict_pipeline=PredictPipeline()
        results=predict_pipeline.predict(pred_df)
        return render_template('home.html',results=results[0])
    

if __name__=='__main__':
    app.run(host='0.0.0.0')

================================================
File: requirements.txt
================================================
pandas
numpy
seaborn
matplotlib
scikit-learn
catboost
xgboost
dill
Flask
#-e .

================================================
File: setup.py
================================================
from setuptools import find_packages,setup
from typing import List

HYPEN_E_DOT='-e .'
def get_requirements(file_path:str)->List[str]:
    '''
    this function will return the list of requirements
    '''
    requirements=[]
    with open(file_path) as file_obj:
        requirements=file_obj.readlines()
        requirements=[req.replace('\n','') for req in requirements]

        if HYPEN_E_DOT in requirements:
            requirements.remove(HYPEN_E_DOT)
    
    return requirements

setup(
name='MLProject',
version='0.0.1',
author='Parthi',
author_email='rparthiban729@gmail.com',
packages=find_packages(),
install_requires=get_requirements('requirements.txt')

)

================================================
File: artifacts/data.csv
================================================
gender,race_ethnicity,parental_level_of_education,lunch,test_preparation_course,math_score,reading_score,writing_score
female,group B,bachelor's degree,standard,none,72,72,74
female,group C,some college,standard,completed,69,90,88
female,group B,master's degree,standard,none,90,95,93
male,group A,associate's degree,free/reduced,none,47,57,44
male,group C,some college,standard,none,76,78,75
female,group B,associate's degree,standard,none,71,83,78
female,group B,some college,standard,completed,88,95,92
male,group B,some college,free/reduced,none,40,43,39
male,group D,high school,free/reduced,completed,64,64,67
female,group B,high school,free/reduced,none,38,60,50
male,group C,associate's degree,standard,none,58,54,52
male,group D,associate's degree,standard,none,40,52,43
female,group B,high school,standard,none,65,81,73
male,group A,some college,standard,completed,78,72,70
female,group A,master's degree,standard,none,50,53,58
female,group C,some high school,standard,none,69,75,78
male,group C,high school,standard,none,88,89,86
female,group B,some high school,free/reduced,none,18,32,28
male,group C,master's degree,free/reduced,completed,46,42,46
female,group C,associate's degree,free/reduced,none,54,58,61
male,group D,high school,standard,none,66,69,63
female,group B,some college,free/reduced,completed,65,75,70
male,group D,some college,standard,none,44,54,53
female,group C,some high school,standard,none,69,73,73
male,group D,bachelor's degree,free/reduced,completed,74,71,80
male,group A,master's degree,free/reduced,none,73,74,72
male,group B,some college,standard,none,69,54,55
female,group C,bachelor's degree,standard,none,67,69,75
male,group C,high school,standard,none,70,70,65
female,group D,master's degree,standard,none,62,70,75
female,group D,some college,standard,none,69,74,74
female,group B,some college,standard,none,63,65,61
female,group E,master's degree,free/reduced,none,56,72,65
male,group D,some college,standard,none,40,42,38
male,group E,some college,standard,none,97,87,82
male,group E,associate's degree,standard,completed,81,81,79
female,group D,associate's degree,standard,none,74,81,83
female,group D,some high school,free/reduced,none,50,64,59
female,group D,associate's degree,free/reduced,completed,75,90,88
male,group B,associate's degree,free/reduced,none,57,56,57
male,group C,associate's degree,free/reduced,none,55,61,54
female,group C,associate's degree,standard,none,58,73,68
female,group B,associate's degree,standard,none,53,58,65
male,group B,some college,free/reduced,completed,59,65,66
female,group E,associate's degree,free/reduced,none,50,56,54
male,group B,associate's degree,standard,none,65,54,57
female,group A,associate's degree,standard,completed,55,65,62
female,group C,high school,standard,none,66,71,76
female,group D,associate's degree,free/reduced,completed,57,74,76
male,group C,high school,standard,completed,82,84,82
male,group E,some college,standard,none,53,55,48
male,group E,associate's degree,free/reduced,completed,77,69,68
male,group C,some college,standard,none,53,44,42
male,group D,high school,standard,none,88,78,75
female,group C,some high school,free/reduced,completed,71,84,87
female,group C,high school,free/reduced,none,33,41,43
female,group E,associate's degree,standard,completed,82,85,86
male,group D,associate's degree,standard,none,52,55,49
male,group D,some college,standard,completed,58,59,58
female,group C,some high school,free/reduced,none,0,17,10
male,group E,bachelor's degree,free/reduced,completed,79,74,72
male,group A,some high school,free/reduced,none,39,39,34
male,group A,associate's degree,free/reduced,none,62,61,55
female,group C,associate's degree,standard,none,69,80,71
female,group D,some high school,standard,none,59,58,59
male,group B,some high school,standard,none,67,64,61
male,group D,some high school,free/reduced,none,45,37,37
female,group C,some college,standard,none,60,72,74
male,group B,associate's degree,free/reduced,none,61,58,56
female,group C,associate's degree,standard,none,39,64,57
female,group D,some college,free/reduced,completed,58,63,73
male,group D,some college,standard,completed,63,55,63
female,group A,associate's degree,free/reduced,none,41,51,48
male,group C,some high school,free/reduced,none,61,57,56
male,group C,some high school,standard,none,49,49,41
male,group B,associate's degree,free/reduced,none,44,41,38
male,group E,some high school,standard,none,30,26,22
male,group A,bachelor's degree,standard,completed,80,78,81
female,group D,some high school,standard,completed,61,74,72
female,group E,master's degree,standard,none,62,68,68
female,group B,associate's degree,standard,none,47,49,50
male,group B,high school,free/reduced,none,49,45,45
male,group A,some college,free/reduced,completed,50,47,54
male,group E,associate's degree,standard,none,72,64,63
male,group D,high school,free/reduced,none,42,39,34
female,group C,some college,standard,none,73,80,82
female,group C,some college,free/reduced,none,76,83,88
female,group D,associate's degree,standard,none,71,71,74
female,group A,some college,standard,none,58,70,67
female,group D,some high school,standard,none,73,86,82
female,group C,bachelor's degree,standard,none,65,72,74
male,group C,high school,free/reduced,none,27,34,36
male,group C,high school,standard,none,71,79,71
male,group C,associate's degree,free/reduced,completed,43,45,50
female,group B,some college,standard,none,79,86,92
male,group C,associate's degree,free/reduced,completed,78,81,82
male,group B,some high school,standard,completed,65,66,62
female,group E,some college,standard,completed,63,72,70
female,group D,some college,free/reduced,none,58,67,62
female,group D,bachelor's degree,standard,none,65,67,62
male,group B,some college,standard,none,79,67,67
male,group D,bachelor's degree,standard,completed,68,74,74
female,group D,associate's degree,standard,none,85,91,89
male,group B,high school,standard,completed,60,44,47
male,group C,some college,standard,completed,98,86,90
female,group C,some college,standard,none,58,67,72
female,group D,master's degree,standard,none,87,100,100
male,group E,associate's degree,standard,completed,66,63,64
female,group B,associate's degree,free/reduced,none,52,76,70
female,group B,some high school,standard,none,70,64,72
female,group D,associate's degree,free/reduced,completed,77,89,98
male,group C,high school,standard,none,62,55,49
male,group A,associate's degree,standard,none,54,53,47
female,group D,some college,standard,none,51,58,54
female,group E,bachelor's degree,standard,completed,99,100,100
male,group C,high school,standard,none,84,77,74
female,group B,bachelor's degree,free/reduced,none,75,85,82
female,group D,bachelor's degree,standard,none,78,82,79
female,group D,some high school,standard,none,51,63,61
female,group C,some college,standard,none,55,69,65
female,group C,bachelor's degree,standard,completed,79,92,89
male,group B,associate's degree,standard,completed,91,89,92
female,group C,some college,standard,completed,88,93,93
male,group D,high school,free/reduced,none,63,57,56
male,group E,some college,standard,none,83,80,73
female,group B,high school,standard,none,87,95,86
male,group B,some high school,standard,none,72,68,67
male,group D,some college,standard,completed,65,77,74
male,group D,master's degree,standard,none,82,82,74
female,group A,bachelor's degree,standard,none,51,49,51
male,group D,master's degree,standard,none,89,84,82
male,group C,some high school,free/reduced,completed,53,37,40
male,group E,some college,free/reduced,completed,87,74,70
female,group C,some college,standard,completed,75,81,84
male,group D,bachelor's degree,free/reduced,completed,74,79,75
male,group C,bachelor's degree,standard,none,58,55,48
male,group B,some high school,standard,completed,51,54,41
male,group E,high school,standard,none,70,55,56
female,group C,associate's degree,standard,none,59,66,67
male,group D,some college,standard,completed,71,61,69
female,group D,some high school,standard,none,76,72,71
female,group C,some college,free/reduced,none,59,62,64
female,group E,some college,free/reduced,completed,42,55,54
male,group A,high school,standard,none,57,43,47
male,group D,some college,standard,none,88,73,78
female,group C,some college,free/reduced,none,22,39,33
male,group B,some high school,standard,none,88,84,75
male,group C,associate's degree,free/reduced,none,73,68,66
female,group D,bachelor's degree,standard,completed,68,75,81
male,group E,associate's degree,free/reduced,completed,100,100,93
male,group A,some high school,standard,completed,62,67,69
male,group A,bachelor's degree,standard,none,77,67,68
female,group B,associate's degree,standard,completed,59,70,66
male,group D,bachelor's degree,standard,none,54,49,47
male,group D,some high school,standard,none,62,67,61
female,group C,some college,standard,completed,70,89,88
female,group E,high school,free/reduced,completed,66,74,78
male,group B,some college,free/reduced,none,60,60,60
female,group B,associate's degree,standard,completed,61,86,87
male,group D,associate's degree,free/reduced,none,66,62,64
male,group B,associate's degree,free/reduced,completed,82,78,74
female,group E,some college,free/reduced,completed,75,88,85
male,group B,master's degree,free/reduced,none,49,53,52
male,group C,high school,standard,none,52,53,49
female,group E,master's degree,standard,none,81,92,91
female,group C,bachelor's degree,standard,completed,96,100,100
male,group C,high school,free/reduced,completed,53,51,51
female,group B,master's degree,free/reduced,completed,58,76,78
female,group B,high school,standard,completed,68,83,78
female,group C,some college,free/reduced,completed,67,75,70
male,group A,high school,standard,completed,72,73,74
male,group E,some high school,standard,none,94,88,78
female,group D,some college,standard,none,79,86,81
female,group C,associate's degree,standard,none,63,67,70
female,group C,bachelor's degree,free/reduced,completed,43,51,54
female,group C,master's degree,standard,completed,81,91,87
female,group B,high school,free/reduced,completed,46,54,58
female,group C,associate's degree,standard,completed,71,77,77
female,group B,master's degree,free/reduced,completed,52,70,62
female,group D,some high school,standard,completed,97,100,100
male,group C,master's degree,free/reduced,completed,62,68,75
female,group C,some college,free/reduced,none,46,64,66
female,group E,high school,standard,none,50,50,47
female,group D,associate's degree,standard,none,65,69,70
male,group C,some high school,free/reduced,completed,45,52,49
male,group C,associate's degree,free/reduced,completed,65,67,65
male,group E,high school,standard,none,80,76,65
male,group D,some high school,standard,completed,62,66,68
male,group B,some high school,free/reduced,none,48,52,45
female,group C,bachelor's degree,standard,none,77,88,87
female,group E,associate's degree,standard,none,66,65,69
male,group D,some college,standard,completed,76,83,79
female,group B,some high school,standard,none,62,64,66
male,group D,some college,standard,completed,77,62,62
female,group C,master's degree,standard,completed,69,84,85
male,group D,associate's degree,standard,none,61,55,52
male,group C,some high school,free/reduced,completed,59,69,65
male,group E,high school,free/reduced,none,55,56,51
female,group B,some college,free/reduced,none,45,53,55
female,group B,bachelor's degree,free/reduced,none,78,79,76
female,group C,associate's degree,standard,completed,67,84,86
female,group D,some college,free/reduced,none,65,81,77
male,group C,associate's degree,standard,none,69,77,69
female,group B,associate's degree,standard,none,57,69,68
male,group C,some college,standard,none,59,41,42
male,group D,some high school,standard,completed,74,71,78
male,group E,bachelor's degree,standard,none,82,62,62
male,group E,high school,standard,completed,81,80,76
female,group B,some college,free/reduced,none,74,81,76
female,group B,some college,free/reduced,none,58,61,66
male,group D,some high school,free/reduced,completed,80,79,79
male,group C,some college,free/reduced,none,35,28,27
female,group C,high school,free/reduced,none,42,62,60
male,group C,associate's degree,free/reduced,completed,60,51,56
male,group E,high school,standard,completed,87,91,81
male,group B,some high school,standard,completed,84,83,75
female,group E,associate's degree,free/reduced,completed,83,86,88
female,group C,high school,free/reduced,none,34,42,39
male,group B,high school,free/reduced,none,66,77,70
male,group B,some high school,standard,completed,61,56,56
female,group D,high school,standard,completed,56,68,74
male,group B,associate's degree,standard,none,87,85,73
female,group C,some high school,free/reduced,none,55,65,62
male,group D,some high school,standard,none,86,80,75
female,group B,associate's degree,standard,completed,52,66,73
female,group E,master's degree,free/reduced,none,45,56,54
female,group C,some college,standard,none,72,72,71
male,group D,high school,standard,none,57,50,54
male,group A,some high school,free/reduced,none,68,72,64
female,group C,some college,standard,completed,88,95,94
male,group D,some college,standard,none,76,64,66
male,group C,associate's degree,standard,none,46,43,42
female,group B,bachelor's degree,standard,none,67,86,83
male,group E,some high school,standard,none,92,87,78
male,group C,bachelor's degree,standard,completed,83,82,84
male,group D,associate's degree,standard,none,80,75,77
male,group D,bachelor's degree,free/reduced,none,63,66,67
female,group D,some high school,standard,completed,64,60,74
male,group B,some college,standard,none,54,52,51
male,group C,associate's degree,standard,none,84,80,80
male,group D,high school,free/reduced,completed,73,68,66
female,group E,bachelor's degree,standard,none,80,83,83
female,group D,high school,standard,none,56,52,55
male,group E,some college,standard,none,59,51,43
male,group D,some high school,standard,none,75,74,69
male,group C,associate's degree,standard,none,85,76,71
male,group E,associate's degree,standard,none,89,76,74
female,group B,high school,standard,completed,58,70,68
female,group B,high school,standard,none,65,64,62
male,group C,high school,standard,none,68,60,53
male,group A,some high school,standard,completed,47,49,49
female,group D,some college,free/reduced,none,71,83,83
female,group B,some high school,standard,completed,60,70,70
male,group D,master's degree,standard,none,80,80,72
male,group D,high school,standard,none,54,52,52
female,group E,some college,standard,none,62,73,70
female,group C,associate's degree,free/reduced,none,64,73,68
male,group C,associate's degree,standard,completed,78,77,77
female,group B,some college,standard,none,70,75,78
female,group C,master's degree,free/reduced,completed,65,81,81
female,group C,some high school,free/reduced,completed,64,79,77
male,group C,some college,standard,completed,79,79,78
female,group C,some high school,free/reduced,none,44,50,51
female,group E,high school,standard,none,99,93,90
male,group D,high school,standard,none,76,73,68
male,group D,some high school,free/reduced,none,59,42,41
female,group C,bachelor's degree,standard,none,63,75,81
female,group D,high school,standard,none,69,72,77
female,group D,associate's degree,standard,completed,88,92,95
female,group E,some college,free/reduced,none,71,76,70
male,group C,bachelor's degree,standard,none,69,63,61
male,group C,some college,standard,none,58,49,42
female,group D,associate's degree,free/reduced,none,47,53,58
female,group D,some college,standard,none,65,70,71
male,group B,some college,standard,completed,88,85,76
male,group C,bachelor's degree,standard,none,83,78,73
female,group C,some high school,standard,completed,85,92,93
female,group E,high school,standard,completed,59,63,75
female,group C,some high school,free/reduced,none,65,86,80
male,group B,bachelor's degree,free/reduced,none,73,56,57
male,group D,high school,standard,none,53,52,42
male,group D,high school,standard,none,45,48,46
female,group D,bachelor's degree,free/reduced,none,73,79,84
female,group D,some college,free/reduced,completed,70,78,78
female,group B,some high school,standard,none,37,46,46
male,group B,associate's degree,standard,completed,81,82,82
male,group E,associate's degree,standard,completed,97,82,88
female,group B,some high school,standard,none,67,89,82
male,group B,bachelor's degree,free/reduced,none,88,75,76
male,group E,some high school,standard,completed,77,76,77
male,group C,associate's degree,standard,none,76,70,68
male,group D,some high school,standard,none,86,73,70
male,group C,some high school,standard,completed,63,60,57
female,group E,bachelor's degree,standard,none,65,73,75
male,group D,high school,free/reduced,completed,78,77,80
male,group B,associate's degree,free/reduced,none,67,62,60
male,group A,some high school,standard,completed,46,41,43
male,group E,associate's degree,standard,completed,71,74,68
male,group C,high school,free/reduced,completed,40,46,50
male,group D,associate's degree,free/reduced,none,90,87,75
male,group A,some college,free/reduced,completed,81,78,81
male,group D,some high school,free/reduced,none,56,54,52
female,group C,associate's degree,standard,completed,67,84,81
male,group B,associate's degree,standard,none,80,76,64
female,group C,associate's degree,standard,completed,74,75,83
male,group A,some college,standard,none,69,67,69
male,group E,some college,standard,completed,99,87,81
male,group C,some high school,standard,none,51,52,44
female,group B,associate's degree,free/reduced,none,53,71,67
female,group D,high school,free/reduced,none,49,57,52
female,group B,associate's degree,standard,none,73,76,80
male,group B,bachelor's degree,standard,none,66,60,57
male,group D,bachelor's degree,standard,completed,67,61,68
female,group C,associate's degree,free/reduced,completed,68,67,69
female,group C,bachelor's degree,standard,completed,59,64,75
male,group C,high school,standard,none,71,66,65
female,group D,master's degree,standard,completed,77,82,91
male,group C,associate's degree,standard,none,83,72,78
male,group B,bachelor's degree,standard,none,63,71,69
female,group D,associate's degree,free/reduced,none,56,65,63
female,group C,high school,free/reduced,completed,67,79,84
female,group E,high school,standard,none,75,86,79
female,group C,some college,standard,none,71,81,80
female,group C,some high school,free/reduced,none,43,53,53
female,group C,high school,free/reduced,none,41,46,43
female,group C,some college,standard,none,82,90,94
male,group C,some college,standard,none,61,61,62
male,group A,some college,free/reduced,none,28,23,19
male,group C,associate's degree,standard,completed,82,75,77
female,group B,some high school,standard,none,41,55,51
male,group C,high school,standard,none,71,60,61
male,group C,associate's degree,standard,none,47,37,35
male,group E,associate's degree,standard,completed,62,56,53
male,group B,associate's degree,standard,none,90,78,81
female,group C,bachelor's degree,standard,none,83,93,95
female,group B,some college,free/reduced,none,61,68,66
male,group D,some high school,standard,completed,76,70,69
male,group C,associate's degree,standard,none,49,51,43
female,group B,some high school,free/reduced,none,24,38,27
female,group D,some high school,free/reduced,completed,35,55,60
male,group C,high school,free/reduced,none,58,61,52
female,group C,high school,standard,none,61,73,63
female,group B,high school,standard,completed,69,76,74
male,group D,associate's degree,standard,completed,67,72,67
male,group D,some college,standard,none,79,73,67
female,group C,high school,standard,none,72,80,75
male,group B,some college,standard,none,62,61,57
female,group C,bachelor's degree,standard,completed,77,94,95
male,group D,high school,free/reduced,none,75,74,66
male,group E,associate's degree,standard,none,87,74,76
female,group B,bachelor's degree,standard,none,52,65,69
male,group E,some college,standard,none,66,57,52
female,group C,some college,standard,completed,63,78,80
female,group C,associate's degree,standard,none,46,58,57
female,group C,some college,standard,none,59,71,70
female,group B,bachelor's degree,standard,none,61,72,70
male,group A,associate's degree,standard,none,63,61,61
female,group C,some college,free/reduced,completed,42,66,69
male,group D,some college,free/reduced,none,59,62,61
female,group D,some college,standard,none,80,90,89
female,group B,high school,standard,none,58,62,59
male,group B,some high school,standard,completed,85,84,78
female,group C,some college,standard,none,52,58,58
female,group D,some high school,free/reduced,none,27,34,32
male,group C,some college,standard,none,59,60,58
male,group A,bachelor's degree,free/reduced,completed,49,58,60
male,group C,high school,standard,completed,69,58,53
male,group C,bachelor's degree,free/reduced,none,61,66,61
female,group A,some high school,free/reduced,none,44,64,58
female,group D,some high school,standard,none,73,84,85
male,group E,some college,standard,none,84,77,71
female,group C,some college,free/reduced,completed,45,73,70
male,group D,some high school,standard,none,74,74,72
female,group D,some college,standard,completed,82,97,96
female,group D,bachelor's degree,standard,none,59,70,73
male,group E,associate's degree,free/reduced,none,46,43,41
female,group D,some high school,standard,none,80,90,82
female,group D,master's degree,free/reduced,completed,85,95,100
female,group A,some high school,standard,none,71,83,77
male,group A,bachelor's degree,standard,none,66,64,62
female,group B,associate's degree,standard,none,80,86,83
male,group C,associate's degree,standard,completed,87,100,95
male,group C,master's degree,free/reduced,none,79,81,71
female,group E,some high school,free/reduced,none,38,49,45
female,group A,some high school,free/reduced,none,38,43,43
female,group E,some college,standard,none,67,76,75
female,group E,bachelor's degree,standard,none,64,73,70
female,group C,associate's degree,free/reduced,none,57,78,67
female,group D,high school,standard,none,62,64,64
male,group D,master's degree,standard,none,73,70,75
male,group E,some high school,free/reduced,completed,73,67,59
female,group D,some college,standard,none,77,68,77
male,group E,some college,standard,none,76,67,67
male,group C,associate's degree,standard,completed,57,54,56
female,group C,some high school,standard,completed,65,74,77
male,group A,high school,free/reduced,none,48,45,41
female,group B,high school,free/reduced,none,50,67,63
female,group C,associate's degree,standard,none,85,89,95
male,group B,some high school,standard,none,74,63,57
male,group D,some high school,standard,none,60,59,54
female,group C,some high school,standard,completed,59,54,67
male,group A,some college,standard,none,53,43,43
female,group A,some college,free/reduced,none,49,65,55
female,group D,high school,standard,completed,88,99,100
female,group C,high school,standard,none,54,59,62
female,group C,some high school,standard,none,63,73,68
male,group B,associate's degree,standard,completed,65,65,63
female,group B,associate's degree,standard,none,82,80,77
female,group D,high school,free/reduced,completed,52,57,56
male,group D,associate's degree,standard,completed,87,84,85
female,group D,master's degree,standard,completed,70,71,74
male,group E,some college,standard,completed,84,83,78
male,group D,associate's degree,standard,none,71,66,60
male,group B,some high school,standard,completed,63,67,67
female,group C,bachelor's degree,free/reduced,completed,51,72,79
male,group E,high school,standard,none,84,73,69
male,group C,bachelor's degree,standard,completed,71,74,68
male,group C,associate's degree,standard,none,74,73,67
male,group D,some college,standard,none,68,59,62
male,group E,high school,free/reduced,completed,57,56,54
female,group C,associate's degree,free/reduced,completed,82,93,93
female,group D,high school,standard,completed,57,58,64
female,group D,master's degree,free/reduced,completed,47,58,67
female,group A,some high school,standard,completed,59,85,80
male,group B,some college,free/reduced,none,41,39,34
female,group C,some college,free/reduced,none,62,67,62
male,group C,bachelor's degree,standard,none,86,83,86
male,group C,some high school,free/reduced,none,69,71,65
male,group A,some high school,free/reduced,none,65,59,53
male,group C,some high school,free/reduced,none,68,63,54
male,group C,associate's degree,free/reduced,none,64,66,59
female,group C,high school,standard,none,61,72,70
male,group C,high school,standard,none,61,56,55
female,group A,some high school,free/reduced,none,47,59,50
male,group C,some high school,standard,none,73,66,66
male,group C,some college,free/reduced,completed,50,48,53
male,group D,associate's degree,standard,none,75,68,64
male,group D,associate's degree,free/reduced,none,75,66,73
male,group C,high school,standard,none,70,56,51
male,group D,some high school,standard,completed,89,88,82
female,group C,some college,standard,completed,67,81,79
female,group D,high school,standard,none,78,81,80
female,group A,some high school,free/reduced,none,59,73,69
female,group B,associate's degree,standard,none,73,83,76
male,group A,some high school,free/reduced,none,79,82,73
female,group C,some high school,standard,completed,67,74,77
male,group D,some college,free/reduced,none,69,66,60
male,group C,high school,standard,completed,86,81,80
male,group B,high school,standard,none,47,46,42
male,group B,associate's degree,standard,none,81,73,72
female,group C,some college,free/reduced,completed,64,85,85
female,group E,some college,standard,none,100,92,97
female,group C,associate's degree,free/reduced,none,65,77,74
male,group C,some college,free/reduced,none,65,58,49
female,group C,associate's degree,free/reduced,none,53,61,62
male,group C,bachelor's degree,free/reduced,none,37,56,47
female,group D,bachelor's degree,standard,none,79,89,89
male,group D,associate's degree,free/reduced,none,53,54,48
female,group E,bachelor's degree,standard,none,100,100,100
male,group B,high school,standard,completed,72,65,68
male,group C,bachelor's degree,free/reduced,none,53,58,55
male,group B,some college,free/reduced,none,54,54,45
female,group E,some college,standard,none,71,70,76
female,group C,some college,free/reduced,none,77,90,91
male,group A,bachelor's degree,standard,completed,75,58,62
female,group C,some college,standard,none,84,87,91
female,group D,associate's degree,free/reduced,none,26,31,38
male,group A,high school,free/reduced,completed,72,67,65
female,group A,high school,free/reduced,completed,77,88,85
male,group C,some college,standard,none,91,74,76
female,group C,associate's degree,standard,completed,83,85,90
female,group C,high school,standard,none,63,69,74
female,group C,associate's degree,standard,completed,68,86,84
female,group D,some high school,standard,none,59,67,61
female,group B,associate's degree,standard,completed,90,90,91
female,group D,bachelor's degree,standard,completed,71,76,83
male,group E,bachelor's degree,standard,completed,76,62,66
male,group D,associate's degree,standard,none,80,68,72
female,group D,master's degree,standard,none,55,64,70
male,group E,associate's degree,standard,none,76,71,67
male,group B,high school,standard,completed,73,71,68
female,group D,associate's degree,free/reduced,none,52,59,56
male,group C,some college,free/reduced,none,68,68,61
male,group A,high school,standard,none,59,52,46
female,group B,associate's degree,standard,none,49,52,54
male,group C,high school,standard,none,70,74,71
male,group D,some college,free/reduced,none,61,47,56
female,group C,associate's degree,free/reduced,none,60,75,74
male,group B,some high school,standard,completed,64,53,57
male,group A,associate's degree,free/reduced,completed,79,82,82
female,group A,associate's degree,free/reduced,none,65,85,76
female,group C,associate's degree,standard,none,64,64,70
female,group C,some college,standard,none,83,83,90
female,group C,bachelor's degree,standard,none,81,88,90
female,group B,high school,standard,none,54,64,68
male,group D,high school,standard,completed,68,64,66
female,group C,some college,standard,none,54,48,52
female,group D,some college,free/reduced,completed,59,78,76
female,group B,some high school,standard,none,66,69,68
male,group E,some college,standard,none,76,71,72
female,group D,master's degree,standard,none,74,79,82
female,group B,associate's degree,standard,completed,94,87,92
male,group C,some college,free/reduced,none,63,61,54
female,group E,associate's degree,standard,completed,95,89,92
female,group D,master's degree,free/reduced,none,40,59,54
female,group B,some high school,standard,none,82,82,80
male,group A,high school,standard,none,68,70,66
male,group B,bachelor's degree,free/reduced,none,55,59,54
male,group C,master's degree,standard,none,79,78,77
female,group C,bachelor's degree,standard,none,86,92,87
male,group D,some college,standard,none,76,71,73
male,group A,some high school,standard,none,64,50,43
male,group D,some high school,free/reduced,none,62,49,52
female,group B,some high school,standard,completed,54,61,62
female,group B,master's degree,free/reduced,completed,77,97,94
female,group C,some high school,standard,completed,76,87,85
female,group D,some college,standard,none,74,89,84
female,group E,some college,standard,completed,66,74,73
female,group D,some high school,standard,completed,66,78,78
female,group B,high school,free/reduced,completed,67,78,79
male,group D,some college,standard,none,71,49,52
female,group C,associate's degree,standard,none,91,86,84
male,group D,bachelor's degree,standard,none,69,58,57
male,group C,master's degree,free/reduced,none,54,59,50
male,group C,high school,standard,completed,53,52,49
male,group E,some college,standard,none,68,60,59
male,group C,some high school,free/reduced,completed,56,61,60
female,group C,high school,free/reduced,none,36,53,43
female,group D,bachelor's degree,free/reduced,none,29,41,47
female,group C,associate's degree,standard,none,62,74,70
female,group C,associate's degree,standard,completed,68,67,73
female,group C,some high school,standard,none,47,54,53
male,group E,associate's degree,standard,completed,62,61,58
female,group E,associate's degree,standard,completed,79,88,94
male,group B,high school,standard,completed,73,69,68
female,group C,bachelor's degree,free/reduced,completed,66,83,83
male,group C,associate's degree,standard,completed,51,60,58
female,group D,high school,standard,none,51,66,62
male,group E,bachelor's degree,standard,completed,85,66,71
male,group A,associate's degree,standard,completed,97,92,86
male,group C,high school,standard,completed,75,69,68
male,group D,associate's degree,free/reduced,completed,79,82,80
female,group C,associate's degree,standard,none,81,77,79
female,group D,associate's degree,standard,none,82,95,89
female,group D,master's degree,standard,none,64,63,66
male,group E,some high school,free/reduced,completed,78,83,80
female,group A,some high school,standard,completed,92,100,97
male,group C,high school,standard,completed,72,67,64
female,group C,high school,free/reduced,none,62,67,64
male,group C,master's degree,standard,none,79,72,69
male,group C,some high school,free/reduced,none,79,76,65
male,group B,bachelor's degree,free/reduced,completed,87,90,88
female,group B,associate's degree,standard,none,40,48,50
male,group D,some college,free/reduced,none,77,62,64
male,group E,associate's degree,standard,none,53,45,40
female,group C,some college,free/reduced,none,32,39,33
female,group C,associate's degree,standard,completed,55,72,79
male,group C,master's degree,free/reduced,none,61,67,66
female,group B,associate's degree,free/reduced,none,53,70,70
male,group D,some high school,standard,none,73,66,62
female,group D,some college,standard,completed,74,75,79
female,group C,some college,standard,none,63,74,74
male,group C,bachelor's degree,standard,completed,96,90,92
female,group D,some college,free/reduced,completed,63,80,80
male,group B,bachelor's degree,free/reduced,none,48,51,46
male,group B,associate's degree,standard,none,48,43,45
female,group E,bachelor's degree,free/reduced,completed,92,100,100
female,group D,master's degree,free/reduced,completed,61,71,78
male,group B,high school,free/reduced,none,63,48,47
male,group D,bachelor's degree,free/reduced,none,68,68,67
male,group B,some college,standard,completed,71,75,70
male,group A,bachelor's degree,standard,none,91,96,92
female,group C,some college,standard,none,53,62,56
female,group C,high school,free/reduced,completed,50,66,64
female,group E,high school,standard,none,74,81,71
male,group A,associate's degree,free/reduced,completed,40,55,53
male,group A,some college,standard,completed,61,51,52
female,group B,high school,standard,none,81,91,89
female,group B,some college,free/reduced,completed,48,56,58
female,group D,master's degree,standard,none,53,61,68
female,group D,some high school,standard,none,81,97,96
female,group E,some high school,standard,none,77,79,80
female,group D,bachelor's degree,free/reduced,none,63,73,78
female,group D,associate's degree,standard,completed,73,75,80
female,group D,some college,standard,none,69,77,77
female,group C,associate's degree,standard,none,65,76,76
female,group A,high school,standard,none,55,73,73
female,group C,bachelor's degree,free/reduced,none,44,63,62
female,group C,some college,standard,none,54,64,65
female,group A,some high school,standard,none,48,66,65
male,group C,some college,free/reduced,none,58,57,54
male,group A,some high school,standard,none,71,62,50
male,group E,bachelor's degree,standard,none,68,68,64
female,group E,high school,standard,none,74,76,73
female,group C,bachelor's degree,standard,completed,92,100,99
female,group C,bachelor's degree,standard,completed,56,79,72
male,group B,high school,free/reduced,none,30,24,15
male,group A,some high school,standard,none,53,54,48
female,group D,high school,standard,none,69,77,73
female,group D,some high school,standard,none,65,82,81
female,group D,master's degree,standard,none,54,60,63
female,group C,high school,standard,none,29,29,30
female,group E,some college,standard,none,76,78,80
male,group D,high school,free/reduced,none,60,57,51
male,group D,master's degree,free/reduced,completed,84,89,90
male,group C,some high school,standard,none,75,72,62
female,group C,associate's degree,standard,none,85,84,82
female,group C,master's degree,free/reduced,none,40,58,54
female,group E,some college,standard,none,61,64,62
female,group B,associate's degree,standard,none,58,63,65
male,group D,some college,free/reduced,completed,69,60,63
female,group C,some college,standard,none,58,59,66
male,group C,bachelor's degree,standard,completed,94,90,91
female,group C,associate's degree,standard,none,65,77,74
female,group A,associate's degree,standard,none,82,93,93
female,group C,high school,standard,none,60,68,72
female,group E,bachelor's degree,standard,none,37,45,38
male,group D,bachelor's degree,standard,none,88,78,83
male,group D,master's degree,standard,none,95,81,84
male,group C,associate's degree,free/reduced,completed,65,73,68
female,group C,high school,free/reduced,none,35,61,54
male,group B,bachelor's degree,free/reduced,none,62,63,56
male,group C,high school,free/reduced,completed,58,51,52
male,group A,some college,standard,completed,100,96,86
female,group E,bachelor's degree,free/reduced,none,61,58,62
male,group D,some college,standard,completed,100,97,99
male,group B,associate's degree,free/reduced,completed,69,70,63
male,group D,associate's degree,standard,none,61,48,46
male,group D,some college,free/reduced,none,49,57,46
female,group C,some high school,standard,completed,44,51,55
male,group D,some college,standard,none,67,64,70
male,group B,high school,standard,none,79,60,65
female,group B,bachelor's degree,standard,completed,66,74,81
female,group C,high school,standard,none,75,88,85
male,group D,some high school,standard,none,84,84,80
male,group A,high school,standard,none,71,74,64
female,group B,high school,free/reduced,completed,67,80,81
female,group D,some high school,standard,completed,80,92,88
male,group E,some college,standard,none,86,76,74
female,group D,associate's degree,standard,none,76,74,73
male,group D,high school,standard,none,41,52,51
female,group D,associate's degree,free/reduced,completed,74,88,90
female,group B,some high school,free/reduced,none,72,81,79
female,group E,high school,standard,completed,74,79,80
male,group B,high school,standard,none,70,65,60
female,group B,bachelor's degree,standard,completed,65,81,81
female,group D,associate's degree,standard,none,59,70,65
female,group E,high school,free/reduced,none,64,62,68
female,group B,high school,standard,none,50,53,55
female,group D,some college,standard,completed,69,79,81
male,group C,some high school,free/reduced,completed,51,56,53
female,group A,high school,standard,completed,68,80,76
female,group D,some college,standard,completed,85,86,98
female,group A,associate's degree,standard,completed,65,70,74
female,group B,some high school,standard,none,73,79,79
female,group B,some college,standard,none,62,67,67
male,group C,associate's degree,free/reduced,none,77,67,64
male,group D,some high school,standard,none,69,66,61
female,group D,associate's degree,free/reduced,none,43,60,58
male,group D,associate's degree,standard,none,90,87,85
male,group C,some college,free/reduced,none,74,77,73
male,group C,some high school,standard,none,73,66,63
female,group D,some college,free/reduced,none,55,71,69
female,group C,high school,standard,none,65,69,67
male,group D,associate's degree,standard,none,80,63,63
female,group C,some high school,free/reduced,completed,50,60,60
female,group C,some college,free/reduced,completed,63,73,71
female,group B,bachelor's degree,free/reduced,none,77,85,87
male,group C,some college,standard,none,73,74,61
male,group D,associate's degree,standard,completed,81,72,77
female,group C,high school,free/reduced,none,66,76,68
male,group D,associate's degree,free/reduced,none,52,57,50
female,group C,some college,standard,none,69,78,76
female,group C,associate's degree,standard,completed,65,84,84
female,group D,high school,standard,completed,69,77,78
female,group B,some college,standard,completed,50,64,66
female,group E,some college,standard,completed,73,78,76
female,group C,some high school,standard,completed,70,82,76
male,group D,associate's degree,free/reduced,none,81,75,78
male,group D,some college,free/reduced,none,63,61,60
female,group D,high school,standard,none,67,72,74
male,group B,high school,standard,none,60,68,60
male,group B,high school,standard,none,62,55,54
female,group C,some high school,free/reduced,completed,29,40,44
male,group B,some college,standard,completed,62,66,68
female,group E,master's degree,standard,completed,94,99,100
male,group E,some college,standard,completed,85,75,68
male,group D,associate's degree,free/reduced,none,77,78,73
male,group A,high school,free/reduced,none,53,58,44
male,group E,some college,free/reduced,none,93,90,83
female,group C,associate's degree,standard,none,49,53,53
female,group E,associate's degree,free/reduced,none,73,76,78
female,group C,bachelor's degree,free/reduced,completed,66,74,81
female,group D,associate's degree,standard,none,77,77,73
female,group C,some high school,standard,none,49,63,56
female,group D,some college,free/reduced,none,79,89,86
female,group C,associate's degree,standard,completed,75,82,90
female,group A,bachelor's degree,standard,none,59,72,70
female,group D,associate's degree,standard,completed,57,78,79
male,group C,high school,free/reduced,none,66,66,59
female,group E,bachelor's degree,standard,completed,79,81,82
female,group B,some high school,standard,none,57,67,72
male,group A,bachelor's degree,standard,completed,87,84,87
female,group D,some college,standard,none,63,64,67
female,group B,some high school,free/reduced,completed,59,63,64
male,group A,bachelor's degree,free/reduced,none,62,72,65
male,group D,high school,standard,none,46,34,36
male,group C,some college,standard,none,66,59,52
male,group D,high school,standard,none,89,87,79
female,group D,associate's degree,free/reduced,completed,42,61,58
male,group C,some college,standard,completed,93,84,90
female,group E,some high school,standard,completed,80,85,85
female,group D,some college,standard,none,98,100,99
male,group D,master's degree,standard,none,81,81,84
female,group B,some high school,standard,completed,60,70,74
female,group B,associate's degree,free/reduced,completed,76,94,87
male,group C,associate's degree,standard,completed,73,78,72
female,group C,associate's degree,standard,completed,96,96,99
female,group C,high school,standard,none,76,76,74
male,group E,associate's degree,free/reduced,completed,91,73,80
female,group C,some college,free/reduced,none,62,72,70
male,group D,some high school,free/reduced,completed,55,59,59
female,group B,some high school,free/reduced,completed,74,90,88
male,group C,high school,standard,none,50,48,42
male,group B,some college,standard,none,47,43,41
male,group E,some college,standard,completed,81,74,71
female,group E,associate's degree,standard,completed,65,75,77
male,group E,some high school,standard,completed,68,51,57
female,group D,high school,free/reduced,none,73,92,84
male,group C,some college,standard,none,53,39,37
female,group B,associate's degree,free/reduced,completed,68,77,80
male,group A,some high school,free/reduced,none,55,46,43
female,group C,some college,standard,completed,87,89,94
male,group D,some high school,standard,none,55,47,44
female,group E,some college,free/reduced,none,53,58,57
male,group C,master's degree,standard,none,67,57,59
male,group C,associate's degree,standard,none,92,79,84
female,group B,some college,free/reduced,completed,53,66,73
male,group D,associate's degree,standard,none,81,71,73
male,group C,high school,free/reduced,none,61,60,55
male,group D,bachelor's degree,standard,none,80,73,72
female,group A,associate's degree,free/reduced,none,37,57,56
female,group C,high school,standard,none,81,84,82
female,group C,associate's degree,standard,completed,59,73,72
male,group B,some college,free/reduced,none,55,55,47
male,group D,associate's degree,standard,none,72,79,74
male,group D,high school,standard,none,69,75,71
male,group C,some college,standard,none,69,64,68
female,group C,bachelor's degree,free/reduced,none,50,60,59
male,group B,some college,standard,completed,87,84,86
male,group D,some high school,standard,completed,71,69,68
male,group E,some college,standard,none,68,72,65
male,group C,master's degree,free/reduced,completed,79,77,75
female,group C,some high school,standard,completed,77,90,85
male,group C,associate's degree,free/reduced,none,58,55,53
female,group E,associate's degree,standard,none,84,95,92
male,group D,some college,standard,none,55,58,52
male,group E,bachelor's degree,free/reduced,completed,70,68,72
female,group D,some college,free/reduced,completed,52,59,65
male,group B,some college,standard,completed,69,77,77
female,group C,high school,free/reduced,none,53,72,64
female,group D,some high school,standard,none,48,58,54
male,group D,some high school,standard,completed,78,81,86
female,group B,high school,standard,none,62,62,63
male,group D,some college,standard,none,60,63,59
female,group B,high school,standard,none,74,72,72
female,group C,high school,standard,completed,58,75,77
male,group B,high school,standard,completed,76,62,60
female,group D,some high school,standard,none,68,71,75
male,group A,some college,free/reduced,none,58,60,57
male,group B,high school,standard,none,52,48,49
male,group D,bachelor's degree,standard,none,75,73,74
female,group B,some high school,free/reduced,completed,52,67,72
female,group C,bachelor's degree,free/reduced,none,62,78,79
male,group B,some college,standard,none,66,65,60
female,group B,some high school,free/reduced,none,49,58,55
female,group B,high school,standard,none,66,72,70
female,group C,some college,free/reduced,none,35,44,43
female,group A,some college,standard,completed,72,79,82
male,group E,associate's degree,standard,completed,94,85,82
female,group D,associate's degree,free/reduced,none,46,56,57
female,group B,master's degree,standard,none,77,90,84
female,group B,high school,free/reduced,completed,76,85,82
female,group C,associate's degree,standard,completed,52,59,62
male,group C,bachelor's degree,standard,completed,91,81,79
female,group B,some high school,standard,completed,32,51,44
female,group E,some high school,free/reduced,none,72,79,77
female,group B,some college,standard,none,19,38,32
male,group C,associate's degree,free/reduced,none,68,65,61
female,group C,master's degree,free/reduced,none,52,65,61
female,group B,high school,standard,none,48,62,60
female,group D,some college,free/reduced,none,60,66,70
male,group D,high school,free/reduced,none,66,74,69
male,group E,some high school,standard,completed,89,84,77
female,group B,high school,standard,none,42,52,51
female,group E,associate's degree,free/reduced,completed,57,68,73
male,group D,high school,standard,none,70,70,70
female,group E,associate's degree,free/reduced,none,70,84,81
male,group E,some college,standard,none,69,60,54
female,group C,associate's degree,standard,none,52,55,57
male,group C,some high school,standard,completed,67,73,68
male,group C,some high school,standard,completed,76,80,73
female,group E,associate's degree,standard,none,87,94,95
female,group B,some college,standard,none,82,85,87
female,group C,some college,standard,none,73,76,78
male,group A,some college,free/reduced,none,75,81,74
female,group D,some college,free/reduced,none,64,74,75
female,group E,high school,free/reduced,none,41,45,40
male,group C,high school,standard,none,90,75,69
male,group B,bachelor's degree,standard,none,59,54,51
male,group A,some high school,standard,none,51,31,36
male,group A,high school,free/reduced,none,45,47,49
female,group C,master's degree,standard,completed,54,64,67
male,group E,some high school,standard,completed,87,84,76
female,group C,high school,standard,none,72,80,83
male,group B,some high school,standard,completed,94,86,87
female,group A,bachelor's degree,standard,none,45,59,64
male,group D,bachelor's degree,free/reduced,completed,61,70,76
female,group B,high school,free/reduced,none,60,72,68
female,group C,some high school,standard,none,77,91,88
female,group A,some high school,standard,completed,85,90,92
female,group D,bachelor's degree,free/reduced,none,78,90,93
male,group E,some college,free/reduced,completed,49,52,51
female,group B,high school,free/reduced,none,71,87,82
female,group C,some high school,free/reduced,none,48,58,52
male,group C,high school,standard,none,62,67,58
female,group C,associate's degree,free/reduced,completed,56,68,70
female,group C,some high school,standard,none,65,69,76
female,group D,some high school,free/reduced,completed,69,86,81
male,group B,some high school,standard,none,68,54,53
female,group A,some college,free/reduced,none,61,60,57
female,group C,bachelor's degree,free/reduced,completed,74,86,89
male,group A,bachelor's degree,standard,none,64,60,58
female,group B,high school,standard,completed,77,82,89
male,group B,some college,standard,none,58,50,45
female,group C,high school,standard,completed,60,64,74
male,group E,high school,standard,none,73,64,57
female,group A,high school,standard,completed,75,82,79
male,group B,associate's degree,free/reduced,completed,58,57,53
female,group C,associate's degree,standard,none,66,77,73
female,group D,high school,free/reduced,none,39,52,46
male,group C,some high school,standard,none,64,58,51
female,group B,high school,free/reduced,completed,23,44,36
male,group B,some college,free/reduced,completed,74,77,76
female,group D,some high school,free/reduced,completed,40,65,64
male,group E,master's degree,standard,none,90,85,84
male,group C,master's degree,standard,completed,91,85,85
male,group D,high school,standard,none,64,54,50
female,group C,high school,standard,none,59,72,68
male,group D,associate's degree,standard,none,80,75,69
male,group C,master's degree,standard,none,71,67,67
female,group A,high school,standard,none,61,68,63
female,group E,some college,standard,none,87,85,93
male,group E,some high school,standard,none,82,67,61
male,group C,some high school,standard,none,62,64,55
female,group B,bachelor's degree,standard,none,97,97,96
male,group B,some college,free/reduced,none,75,68,65
female,group C,bachelor's degree,standard,none,65,79,81
male,group B,high school,standard,completed,52,49,46
male,group C,associate's degree,free/reduced,none,87,73,72
female,group C,associate's degree,standard,none,53,62,53
female,group E,master's degree,free/reduced,none,81,86,87
male,group D,bachelor's degree,free/reduced,completed,39,42,38
female,group C,some college,standard,completed,71,71,80
male,group C,associate's degree,standard,none,97,93,91
male,group D,some college,standard,completed,82,82,88
male,group C,high school,free/reduced,none,59,53,52
male,group B,associate's degree,standard,none,61,42,41
male,group E,associate's degree,free/reduced,completed,78,74,72
male,group C,associate's degree,free/reduced,none,49,51,51
male,group B,high school,standard,none,59,58,47
female,group C,some college,standard,completed,70,72,76
male,group B,associate's degree,standard,completed,82,84,78
male,group E,associate's degree,free/reduced,none,90,90,82
female,group C,bachelor's degree,free/reduced,none,43,62,61
male,group C,some college,free/reduced,none,80,64,66
male,group D,some college,standard,none,81,82,84
male,group C,some high school,standard,none,57,61,54
female,group D,some high school,standard,none,59,72,80
female,group D,associate's degree,standard,none,64,76,74
male,group C,bachelor's degree,standard,completed,63,64,66
female,group E,bachelor's degree,standard,completed,71,70,70
female,group B,high school,free/reduced,none,64,73,71
male,group D,bachelor's degree,free/reduced,none,55,46,44
female,group E,associate's degree,standard,none,51,51,54
female,group C,associate's degree,standard,completed,62,76,80
female,group E,associate's degree,standard,completed,93,100,95
male,group C,high school,free/reduced,none,54,72,59
female,group D,some college,free/reduced,none,69,65,74
male,group D,high school,free/reduced,none,44,51,48
female,group E,some college,standard,completed,86,85,91
female,group E,associate's degree,standard,none,85,92,85
female,group A,master's degree,free/reduced,none,50,67,73
male,group D,some high school,standard,completed,88,74,75
female,group E,associate's degree,standard,none,59,62,69
female,group E,some high school,free/reduced,none,32,34,38
male,group B,high school,free/reduced,none,36,29,27
female,group B,some high school,free/reduced,completed,63,78,79
male,group D,associate's degree,standard,completed,67,54,63
female,group D,some high school,standard,completed,65,78,82
male,group D,master's degree,standard,none,85,84,89
female,group C,master's degree,standard,none,73,78,74
female,group A,high school,free/reduced,completed,34,48,41
female,group D,bachelor's degree,free/reduced,completed,93,100,100
female,group D,some high school,free/reduced,none,67,84,84
male,group D,some college,standard,none,88,77,77
male,group B,high school,standard,none,57,48,51
female,group D,some college,standard,completed,79,84,91
female,group C,bachelor's degree,free/reduced,none,67,75,72
male,group E,bachelor's degree,standard,completed,70,64,70
male,group D,bachelor's degree,free/reduced,none,50,42,48
female,group A,some college,standard,none,69,84,82
female,group C,bachelor's degree,standard,completed,52,61,66
female,group C,bachelor's degree,free/reduced,completed,47,62,66
female,group B,associate's degree,free/reduced,none,46,61,55
female,group E,some college,standard,none,68,70,66
male,group E,bachelor's degree,standard,completed,100,100,100
female,group C,high school,standard,none,44,61,52
female,group C,associate's degree,standard,completed,57,77,80
male,group B,some college,standard,completed,91,96,91
male,group D,high school,free/reduced,none,69,70,67
female,group C,high school,free/reduced,none,35,53,46
male,group D,high school,standard,none,72,66,66
female,group B,associate's degree,free/reduced,none,54,65,65
male,group D,high school,free/reduced,none,74,70,69
male,group E,some high school,standard,completed,74,64,60
male,group E,associate's degree,free/reduced,none,64,56,52
female,group D,high school,free/reduced,completed,65,61,71
male,group E,associate's degree,free/reduced,completed,46,43,44
female,group C,some high school,free/reduced,none,48,56,51
male,group C,some college,free/reduced,completed,67,74,70
male,group D,some college,free/reduced,none,62,57,62
male,group D,associate's degree,free/reduced,completed,61,71,73
male,group C,bachelor's degree,free/reduced,completed,70,75,74
male,group C,associate's degree,standard,completed,98,87,90
male,group D,some college,free/reduced,none,70,63,58
male,group A,associate's degree,standard,none,67,57,53
female,group E,high school,free/reduced,none,57,58,57
male,group D,some college,standard,completed,85,81,85
male,group D,some high school,standard,completed,77,68,69
male,group C,master's degree,free/reduced,completed,72,66,72
female,group D,master's degree,standard,none,78,91,96
male,group C,high school,standard,none,81,66,64
male,group A,some high school,free/reduced,completed,61,62,61
female,group B,high school,standard,none,58,68,61
female,group C,associate's degree,standard,none,54,61,58
male,group B,high school,standard,none,82,82,80
female,group D,some college,free/reduced,none,49,58,60
male,group B,some high school,free/reduced,completed,49,50,52
female,group E,high school,free/reduced,completed,57,75,73
male,group E,high school,standard,none,94,73,71
female,group D,some college,standard,completed,75,77,83
female,group E,some high school,free/reduced,none,74,74,72
male,group C,high school,standard,completed,58,52,54
female,group C,some college,standard,none,62,69,69
male,group E,associate's degree,standard,none,72,57,62
male,group C,some college,standard,none,84,87,81
female,group D,master's degree,standard,none,92,100,100
female,group D,high school,standard,none,45,63,59
male,group C,high school,standard,none,75,81,71
female,group A,some college,standard,none,56,58,64
female,group D,some high school,free/reduced,none,48,54,53
female,group E,associate's degree,standard,none,100,100,100
female,group C,some high school,free/reduced,completed,65,76,75
male,group D,some college,standard,none,72,57,58
female,group D,some college,standard,none,62,70,72
male,group A,some high school,standard,completed,66,68,64
male,group C,some college,standard,none,63,63,60
female,group E,associate's degree,standard,none,68,76,67
female,group B,bachelor's degree,standard,none,75,84,80
female,group D,bachelor's degree,standard,none,89,100,100
male,group C,some high school,standard,completed,78,72,69
female,group A,high school,free/reduced,completed,53,50,60
female,group D,some college,free/reduced,none,49,65,61
female,group A,some college,standard,none,54,63,67
female,group C,some college,standard,completed,64,82,77
male,group B,some college,free/reduced,completed,60,62,60
male,group C,associate's degree,standard,none,62,65,58
male,group D,high school,standard,completed,55,41,48
female,group C,associate's degree,standard,none,91,95,94
female,group B,high school,free/reduced,none,8,24,23
male,group D,some high school,standard,none,81,78,78
male,group B,some high school,standard,completed,79,85,86
female,group A,some college,standard,completed,78,87,91
female,group C,some high school,standard,none,74,75,82
male,group A,high school,standard,none,57,51,54
female,group C,associate's degree,standard,none,40,59,51
male,group E,some high school,standard,completed,81,75,76
female,group A,some high school,free/reduced,none,44,45,45
female,group D,some college,free/reduced,completed,67,86,83
male,group E,high school,free/reduced,completed,86,81,75
female,group B,some high school,standard,completed,65,82,78
female,group D,associate's degree,free/reduced,none,55,76,76
female,group D,bachelor's degree,free/reduced,none,62,72,74
male,group A,high school,standard,none,63,63,62
female,group E,master's degree,standard,completed,88,99,95
male,group C,high school,free/reduced,none,62,55,55
female,group C,high school,free/reduced,completed,59,71,65
female,group D,some college,standard,completed,68,78,77
female,group D,some college,free/reduced,none,77,86,86


================================================
File: artifacts/test.csv
================================================
gender,race_ethnicity,parental_level_of_education,lunch,test_preparation_course,math_score,reading_score,writing_score
female,group C,associate's degree,standard,none,91,86,84
female,group B,some college,free/reduced,completed,53,66,73
male,group D,bachelor's degree,standard,none,80,73,72
male,group C,some college,free/reduced,none,74,77,73
male,group E,some college,standard,completed,84,83,78
male,group D,associate's degree,free/reduced,none,81,75,78
male,group B,associate's degree,free/reduced,completed,69,70,63
female,group B,some high school,standard,completed,54,61,62
male,group C,associate's degree,free/reduced,none,87,73,72
male,group B,some high school,standard,completed,51,54,41
male,group A,high school,free/reduced,none,45,47,49
male,group E,some high school,standard,none,30,26,22
female,group B,high school,free/reduced,completed,67,80,81
female,group D,some college,free/reduced,none,49,65,61
male,group D,some college,standard,completed,85,81,85
female,group D,some high school,standard,completed,65,78,82
male,group D,high school,standard,none,53,52,42
male,group D,bachelor's degree,free/reduced,none,55,46,44
female,group D,some high school,standard,none,48,58,54
female,group D,associate's degree,free/reduced,none,56,65,63
male,group C,master's degree,standard,none,79,72,69
female,group C,bachelor's degree,free/reduced,completed,43,51,54
female,group C,some college,free/reduced,completed,45,73,70
female,group C,high school,free/reduced,none,36,53,43
male,group D,some high school,free/reduced,completed,80,79,79
male,group D,associate's degree,standard,none,80,75,77
male,group D,bachelor's degree,standard,completed,68,74,74
female,group C,associate's degree,standard,none,40,59,51
female,group A,high school,free/reduced,completed,34,48,41
female,group D,some college,free/reduced,none,49,58,60
male,group B,some college,standard,none,62,61,57
male,group D,some college,standard,completed,71,61,69
male,group B,bachelor's degree,free/reduced,none,62,63,56
male,group E,some college,standard,none,76,71,72
male,group E,some college,standard,none,84,77,71
female,group B,some college,free/reduced,none,45,53,55
male,group D,associate's degree,free/reduced,none,77,78,73
female,group D,some college,standard,none,69,77,77
female,group C,master's degree,standard,none,73,78,74
female,group C,some high school,free/reduced,none,0,17,10
male,group C,associate's degree,standard,completed,82,75,77
male,group B,some high school,standard,completed,65,66,62
male,group D,bachelor's degree,standard,completed,67,61,68
female,group A,some college,standard,none,54,63,67
male,group D,associate's degree,free/reduced,none,90,87,75
female,group E,high school,standard,completed,59,63,75
male,group D,high school,free/reduced,none,74,70,69
female,group C,high school,standard,none,29,29,30
male,group D,some high school,standard,completed,89,88,82
female,group A,high school,standard,completed,75,82,79
male,group B,some college,standard,completed,71,75,70
female,group D,associate's degree,standard,none,64,76,74
male,group C,some college,standard,completed,79,79,78
female,group B,some college,free/reduced,completed,48,56,58
female,group C,some high school,standard,none,69,73,73
female,group D,some college,standard,none,69,74,74
male,group D,bachelor's degree,standard,none,88,78,83
male,group C,associate's degree,standard,none,58,54,52
male,group B,associate's degree,standard,none,87,85,73
female,group A,some high school,standard,completed,85,90,92
male,group A,some high school,standard,completed,46,41,43
female,group C,some high school,free/reduced,completed,71,84,87
female,group C,associate's degree,standard,none,81,77,79
female,group B,some college,free/reduced,none,58,61,66
male,group D,master's degree,free/reduced,completed,84,89,90
female,group C,bachelor's degree,free/reduced,completed,66,74,81
female,group D,some college,free/reduced,none,55,71,69
male,group C,high school,free/reduced,none,59,53,52
female,group D,some college,free/reduced,completed,58,63,73
female,group D,associate's degree,standard,none,82,95,89
male,group E,associate's degree,standard,completed,66,63,64
female,group C,bachelor's degree,standard,none,81,88,90
male,group C,some college,free/reduced,none,58,57,54
female,group A,associate's degree,free/reduced,none,37,57,56
male,group C,some high school,standard,completed,63,60,57
male,group E,some high school,standard,completed,77,76,77
female,group D,some college,standard,completed,85,86,98
male,group B,associate's degree,free/reduced,none,57,56,57
female,group A,some high school,standard,none,48,66,65
male,group C,some high school,standard,none,51,52,44
male,group D,some college,free/reduced,none,63,61,60
male,group D,some high school,free/reduced,none,45,37,37
male,group C,bachelor's degree,standard,none,83,78,73
female,group C,some college,standard,none,60,72,74
male,group B,bachelor's degree,standard,none,63,71,69
female,group C,high school,free/reduced,none,62,67,64
female,group D,some college,standard,completed,68,78,77
female,group B,some high school,standard,completed,60,70,74
female,group C,some high school,standard,completed,77,90,85
male,group A,some college,free/reduced,none,28,23,19
male,group C,master's degree,free/reduced,none,79,81,71
female,group E,some college,standard,none,100,92,97
male,group D,bachelor's degree,standard,none,69,58,57
male,group B,high school,free/reduced,none,66,77,70
female,group B,some college,standard,none,19,38,32
male,group D,associate's degree,standard,none,75,68,64
male,group D,some college,standard,none,60,63,59
female,group A,some college,standard,none,58,70,67
female,group C,associate's degree,standard,none,69,80,71
female,group C,associate's degree,free/reduced,completed,56,68,70
male,group C,associate's degree,standard,completed,73,78,72
male,group E,some college,standard,none,66,57,52
male,group A,associate's degree,standard,none,67,57,53
female,group C,associate's degree,free/reduced,none,64,73,68
male,group A,high school,standard,none,71,74,64
male,group B,high school,standard,none,70,65,60
male,group E,associate's degree,standard,none,53,45,40
male,group C,high school,standard,none,75,81,71
female,group B,high school,standard,completed,68,83,78
female,group C,high school,standard,none,44,61,52
female,group D,bachelor's degree,free/reduced,none,29,41,47
female,group B,high school,free/reduced,none,71,87,82
male,group A,high school,standard,none,57,51,54
female,group A,bachelor's degree,standard,none,45,59,64
female,group C,some college,free/reduced,none,76,83,88
male,group C,high school,standard,none,61,56,55
male,group C,some high school,free/reduced,completed,45,52,49
male,group D,high school,standard,completed,55,41,48
male,group B,high school,standard,completed,73,69,68
male,group D,high school,free/reduced,completed,78,77,80
female,group A,master's degree,free/reduced,none,50,67,73
female,group C,some college,free/reduced,none,62,67,62
male,group D,master's degree,standard,none,81,81,84
female,group C,some high school,free/reduced,completed,64,79,77
female,group D,some high school,standard,completed,64,60,74
male,group D,some high school,standard,none,73,66,62
female,group D,associate's degree,standard,completed,73,75,80
female,group C,some high school,standard,completed,67,74,77
male,group B,associate's degree,standard,none,61,42,41
male,group C,some high school,standard,completed,67,73,68
female,group D,some high school,standard,none,65,82,81
male,group D,associate's degree,standard,none,80,75,69
male,group D,some high school,free/reduced,none,59,42,41
female,group E,master's degree,standard,completed,88,99,95
female,group C,associate's degree,standard,none,62,74,70
female,group C,high school,free/reduced,none,33,41,43
female,group C,bachelor's degree,standard,completed,79,92,89
male,group B,some high school,standard,completed,84,83,75
male,group A,master's degree,free/reduced,none,73,74,72
female,group A,associate's degree,free/reduced,none,41,51,48
female,group E,associate's degree,free/reduced,none,50,56,54
female,group B,high school,standard,completed,58,70,68
male,group D,some high school,free/reduced,completed,55,59,59
male,group D,high school,standard,none,45,48,46
male,group D,some high school,standard,completed,88,74,75
female,group B,associate's degree,free/reduced,none,46,61,55
male,group A,some high school,standard,none,51,31,36
male,group D,some high school,standard,none,75,74,69
male,group E,some college,free/reduced,completed,49,52,51
female,group E,high school,standard,none,75,86,79
female,group E,high school,standard,completed,74,79,80
female,group B,associate's degree,standard,completed,61,86,87
male,group C,associate's degree,standard,none,62,65,58
male,group C,some high school,free/reduced,none,68,63,54
female,group D,master's degree,standard,none,78,91,96
female,group E,some college,standard,none,71,70,76
female,group D,high school,free/reduced,none,49,57,52
female,group A,bachelor's degree,standard,none,59,72,70
male,group E,bachelor's degree,free/reduced,completed,79,74,72
female,group E,associate's degree,standard,none,51,51,54
female,group C,bachelor's degree,standard,completed,56,79,72
male,group B,high school,standard,completed,76,62,60
female,group D,some college,standard,completed,69,79,81
male,group C,some high school,free/reduced,completed,51,56,53
male,group D,some college,standard,completed,82,82,88
male,group C,some college,standard,none,73,74,61
male,group C,high school,free/reduced,completed,40,46,50
male,group E,some college,free/reduced,none,93,90,83
female,group C,bachelor's degree,standard,completed,59,64,75
female,group B,associate's degree,standard,none,73,76,80
male,group B,some high school,standard,completed,85,84,78
male,group E,associate's degree,standard,none,76,71,67
female,group D,associate's degree,free/reduced,completed,77,89,98
female,group D,some college,free/reduced,completed,67,86,83
male,group D,some college,free/reduced,none,61,47,56
female,group D,some high school,free/reduced,none,27,34,32
male,group D,high school,standard,none,54,52,52
female,group C,master's degree,free/reduced,completed,65,81,81
female,group E,associate's degree,standard,none,87,94,95
female,group C,some high school,standard,completed,70,82,76
female,group B,high school,standard,none,54,64,68
female,group C,high school,free/reduced,none,66,76,68
female,group D,master's degree,free/reduced,completed,85,95,100
male,group C,some high school,free/reduced,completed,56,61,60
male,group E,master's degree,standard,none,90,85,84
male,group E,high school,standard,none,70,55,56
female,group B,bachelor's degree,standard,none,61,72,70
male,group A,bachelor's degree,free/reduced,completed,49,58,60
male,group C,high school,standard,none,81,66,64
male,group B,some college,standard,completed,87,84,86
male,group B,some high school,free/reduced,completed,49,50,52
male,group B,some high school,standard,none,68,54,53
male,group C,associate's degree,free/reduced,none,77,67,64
female,group B,bachelor's degree,free/reduced,none,78,79,76
male,group C,associate's degree,free/reduced,completed,60,51,56
female,group D,high school,free/reduced,completed,52,57,56
male,group E,associate's degree,standard,completed,62,56,53
female,group B,some college,free/reduced,none,74,81,76
female,group C,associate's degree,standard,none,65,77,74
female,group D,some high school,standard,completed,61,74,72


================================================
File: artifacts/train.csv
================================================
gender,race_ethnicity,parental_level_of_education,lunch,test_preparation_course,math_score,reading_score,writing_score
female,group D,master's degree,standard,none,62,70,75
female,group C,bachelor's degree,free/reduced,completed,66,83,83
female,group D,some college,free/reduced,none,79,89,86
male,group C,master's degree,free/reduced,none,61,67,66
male,group E,high school,standard,none,73,64,57
male,group B,high school,free/reduced,none,30,24,15
female,group C,bachelor's degree,standard,completed,96,100,100
female,group C,associate's degree,standard,completed,57,77,80
male,group D,high school,standard,completed,68,64,66
female,group C,some high school,free/reduced,none,48,58,52
male,group B,some high school,standard,none,67,64,61
female,group C,some college,free/reduced,none,59,62,64
male,group E,some high school,standard,completed,74,64,60
female,group C,some high school,standard,none,65,69,76
female,group B,some college,standard,none,62,67,67
male,group C,associate's degree,standard,none,47,37,35
male,group D,associate's degree,standard,none,80,63,63
male,group C,high school,standard,none,68,60,53
female,group D,some college,standard,completed,79,84,91
male,group D,high school,standard,none,89,87,79
male,group A,some college,standard,none,69,67,69
female,group E,some college,free/reduced,none,53,58,57
female,group C,some college,standard,completed,64,82,77
male,group C,high school,standard,completed,82,84,82
male,group B,high school,free/reduced,none,36,29,27
female,group B,master's degree,standard,none,90,95,93
female,group D,master's degree,standard,none,64,63,66
female,group B,bachelor's degree,standard,none,52,65,69
female,group D,some high school,free/reduced,none,67,84,84
male,group C,associate's degree,standard,completed,51,60,58
male,group D,some college,standard,none,79,73,67
male,group A,high school,standard,none,63,63,62
female,group D,associate's degree,free/reduced,none,52,59,56
male,group A,associate's degree,free/reduced,completed,40,55,53
male,group D,some college,standard,none,40,42,38
female,group B,some college,standard,none,63,65,61
male,group C,associate's degree,standard,none,46,43,42
female,group C,some high school,free/reduced,completed,65,76,75
female,group B,some high school,standard,none,62,64,66
male,group B,associate's degree,standard,none,90,78,81
male,group A,associate's degree,free/reduced,none,47,57,44
male,group C,some college,standard,none,59,41,42
female,group B,master's degree,free/reduced,completed,77,97,94
female,group C,associate's degree,standard,none,52,55,57
male,group E,some college,standard,completed,99,87,81
female,group B,some high school,standard,none,70,64,72
male,group C,associate's degree,free/reduced,none,64,66,59
male,group A,bachelor's degree,standard,completed,80,78,81
male,group D,high school,free/reduced,none,42,39,34
male,group E,associate's degree,standard,completed,97,82,88
male,group A,some college,free/reduced,completed,50,47,54
female,group B,some high school,standard,completed,65,82,78
female,group C,master's degree,free/reduced,none,52,65,61
female,group E,associate's degree,standard,none,59,62,69
male,group B,some high school,standard,none,74,63,57
female,group C,some high school,free/reduced,none,43,53,53
female,group B,high school,free/reduced,completed,67,78,79
male,group E,bachelor's degree,standard,completed,100,100,100
male,group D,high school,standard,none,72,66,66
female,group B,associate's degree,standard,none,71,83,78
male,group A,some high school,free/reduced,none,55,46,43
female,group C,some college,standard,none,84,87,91
female,group E,some college,standard,completed,63,72,70
female,group C,bachelor's degree,standard,none,63,75,81
female,group C,some college,free/reduced,completed,42,66,69
male,group E,associate's degree,free/reduced,completed,78,74,72
male,group E,some college,standard,none,69,60,54
female,group B,associate's degree,standard,none,80,86,83
male,group B,high school,standard,none,79,60,65
male,group C,associate's degree,standard,completed,87,100,95
female,group A,associate's degree,free/reduced,none,65,85,76
female,group D,some high school,standard,none,51,63,61
male,group D,master's degree,standard,none,85,84,89
male,group A,some high school,standard,completed,47,49,49
male,group C,master's degree,free/reduced,none,54,59,50
female,group B,high school,free/reduced,none,38,60,50
male,group C,some high school,free/reduced,completed,59,69,65
male,group D,high school,free/reduced,none,60,57,51
male,group B,high school,free/reduced,none,49,45,45
female,group C,associate's degree,standard,completed,52,59,62
female,group C,bachelor's degree,free/reduced,none,44,63,62
female,group E,associate's degree,free/reduced,none,70,84,81
male,group C,associate's degree,standard,none,84,80,80
male,group C,associate's degree,standard,none,76,70,68
male,group C,some college,free/reduced,none,35,28,27
female,group C,associate's degree,standard,completed,96,96,99
female,group D,some college,standard,none,80,90,89
male,group B,associate's degree,standard,none,81,73,72
male,group D,high school,standard,none,57,50,54
male,group E,high school,standard,none,94,73,71
male,group B,high school,standard,none,82,82,80
male,group D,high school,standard,none,70,70,70
female,group B,associate's degree,standard,completed,94,87,92
male,group A,bachelor's degree,standard,completed,75,58,62
female,group C,some college,standard,none,52,58,58
female,group A,high school,free/reduced,completed,77,88,85
male,group D,some college,free/reduced,none,70,63,58
male,group A,some high school,free/reduced,none,65,59,53
male,group B,some college,free/reduced,none,40,43,39
female,group C,some college,standard,completed,70,89,88
male,group D,associate's degree,free/reduced,completed,79,82,80
female,group C,some college,standard,completed,67,81,79
male,group C,some college,free/reduced,none,68,68,61
female,group D,master's degree,free/reduced,completed,47,58,67
female,group A,some college,standard,completed,72,79,82
female,group E,high school,free/reduced,completed,57,75,73
female,group C,bachelor's degree,standard,none,83,93,95
male,group A,some college,standard,completed,61,51,52
male,group C,associate's degree,standard,completed,98,87,90
female,group D,master's degree,free/reduced,completed,61,71,78
female,group C,bachelor's degree,standard,completed,92,100,99
female,group C,associate's degree,standard,completed,68,67,73
female,group E,some high school,standard,none,77,79,80
male,group C,some college,standard,none,66,59,52
male,group B,high school,standard,none,47,46,42
male,group C,some college,free/reduced,none,65,58,49
male,group A,some high school,free/reduced,none,68,72,64
female,group C,some college,standard,completed,63,78,80
female,group D,high school,free/reduced,none,73,92,84
female,group C,high school,free/reduced,none,42,62,60
female,group E,master's degree,standard,none,62,68,68
female,group D,bachelor's degree,standard,completed,68,75,81
female,group C,associate's degree,standard,completed,67,84,81
male,group D,some college,free/reduced,none,49,57,46
female,group C,some college,free/reduced,none,35,44,43
male,group A,high school,standard,none,68,70,66
female,group B,high school,standard,completed,69,76,74
male,group C,high school,standard,none,70,74,71
female,group E,some high school,standard,completed,80,85,85
female,group C,some college,standard,completed,75,81,84
female,group D,some college,standard,none,63,64,67
male,group B,bachelor's degree,standard,none,66,60,57
female,group B,some high school,free/reduced,completed,74,90,88
female,group C,some high school,standard,completed,44,51,55
female,group B,bachelor's degree,standard,none,72,72,74
female,group D,master's degree,standard,completed,77,82,91
male,group D,high school,standard,none,46,34,36
male,group C,high school,standard,completed,72,67,64
male,group B,associate's degree,standard,completed,82,84,78
male,group E,associate's degree,standard,completed,62,61,58
male,group D,associate's degree,standard,none,80,68,72
female,group C,high school,standard,none,54,59,62
female,group D,some college,standard,none,79,86,81
female,group B,high school,standard,none,87,95,86
female,group C,some high school,standard,completed,65,74,77
female,group C,associate's degree,free/reduced,completed,82,93,93
female,group B,associate's degree,standard,none,40,48,50
female,group D,bachelor's degree,free/reduced,completed,93,100,100
female,group C,bachelor's degree,standard,none,65,72,74
male,group D,some high school,standard,completed,77,68,69
female,group C,some college,free/reduced,none,46,64,66
male,group B,some college,standard,completed,88,85,76
female,group E,some high school,free/reduced,none,32,34,38
female,group C,associate's degree,standard,none,39,64,57
male,group D,some high school,standard,none,86,73,70
male,group C,some high school,free/reduced,completed,53,37,40
male,group A,some college,free/reduced,completed,81,78,81
male,group B,some college,free/reduced,none,41,39,34
male,group C,some college,standard,none,61,61,62
male,group D,some college,standard,none,88,73,78
female,group A,some high school,standard,completed,59,85,80
female,group D,some high school,standard,none,81,97,96
male,group C,bachelor's degree,standard,none,58,55,48
female,group C,some college,free/reduced,completed,64,85,85
female,group E,master's degree,standard,none,81,92,91
male,group C,high school,standard,none,70,70,65
female,group C,bachelor's degree,free/reduced,none,62,78,79
male,group D,some college,standard,completed,77,62,62
female,group D,high school,standard,none,62,64,64
female,group E,some college,standard,none,87,85,93
female,group C,some college,free/reduced,completed,67,75,70
male,group A,bachelor's degree,free/reduced,none,62,72,65
female,group D,some high school,standard,none,76,72,71
female,group C,associate's degree,standard,none,63,67,70
female,group B,some college,standard,completed,88,95,92
male,group D,associate's degree,standard,none,72,79,74
female,group D,master's degree,standard,none,55,64,70
male,group C,some high school,free/reduced,none,61,57,56
male,group D,bachelor's degree,free/reduced,none,50,42,48
male,group E,some high school,standard,completed,87,84,76
male,group B,some college,standard,none,54,52,51
female,group C,some college,free/reduced,none,22,39,33
male,group D,high school,free/reduced,none,66,74,69
male,group C,bachelor's degree,standard,completed,83,82,84
female,group D,high school,standard,completed,56,68,74
female,group B,associate's degree,free/reduced,none,54,65,65
female,group D,master's degree,standard,none,74,79,82
male,group E,some college,free/reduced,completed,87,74,70
male,group E,high school,free/reduced,completed,86,81,75
male,group B,some college,standard,none,66,65,60
male,group C,associate's degree,free/reduced,completed,65,67,65
female,group C,associate's degree,standard,none,58,73,68
female,group C,associate's degree,standard,completed,75,82,90
female,group B,associate's degree,free/reduced,none,52,76,70
female,group C,some college,standard,none,54,64,65
female,group E,associate's degree,standard,completed,82,85,86
female,group C,some high school,standard,none,63,73,68
female,group A,some high school,free/reduced,none,59,73,69
male,group E,bachelor's degree,free/reduced,completed,70,68,72
female,group C,high school,free/reduced,completed,59,71,65
male,group D,bachelor's degree,free/reduced,completed,74,71,80
male,group A,high school,free/reduced,completed,72,67,65
male,group A,associate's degree,standard,completed,97,92,86
female,group C,some high school,standard,none,47,54,53
male,group D,master's degree,standard,none,95,81,84
female,group C,some high school,standard,none,49,63,56
male,group E,associate's degree,free/reduced,none,64,56,52
female,group B,some high school,free/reduced,none,24,38,27
male,group E,associate's degree,free/reduced,completed,77,69,68
male,group B,bachelor's degree,free/reduced,none,55,59,54
female,group D,some college,standard,none,74,89,84
male,group D,high school,free/reduced,none,69,70,67
female,group B,master's degree,standard,none,77,90,84
male,group D,high school,standard,none,76,73,68
male,group D,bachelor's degree,free/reduced,completed,61,70,76
male,group C,some college,standard,completed,93,84,90
male,group B,high school,standard,none,62,55,54
male,group A,bachelor's degree,standard,none,64,60,58
female,group D,some high school,standard,completed,66,78,78
male,group C,high school,standard,completed,86,81,80
male,group C,master's degree,free/reduced,completed,46,42,46
female,group B,associate's degree,free/reduced,completed,76,94,87
male,group A,high school,standard,none,59,52,46
male,group B,high school,free/reduced,none,63,48,47
female,group A,some high school,free/reduced,none,47,59,50
male,group C,bachelor's degree,free/reduced,none,61,66,61
male,group E,associate's degree,standard,none,72,64,63
male,group A,some high school,free/reduced,none,39,39,34
male,group E,some college,standard,none,86,76,74
female,group D,associate's degree,free/reduced,none,47,53,58
male,group B,associate's degree,standard,completed,81,82,82
female,group B,high school,standard,none,58,62,59
female,group C,some college,standard,none,59,71,70
female,group D,bachelor's degree,standard,none,79,89,89
female,group C,some high school,free/reduced,none,65,86,80
female,group B,high school,standard,none,65,81,73
female,group E,high school,standard,none,50,50,47
female,group A,some high school,free/reduced,none,44,64,58
female,group E,bachelor's degree,standard,completed,71,70,70
female,group C,high school,standard,none,60,68,72
male,group D,some high school,standard,none,86,80,75
female,group C,some college,standard,none,53,62,56
female,group D,bachelor's degree,standard,none,89,100,100
female,group A,associate's degree,standard,completed,65,70,74
male,group E,some high school,free/reduced,completed,78,83,80
female,group D,bachelor's degree,free/reduced,none,63,73,78
female,group C,high school,standard,none,75,88,85
female,group B,high school,free/reduced,completed,46,54,58
female,group C,some high school,free/reduced,completed,50,60,60
female,group C,associate's degree,standard,completed,65,84,84
female,group C,associate's degree,standard,none,65,76,76
male,group E,associate's degree,free/reduced,none,90,90,82
male,group C,associate's degree,standard,completed,57,54,56
male,group C,high school,standard,none,52,53,49
female,group B,high school,standard,none,65,64,62
male,group D,some high school,standard,none,84,84,80
female,group C,associate's degree,standard,completed,62,76,80
male,group D,associate's degree,standard,completed,81,72,77
male,group E,associate's degree,free/reduced,none,46,43,41
male,group D,associate's degree,standard,none,71,66,60
male,group C,some high school,standard,none,49,49,41
female,group D,some college,standard,none,51,58,54
female,group D,high school,standard,none,69,77,73
female,group D,some high school,free/reduced,none,48,54,53
male,group E,some high school,free/reduced,completed,73,67,59
male,group C,some college,standard,completed,98,86,90
female,group E,bachelor's degree,standard,completed,99,100,100
male,group C,associate's degree,standard,none,74,73,67
male,group E,some college,standard,none,68,60,59
male,group D,associate's degree,free/reduced,none,53,54,48
male,group D,associate's degree,standard,completed,87,84,85
male,group C,high school,standard,none,71,79,71
male,group C,some college,free/reduced,completed,67,74,70
female,group D,some high school,standard,none,73,86,82
male,group D,some high school,standard,completed,76,70,69
female,group A,some high school,free/reduced,none,44,45,45
female,group C,high school,free/reduced,none,35,53,46
male,group C,bachelor's degree,free/reduced,completed,70,75,74
male,group C,some high school,standard,none,75,72,62
female,group E,high school,standard,none,74,76,73
female,group C,some college,standard,none,58,59,66
female,group B,some college,standard,none,79,86,92
male,group D,associate's degree,standard,none,40,52,43
female,group B,high school,free/reduced,none,50,67,63
female,group E,associate's degree,standard,completed,79,88,94
male,group B,some college,free/reduced,completed,59,65,66
female,group B,associate's degree,standard,none,53,58,65
female,group B,some high school,standard,none,41,55,51
female,group B,master's degree,free/reduced,completed,58,76,78
female,group D,some college,free/reduced,completed,59,78,76
male,group D,some college,standard,none,81,82,84
male,group A,some high school,standard,none,53,54,48
male,group D,some college,standard,none,55,58,52
male,group B,some college,standard,none,79,67,67
male,group C,bachelor's degree,standard,none,86,83,86
female,group B,master's degree,free/reduced,completed,52,70,62
male,group A,some high school,free/reduced,none,79,82,73
male,group C,bachelor's degree,standard,completed,71,74,68
male,group B,high school,standard,none,59,58,47
female,group B,high school,free/reduced,none,64,73,71
female,group D,high school,standard,none,67,72,74
female,group C,associate's degree,standard,completed,71,77,77
male,group A,high school,free/reduced,none,48,45,41
female,group A,some college,standard,none,69,84,82
male,group E,some high school,standard,completed,89,84,77
female,group A,some college,standard,none,56,58,64
male,group B,some college,standard,completed,62,66,68
female,group E,some high school,free/reduced,none,38,49,45
male,group C,some college,standard,none,84,87,81
male,group E,some college,standard,none,68,72,65
male,group C,associate's degree,standard,completed,78,77,77
male,group E,bachelor's degree,standard,completed,85,66,71
female,group B,some college,free/reduced,none,61,68,66
female,group C,some high school,standard,none,69,75,78
female,group C,high school,free/reduced,none,41,46,43
female,group D,some college,free/reduced,completed,52,59,65
female,group C,some high school,free/reduced,none,55,65,62
female,group D,some high school,standard,completed,97,100,100
female,group A,some college,standard,completed,78,87,91
male,group D,some college,standard,none,44,54,53
male,group A,associate's degree,standard,none,63,61,61
female,group C,some college,free/reduced,completed,63,73,71
female,group E,master's degree,free/reduced,none,81,86,87
male,group C,high school,free/reduced,none,58,61,52
female,group C,high school,standard,none,61,72,70
male,group B,bachelor's degree,free/reduced,completed,87,90,88
female,group B,high school,standard,completed,77,82,89
female,group B,associate's degree,standard,none,57,69,68
male,group D,some college,standard,none,67,64,70
male,group C,associate's degree,free/reduced,completed,43,45,50
female,group B,associate's degree,free/reduced,none,53,70,70
male,group B,associate's degree,free/reduced,none,61,58,56
male,group C,high school,free/reduced,completed,58,51,52
female,group B,some high school,standard,none,37,46,46
female,group D,some high school,free/reduced,completed,40,65,64
male,group C,some high school,standard,none,73,66,66
male,group D,bachelor's degree,standard,none,54,49,47
male,group B,associate's degree,free/reduced,none,44,41,38
female,group B,associate's degree,free/reduced,completed,68,77,80
male,group D,some college,free/reduced,none,69,66,60
male,group B,some high school,free/reduced,none,48,52,45
male,group C,some college,standard,none,58,49,42
male,group D,bachelor's degree,free/reduced,none,63,66,67
female,group C,associate's degree,free/reduced,none,60,75,74
female,group D,bachelor's degree,standard,none,78,82,79
male,group A,some high school,free/reduced,completed,61,62,61
male,group D,some high school,free/reduced,none,62,49,52
male,group C,high school,standard,none,62,67,58
male,group A,some high school,standard,none,71,62,50
male,group B,some high school,standard,none,72,68,67
female,group B,bachelor's degree,free/reduced,none,75,85,82
female,group D,some high school,standard,none,59,67,61
female,group D,associate's degree,standard,none,77,77,73
male,group D,associate's degree,standard,none,52,55,49
female,group C,some college,standard,completed,71,71,80
female,group C,bachelor's degree,standard,completed,52,61,66
female,group D,some high school,standard,none,73,84,85
female,group D,associate's degree,standard,completed,88,92,95
female,group A,associate's degree,standard,completed,55,65,62
male,group E,associate's degree,standard,none,87,74,76
male,group D,associate's degree,standard,none,61,55,52
female,group D,some college,free/reduced,none,77,86,86
male,group B,some college,standard,none,58,50,45
male,group C,associate's degree,standard,none,92,79,84
female,group E,high school,standard,none,99,93,90
female,group B,associate's degree,standard,none,73,83,76
female,group B,some college,standard,completed,50,64,66
female,group C,associate's degree,standard,completed,74,75,83
female,group C,high school,standard,none,61,73,63
male,group A,some high school,standard,completed,66,68,64
male,group E,associate's degree,free/reduced,completed,100,100,93
male,group E,some college,standard,none,83,80,73
female,group E,some high school,free/reduced,none,72,79,77
male,group E,some college,standard,none,53,55,48
female,group C,associate's degree,standard,none,46,58,57
female,group D,high school,free/reduced,completed,65,61,71
female,group E,some college,free/reduced,completed,42,55,54
female,group C,associate's degree,standard,completed,83,85,90
male,group D,some high school,standard,none,60,59,54
male,group D,some college,standard,completed,100,97,99
female,group C,high school,free/reduced,completed,67,79,84
female,group C,associate's degree,free/reduced,none,54,58,61
male,group B,bachelor's degree,standard,none,59,54,51
female,group B,high school,standard,none,48,62,60
male,group C,high school,standard,none,90,75,69
female,group B,associate's degree,standard,none,82,80,77
female,group D,high school,standard,none,51,66,62
female,group C,high school,free/reduced,none,35,61,54
female,group D,associate's degree,free/reduced,completed,75,90,88
female,group C,master's degree,standard,completed,81,91,87
male,group C,associate's degree,standard,none,85,76,71
female,group D,some high school,free/reduced,completed,69,86,81
female,group B,bachelor's degree,free/reduced,none,77,85,87
male,group C,associate's degree,free/reduced,none,58,55,53
male,group B,high school,standard,completed,52,49,46
male,group D,some high school,standard,none,62,67,61
female,group B,some high school,standard,none,67,89,82
female,group E,some college,standard,none,76,78,80
male,group D,bachelor's degree,free/reduced,none,68,68,67
female,group C,associate's degree,standard,completed,59,73,72
female,group B,some high school,free/reduced,none,18,32,28
male,group D,some college,standard,completed,65,77,74
female,group C,some college,standard,none,71,81,80
female,group E,some college,standard,none,62,73,70
male,group D,some high school,standard,none,69,66,61
male,group D,some college,standard,none,72,57,58
female,group E,associate's degree,standard,none,66,65,69
male,group C,high school,standard,none,84,77,74
female,group E,bachelor's degree,standard,none,37,45,38
female,group C,associate's degree,standard,none,85,84,82
male,group C,master's degree,free/reduced,completed,62,68,75
male,group D,some high school,free/reduced,none,56,54,52
male,group B,some college,standard,completed,69,77,77
female,group D,some college,standard,none,98,100,99
male,group C,high school,standard,none,50,48,42
female,group E,master's degree,standard,completed,94,99,100
female,group C,associate's degree,standard,none,91,95,94
female,group E,some college,standard,completed,66,74,73
female,group C,some high school,standard,none,74,75,82
male,group B,associate's degree,standard,none,65,54,57
male,group E,bachelor's degree,standard,completed,70,64,70
male,group B,some college,free/reduced,none,60,60,60
female,group A,high school,standard,none,61,68,63
male,group E,some high school,standard,none,94,88,78
male,group C,high school,standard,none,88,89,86
male,group A,some high school,standard,none,64,50,43
female,group D,associate's degree,free/reduced,completed,57,74,76
male,group C,some high school,standard,completed,78,72,69
male,group C,master's degree,free/reduced,completed,72,66,72
female,group C,some high school,standard,completed,76,87,85
female,group E,some high school,free/reduced,none,74,74,72
male,group B,high school,standard,completed,73,71,68
female,group D,some college,free/reduced,completed,70,78,78
female,group C,high school,standard,none,76,76,74
male,group C,some high school,standard,none,57,61,54
female,group E,master's degree,free/reduced,none,45,56,54
male,group B,some college,standard,none,69,54,55
female,group C,some college,standard,none,62,69,69
male,group D,associate's degree,free/reduced,none,75,66,73
female,group D,some college,standard,completed,75,77,83
male,group C,some college,standard,none,59,60,58
female,group C,some college,standard,completed,88,95,94
female,group D,some high school,free/reduced,none,50,64,59
female,group D,some college,standard,none,62,70,72
female,group D,bachelor's degree,standard,none,59,70,73
male,group C,some college,standard,none,91,74,76
male,group C,some college,standard,none,63,63,60
male,group C,master's degree,standard,none,71,67,67
female,group B,some high school,free/reduced,completed,59,63,64
male,group C,some high school,standard,none,64,58,51
female,group C,master's degree,standard,completed,69,84,85
male,group C,some high school,standard,none,62,64,55
male,group C,associate's degree,standard,none,97,93,91
female,group E,associate's degree,standard,completed,95,89,92
female,group B,bachelor's degree,standard,none,75,84,80
female,group A,some college,free/reduced,none,61,60,57
female,group D,master's degree,standard,none,53,61,68
female,group E,associate's degree,standard,none,68,76,67
male,group B,master's degree,free/reduced,none,49,53,52
female,group C,bachelor's degree,free/reduced,none,67,75,72
female,group B,associate's degree,standard,completed,59,70,66
male,group C,some high school,standard,completed,76,80,73
female,group D,bachelor's degree,free/reduced,none,62,72,74
female,group E,associate's degree,standard,none,84,95,92
male,group C,high school,standard,none,62,55,49
female,group C,some college,standard,none,72,72,71
male,group A,high school,free/reduced,none,53,58,44
male,group B,high school,standard,completed,60,44,47
female,group D,high school,standard,completed,57,58,64
male,group E,high school,free/reduced,completed,57,56,54
male,group D,some high school,standard,completed,71,69,68
female,group A,high school,standard,none,55,73,73
female,group D,associate's degree,free/reduced,none,46,56,57
female,group C,some college,standard,none,69,78,76
female,group C,some college,standard,none,55,69,65
male,group D,high school,standard,none,88,78,75
male,group A,bachelor's degree,standard,none,77,67,68
female,group D,high school,standard,completed,88,99,100
female,group C,associate's degree,standard,none,54,61,58
male,group E,high school,standard,completed,81,80,76
female,group D,associate's degree,free/reduced,none,43,60,58
male,group B,some college,free/reduced,completed,74,77,76
male,group D,some high school,standard,completed,78,81,86
male,group D,high school,free/reduced,completed,64,64,67
female,group E,high school,free/reduced,none,41,45,40
female,group D,associate's degree,standard,none,74,81,83
female,group C,associate's degree,free/reduced,none,65,77,74
female,group A,high school,standard,completed,68,80,76
male,group D,master's degree,standard,none,80,80,72
male,group B,associate's degree,standard,none,80,76,64
male,group D,high school,standard,none,69,75,71
male,group A,bachelor's degree,standard,none,91,96,92
male,group A,some college,standard,completed,100,96,86
female,group C,some college,standard,completed,87,89,94
female,group E,associate's degree,standard,none,85,92,85
female,group C,some high school,free/reduced,none,44,50,51
male,group D,some college,free/reduced,completed,69,60,63
male,group E,associate's degree,standard,completed,71,74,68
female,group C,bachelor's degree,free/reduced,completed,51,72,79
male,group A,some high school,standard,completed,62,67,69
male,group C,associate's degree,free/reduced,none,68,65,61
male,group D,high school,standard,none,41,52,51
male,group D,high school,free/reduced,none,44,51,48
male,group C,some high school,free/reduced,none,79,76,65
female,group E,associate's degree,standard,completed,93,100,95
male,group B,some high school,standard,completed,64,53,57
male,group C,associate's degree,free/reduced,none,73,68,66
male,group B,some high school,standard,none,88,84,75
female,group C,some college,free/reduced,none,62,72,70
male,group D,some college,free/reduced,none,62,57,62
male,group C,high school,free/reduced,none,61,60,55
male,group D,associate's degree,standard,none,90,87,85
male,group D,high school,free/reduced,none,75,74,66
female,group C,some college,free/reduced,none,77,90,91
female,group C,some college,standard,none,82,90,94
male,group E,high school,standard,none,80,76,65
male,group D,high school,free/reduced,none,63,57,56
male,group E,some high school,standard,none,82,67,61
female,group E,some college,standard,none,61,64,62
male,group A,high school,standard,none,57,43,47
female,group D,high school,standard,none,45,63,59
male,group E,high school,free/reduced,none,55,56,51
female,group B,associate's degree,standard,none,58,63,65
male,group B,bachelor's degree,free/reduced,none,73,56,57
female,group E,bachelor's degree,standard,none,65,73,75
female,group C,some high school,standard,completed,59,54,67
female,group C,some college,standard,completed,88,93,93
female,group D,associate's degree,standard,none,65,69,70
male,group C,associate's degree,standard,none,69,77,69
male,group C,high school,standard,none,70,56,51
male,group E,associate's degree,standard,none,89,76,74
male,group E,high school,standard,none,84,73,69
male,group D,associate's degree,free/reduced,completed,61,71,73
female,group B,high school,standard,none,74,72,72
male,group B,high school,standard,none,57,48,51
female,group C,high school,standard,completed,60,64,74
male,group C,high school,free/reduced,none,54,72,59
female,group A,bachelor's degree,standard,none,51,49,51
female,group D,some high school,standard,completed,80,92,88
female,group A,some college,free/reduced,none,49,65,55
male,group C,bachelor's degree,standard,completed,91,81,79
male,group B,high school,standard,none,52,48,49
male,group C,master's degree,standard,none,67,57,59
female,group C,bachelor's degree,free/reduced,completed,47,62,66
male,group B,some high school,standard,completed,61,56,56
female,group D,associate's degree,free/reduced,completed,74,88,90
female,group E,some college,standard,none,68,70,66
male,group C,master's degree,free/reduced,completed,79,77,75
female,group D,some college,free/reduced,none,64,74,75
male,group B,some college,standard,completed,91,96,91
female,group E,bachelor's degree,free/reduced,none,61,58,62
female,group C,bachelor's degree,free/reduced,none,43,62,61
female,group C,high school,free/reduced,none,53,72,64
female,group E,bachelor's degree,standard,none,64,73,70
female,group A,high school,free/reduced,completed,53,50,60
female,group C,bachelor's degree,standard,none,86,92,87
female,group D,high school,standard,none,69,72,77
female,group C,some high school,standard,none,77,91,88
female,group D,high school,standard,none,78,81,80
female,group C,some college,standard,none,54,48,52
male,group A,associate's degree,standard,none,54,53,47
female,group E,associate's degree,free/reduced,none,73,76,78
female,group B,bachelor's degree,standard,none,67,86,83
male,group C,associate's degree,free/reduced,none,49,51,51
female,group C,master's degree,free/reduced,none,40,58,54
male,group D,associate's degree,free/reduced,none,52,57,50
female,group D,some college,standard,completed,82,97,96
male,group D,some high school,standard,none,81,78,78
female,group B,high school,free/reduced,completed,23,44,36
male,group E,some high school,standard,none,92,87,78
female,group B,some high school,standard,completed,32,51,44
female,group E,some college,standard,completed,73,78,76
male,group C,associate's degree,standard,none,83,72,78
female,group B,high school,standard,none,50,53,55
female,group D,master's degree,standard,completed,70,71,74
male,group D,associate's degree,standard,completed,67,54,63
female,group D,associate's degree,free/reduced,completed,42,61,58
male,group D,some college,free/reduced,none,59,62,61
female,group B,some college,standard,none,70,75,78
male,group B,some college,free/reduced,none,55,55,47
male,group D,associate's degree,standard,none,61,48,46
female,group B,bachelor's degree,standard,completed,66,74,81
female,group D,bachelor's degree,free/reduced,none,73,79,84
female,group D,some high school,standard,none,80,90,82
female,group A,some high school,free/reduced,none,38,43,43
female,group B,associate's degree,standard,completed,52,66,73
male,group C,high school,standard,completed,58,52,54
female,group C,high school,standard,none,72,80,83
female,group C,associate's degree,standard,completed,68,86,84
female,group C,bachelor's degree,standard,completed,77,94,95
female,group B,some high school,standard,none,82,82,80
female,group D,associate's degree,standard,none,76,74,73
male,group E,some high school,standard,completed,81,75,76
male,group E,associate's degree,free/reduced,completed,46,43,44
male,group D,some college,standard,none,88,77,77
male,group C,associate's degree,free/reduced,completed,65,73,68
female,group B,bachelor's degree,standard,none,97,97,96
female,group B,some college,standard,none,82,85,87
female,group B,bachelor's degree,standard,completed,65,81,81
male,group C,master's degree,standard,completed,91,85,85
female,group C,associate's degree,standard,completed,55,72,79
female,group D,master's degree,standard,none,92,100,100
female,group B,high school,standard,none,81,91,89
female,group E,associate's degree,free/reduced,completed,57,68,73
female,group C,some college,standard,none,73,80,82
female,group D,high school,standard,none,56,52,55
female,group D,associate's degree,standard,completed,57,78,79
male,group D,associate's degree,free/reduced,none,66,62,64
male,group C,high school,standard,completed,53,52,49
male,group E,associate's degree,standard,completed,81,81,79
male,group C,high school,standard,completed,75,69,68
male,group A,high school,standard,completed,72,73,74
female,group B,some high school,standard,none,73,79,79
female,group E,some college,standard,completed,86,85,91
female,group C,bachelor's degree,standard,none,65,79,81
male,group D,high school,standard,none,64,54,50
female,group B,high school,standard,none,58,68,61
male,group D,some high school,standard,none,55,47,44
male,group C,associate's degree,free/reduced,completed,78,81,82
female,group D,some college,free/reduced,completed,63,80,80
male,group D,high school,free/reduced,completed,73,68,66
female,group C,high school,standard,none,81,84,82
female,group E,high school,standard,none,74,81,71
female,group C,associate's degree,standard,none,49,53,53
male,group C,bachelor's degree,free/reduced,none,53,58,55
male,group D,some college,free/reduced,none,77,62,64
female,group D,some college,free/reduced,none,69,65,74
male,group E,bachelor's degree,standard,none,82,62,62
male,group E,some college,standard,none,76,67,67
female,group B,high school,standard,none,42,52,51
female,group C,associate's degree,standard,none,85,89,95
female,group C,high school,standard,completed,58,75,77
female,group C,high school,standard,none,59,72,68
female,group C,high school,free/reduced,none,34,42,39
male,group C,some college,standard,none,76,78,75
female,group D,some high school,standard,none,68,71,75
female,group B,some high school,free/reduced,none,72,81,79
female,group C,some high school,free/reduced,none,48,56,51
male,group C,bachelor's degree,standard,completed,94,90,91
male,group D,associate's degree,standard,none,81,71,73
female,group A,some high school,standard,completed,92,100,97
male,group E,some college,standard,completed,81,74,71
female,group C,some high school,free/reduced,completed,29,40,44
female,group D,some college,free/reduced,none,58,67,62
female,group C,some college,standard,none,73,76,78
male,group E,some high school,standard,completed,68,51,57
female,group C,high school,free/reduced,completed,50,66,64
male,group B,associate's degree,standard,completed,65,65,63
male,group C,some college,free/reduced,none,63,61,54
female,group C,high school,standard,none,66,71,76
female,group E,master's degree,free/reduced,none,56,72,65
male,group E,associate's degree,standard,completed,94,85,82
female,group C,associate's degree,standard,none,66,77,73
female,group C,associate's degree,standard,completed,67,84,86
male,group D,bachelor's degree,free/reduced,completed,74,79,75
female,group C,bachelor's degree,standard,none,67,69,75
male,group C,bachelor's degree,standard,completed,63,64,66
male,group D,some college,standard,none,76,64,66
male,group A,associate's degree,free/reduced,completed,79,82,82
female,group B,some high school,free/reduced,completed,52,67,72
female,group A,some high school,standard,none,71,83,77
male,group B,bachelor's degree,free/reduced,none,88,75,76
male,group D,some college,standard,none,68,59,62
female,group D,high school,standard,completed,69,77,78
female,group D,some college,standard,none,77,68,77
male,group E,bachelor's degree,standard,none,68,68,64
female,group B,some high school,standard,none,66,69,68
female,group C,associate's degree,standard,none,59,66,67
male,group A,associate's degree,free/reduced,none,62,61,55
female,group C,high school,standard,none,63,69,74
female,group E,high school,free/reduced,none,64,62,68
male,group D,master's degree,standard,none,82,82,74
male,group B,some college,free/reduced,completed,60,62,60
male,group D,some college,standard,none,71,49,52
male,group B,associate's degree,free/reduced,completed,58,57,53
female,group E,associate's degree,standard,none,100,100,100
female,group D,some high school,standard,none,59,58,59
female,group C,master's degree,standard,completed,54,64,67
female,group A,master's degree,standard,none,50,53,58
female,group E,high school,free/reduced,completed,66,74,78
male,group C,associate's degree,free/reduced,none,55,61,54
female,group C,some college,standard,none,83,83,90
male,group A,bachelor's degree,standard,none,66,64,62
male,group D,some high school,standard,completed,62,66,68
female,group B,high school,standard,none,62,62,63
female,group E,associate's degree,free/reduced,completed,83,86,88
female,group D,some college,free/reduced,none,60,66,70
male,group C,some college,standard,none,53,44,42
female,group D,some high school,standard,none,59,72,80
male,group C,associate's degree,standard,none,49,51,43
female,group C,bachelor's degree,free/reduced,none,50,60,59
male,group E,associate's degree,free/reduced,completed,91,73,80
male,group B,some college,standard,none,47,43,41
male,group B,associate's degree,free/reduced,none,67,62,60
female,group B,some high school,standard,none,57,67,72
female,group D,some college,free/reduced,none,71,83,83
female,group E,associate's degree,standard,completed,65,75,77
male,group B,some college,free/reduced,none,54,54,45
male,group C,bachelor's degree,free/reduced,none,37,56,47
male,group C,high school,free/reduced,none,62,55,55
male,group B,some high school,standard,completed,94,86,87
male,group D,bachelor's degree,free/reduced,completed,39,42,38
female,group E,some college,free/reduced,none,71,76,70
female,group D,some college,free/reduced,none,65,81,77
female,group E,some college,free/reduced,completed,75,88,85
female,group C,some college,free/reduced,none,32,39,33
male,group C,some college,standard,none,53,39,37
male,group A,some college,standard,none,53,43,43
male,group A,bachelor's degree,standard,completed,87,84,87
male,group E,bachelor's degree,standard,completed,76,62,66
female,group D,bachelor's degree,free/reduced,none,78,90,93
male,group D,bachelor's degree,standard,none,75,73,74
female,group C,some college,standard,none,58,67,72
male,group B,associate's degree,standard,none,48,43,45
male,group D,master's degree,standard,none,73,70,75
female,group C,some college,standard,completed,69,90,88
female,group E,high school,free/reduced,none,57,58,57
male,group B,some high school,standard,completed,79,85,86
female,group C,some college,standard,none,63,74,74
female,group B,associate's degree,standard,none,47,49,50
male,group D,some high school,standard,completed,74,71,78
male,group E,some college,standard,none,97,87,82
female,group B,some high school,free/reduced,none,49,58,55
male,group C,master's degree,standard,none,79,78,77
male,group C,some high school,free/reduced,none,69,71,65
female,group C,associate's degree,free/reduced,none,53,61,62
male,group C,high school,standard,completed,69,58,53
male,group C,high school,free/reduced,none,27,34,36
female,group D,some high school,free/reduced,completed,35,55,60
female,group B,some high school,free/reduced,completed,63,78,79
male,group B,bachelor's degree,free/reduced,none,48,51,46
female,group C,high school,standard,none,72,80,75
female,group B,high school,standard,none,66,72,70
female,group E,bachelor's degree,standard,none,80,83,83
male,group A,some college,standard,completed,78,72,70
male,group C,high school,standard,none,71,66,65
female,group D,master's degree,standard,none,54,60,63
female,group C,associate's degree,free/reduced,none,57,78,67
female,group D,some college,standard,none,65,70,71
male,group C,high school,free/reduced,completed,53,51,51
female,group D,high school,free/reduced,none,39,52,46
female,group D,associate's degree,free/reduced,none,55,76,76
female,group D,associate's degree,standard,none,59,70,65
female,group B,high school,free/reduced,none,60,72,68
female,group B,associate's degree,standard,none,49,52,54
female,group B,high school,free/reduced,none,8,24,23
female,group D,master's degree,free/reduced,none,40,59,54
female,group C,bachelor's degree,free/reduced,completed,74,86,89
male,group E,some college,standard,none,59,51,43
female,group E,bachelor's degree,free/reduced,completed,92,100,100
male,group C,some college,free/reduced,none,80,64,66
male,group C,bachelor's degree,standard,completed,96,90,92
male,group E,some college,standard,completed,85,75,68
female,group C,bachelor's degree,standard,none,77,88,87
female,group B,high school,free/reduced,completed,76,85,82
male,group C,high school,free/reduced,none,66,66,59
female,group D,bachelor's degree,standard,completed,71,76,83
male,group B,high school,standard,none,60,68,60
male,group D,some college,standard,none,76,71,73
male,group D,some college,standard,completed,58,59,58
female,group B,associate's degree,standard,completed,90,90,91
female,group D,some college,standard,completed,74,75,79
male,group B,some college,free/reduced,none,75,68,65
male,group C,some college,standard,none,69,64,68
female,group B,some high school,standard,completed,60,70,70
female,group B,some college,free/reduced,completed,65,75,70
female,group C,associate's degree,free/reduced,completed,68,67,69
male,group B,high school,standard,completed,72,65,68
male,group B,associate's degree,free/reduced,completed,82,78,74
female,group C,some high school,standard,completed,85,92,93
male,group E,associate's degree,standard,none,72,57,62
male,group D,some college,standard,completed,76,83,79
female,group E,some college,standard,none,67,76,75
male,group A,some college,free/reduced,none,75,81,74
male,group B,some high school,standard,completed,63,67,67
female,group C,associate's degree,standard,none,64,64,70
male,group D,associate's degree,standard,completed,67,72,67
male,group A,some college,free/reduced,none,58,60,57
female,group B,associate's degree,free/reduced,none,53,71,67
male,group C,some high school,standard,none,73,66,63
male,group D,master's degree,standard,none,89,84,82
female,group C,high school,standard,none,65,69,67
female,group C,some college,standard,completed,70,72,76
female,group D,bachelor's degree,standard,none,65,67,62
male,group D,some high school,standard,none,74,74,72
female,group D,associate's degree,standard,none,71,71,74
female,group E,bachelor's degree,standard,none,100,100,100
male,group C,high school,standard,none,71,60,61
male,group E,high school,standard,completed,87,91,81
female,group D,associate's degree,free/reduced,none,26,31,38
male,group B,associate's degree,standard,completed,91,89,92
female,group A,associate's degree,standard,none,82,93,93
male,group D,high school,standard,none,66,69,63
female,group E,bachelor's degree,standard,completed,79,81,82
male,group D,some college,standard,completed,63,55,63
female,group D,master's degree,standard,none,87,100,100
male,group C,bachelor's degree,standard,none,69,63,61
female,group C,associate's degree,standard,none,53,62,53
male,group C,some college,free/reduced,completed,50,48,53
female,group D,associate's degree,standard,none,85,91,89


================================================
File: catboost_info/catboost_training.json
================================================
{
'meta':{'test_sets':[],'test_metrics':[],'learn_metrics':[{'best_value':'Min','name':'RMSE'}],'launch_mode':'Train','parameters':'','iteration_count':1000,'learn_sets':['learn'],'name':'experiment'},
'iterations':[
{'learn':[14.61268541],'iteration':0,'passed_time':0.1880922462,'remaining_time':187.904154},
{'learn':[14.23196558],'iteration':1,'passed_time':0.188999971,'remaining_time':94.31098554},
{'learn':[13.86674177],'iteration':2,'passed_time':0.1898480155,'remaining_time':63.09282383},
{'learn':[13.49946468],'iteration':3,'passed_time':0.1906198053,'remaining_time':47.46433153},
{'learn':[13.16661202],'iteration':4,'passed_time':0.1914407928,'remaining_time':38.09671776},
{'learn':[12.85632158],'iteration':5,'passed_time':0.1923359584,'remaining_time':31.8636571},
{'learn':[12.56784336],'iteration':6,'passed_time':0.1931993729,'remaining_time':27.40671104},
{'learn':[12.31617801],'iteration':7,'passed_time':0.1941391084,'remaining_time':24.07324944},
{'learn':[12.01509946],'iteration':8,'passed_time':0.1948952963,'remaining_time':21.46013763},
{'learn':[11.71512571],'iteration':9,'passed_time':0.195731052,'remaining_time':19.37737414},
{'learn':[11.43264457],'iteration':10,'passed_time':0.1965648546,'remaining_time':17.67296738},
{'learn':[11.17973129],'iteration':11,'passed_time':0.1973920556,'remaining_time':16.25194591},
{'learn':[10.93746433],'iteration':12,'passed_time':0.1982969001,'remaining_time':15.0553108},
{'learn':[10.69387075],'iteration':13,'passed_time':0.1991910262,'remaining_time':14.02873942},
{'learn':[10.4615922],'iteration':14,'passed_time':0.20002765,'remaining_time':13.13514902},
{'learn':[10.2299235],'iteration':15,'passed_time':0.2008871167,'remaining_time':12.35455768},
{'learn':[10.01419731],'iteration':16,'passed_time':0.2018173559,'remaining_time':11.66979182},
{'learn':[9.795856918],'iteration':17,'passed_time':0.2026373081,'remaining_time':11.05499092},
{'learn':[9.60040151],'iteration':18,'passed_time':0.2035970065,'remaining_time':10.51203491},
{'learn':[9.418664989],'iteration':19,'passed_time':0.2044583687,'remaining_time':10.01846007},
{'learn':[9.249278645],'iteration':20,'passed_time':0.2053852316,'remaining_time':9.574863894},
{'learn':[9.090113396],'iteration':21,'passed_time':0.2062800169,'remaining_time':9.170084389},
{'learn':[8.909548708],'iteration':22,'passed_time':0.207127627,'remaining_time':8.798421372},
{'learn':[8.740140208],'iteration':23,'passed_time':0.208007278,'remaining_time':8.458962638},
{'learn':[8.59377682],'iteration':24,'passed_time':0.2088330107,'remaining_time':8.144487416},
{'learn':[8.453885414],'iteration':25,'passed_time':0.209738676,'remaining_time':7.85713348},
{'learn':[8.317732234],'iteration':26,'passed_time':0.2105703538,'remaining_time':7.588331637},
{'learn':[8.180896085],'iteration':27,'passed_time':0.211447034,'remaining_time':7.340232753},
{'learn':[8.053220863],'iteration':28,'passed_time':0.2123142932,'remaining_time':7.108868232},
{'learn':[7.924234474],'iteration':29,'passed_time':0.2131531097,'remaining_time':6.891950546},
{'learn':[7.818879511],'iteration':30,'passed_time':0.2139195078,'remaining_time':6.686709777},
{'learn':[7.719346395],'iteration':31,'passed_time':0.2146908411,'remaining_time':6.494397943},
{'learn':[7.624163594],'iteration':32,'passed_time':0.2155029968,'remaining_time':6.314890846},
{'learn':[7.524952543],'iteration':33,'passed_time':0.2162384185,'remaining_time':6.143715066},
{'learn':[7.424464745],'iteration':34,'passed_time':0.216999867,'remaining_time':5.982996333},
{'learn':[7.327482321],'iteration':35,'passed_time':0.2177810344,'remaining_time':5.831692144},
{'learn':[7.238666841],'iteration':36,'passed_time':0.2185753836,'remaining_time':5.688867415},
{'learn':[7.158842395],'iteration':37,'passed_time':0.2193997188,'remaining_time':5.554277093},
{'learn':[7.074348246],'iteration':38,'passed_time':0.220288375,'remaining_time':5.428131496},
{'learn':[6.992269093],'iteration':39,'passed_time':0.221157424,'remaining_time':5.307778176},
{'learn':[6.925219745],'iteration':40,'passed_time':0.2220045857,'remaining_time':5.192741407},
{'learn':[6.86013671],'iteration':41,'passed_time':0.2229692516,'remaining_time':5.085822452},
{'learn':[6.786739622],'iteration':42,'passed_time':0.2237971733,'remaining_time':4.980788252},
{'learn':[6.73057926],'iteration':43,'passed_time':0.2248191124,'remaining_time':4.88470617},
{'learn':[6.666356486],'iteration':44,'passed_time':0.2256583035,'remaining_time':4.788970664},
{'learn':[6.606182832],'iteration':45,'passed_time':0.2264267996,'remaining_time':4.695894931},
{'learn':[6.547854615],'iteration':46,'passed_time':0.2273837769,'remaining_time':4.610568922},
{'learn':[6.49240675],'iteration':47,'passed_time':0.2283607067,'remaining_time':4.529154016},
{'learn':[6.431317261],'iteration':48,'passed_time':0.2293118557,'remaining_time':4.450521935},
{'learn':[6.377586395],'iteration':49,'passed_time':0.2302474097,'remaining_time':4.374700784},
{'learn':[6.327558015],'iteration':50,'passed_time':0.2311418371,'remaining_time':4.301051047},
{'learn':[6.282040317],'iteration':51,'passed_time':0.2320033144,'remaining_time':4.229598885},
{'learn':[6.237655841],'iteration':52,'passed_time':0.2327350064,'remaining_time':4.158491529},
{'learn':[6.192792003],'iteration':53,'passed_time':0.2335797362,'remaining_time':4.091970934},
{'learn':[6.150579347],'iteration':54,'passed_time':0.2344315103,'remaining_time':4.027959586},
{'learn':[6.115693845],'iteration':55,'passed_time':0.2352603394,'remaining_time':3.96581715},
{'learn':[6.078780782],'iteration':56,'passed_time':0.2361510101,'remaining_time':3.906849168},
{'learn':[6.045146957],'iteration':57,'passed_time':0.2371736216,'remaining_time':3.852026751},
{'learn':[6.008080327],'iteration':58,'passed_time':0.2383721904,'remaining_time':3.801834426},
{'learn':[5.977575734],'iteration':59,'passed_time':0.2392503984,'remaining_time':3.748256242},
{'learn':[5.948036502],'iteration':60,'passed_time':0.2402557542,'remaining_time':3.698363168},
{'learn':[5.914888282],'iteration':61,'passed_time':0.2411535733,'remaining_time':3.648420189},
{'learn':[5.884957796],'iteration':62,'passed_time':0.241961227,'remaining_time':3.598693169},
{'learn':[5.849539885],'iteration':63,'passed_time':0.2428187652,'remaining_time':3.551224441},
{'learn':[5.821387627],'iteration':64,'passed_time':0.2437252984,'remaining_time':3.505894678},
{'learn':[5.797012279],'iteration':65,'passed_time':0.2445689367,'remaining_time':3.461021013},
{'learn':[5.768685095],'iteration':66,'passed_time':0.2454294692,'remaining_time':3.417696937},
{'learn':[5.755484587],'iteration':67,'passed_time':0.2459516524,'remaining_time':3.370984412},
{'learn':[5.731887055],'iteration':68,'passed_time':0.2468740214,'remaining_time':3.331010347},
{'learn':[5.707148487],'iteration':69,'passed_time':0.2476755567,'remaining_time':3.290546681},
{'learn':[5.685365039],'iteration':70,'passed_time':0.2486898446,'remaining_time':3.253984023},
{'learn':[5.663541834],'iteration':71,'passed_time':0.2495451785,'remaining_time':3.216360079},
{'learn':[5.638108797],'iteration':72,'passed_time':0.2504119477,'remaining_time':3.179888705},
{'learn':[5.619204893],'iteration':73,'passed_time':0.2513371757,'remaining_time':3.145111144},
{'learn':[5.598472793],'iteration':74,'passed_time':0.2523096971,'remaining_time':3.111819598},
{'learn':[5.577007075],'iteration':75,'passed_time':0.2534594856,'remaining_time':3.081533746},
{'learn':[5.562637084],'iteration':76,'passed_time':0.254635484,'remaining_time':3.052318854},
{'learn':[5.54729991],'iteration':77,'passed_time':0.2556806605,'remaining_time':3.022276526},
{'learn':[5.530737623],'iteration':78,'passed_time':0.2566084369,'remaining_time':2.991599625},
{'learn':[5.513704873],'iteration':79,'passed_time':0.2574684512,'remaining_time':2.960887189},
{'learn':[5.501575529],'iteration':80,'passed_time':0.2582280536,'remaining_time':2.929772608},
{'learn':[5.484080734],'iteration':81,'passed_time':0.2590073689,'remaining_time':2.899619081},
{'learn':[5.472178894],'iteration':82,'passed_time':0.2599110208,'remaining_time':2.871547061},
{'learn':[5.458923342],'iteration':83,'passed_time':0.2607174526,'remaining_time':2.843061745},
{'learn':[5.451382371],'iteration':84,'passed_time':0.2612458475,'remaining_time':2.812234712},
{'learn':[5.441410748],'iteration':85,'passed_time':0.2621390403,'remaining_time':2.785989335},
{'learn':[5.434047468],'iteration':86,'passed_time':0.2626456447,'remaining_time':2.756269812},
{'learn':[5.422107497],'iteration':87,'passed_time':0.2635354152,'remaining_time':2.731185212},
{'learn':[5.40731265],'iteration':88,'passed_time':0.2644172396,'remaining_time':2.70656298},
{'learn':[5.396360181],'iteration':89,'passed_time':0.2653562425,'remaining_time':2.683046452},
{'learn':[5.383793239],'iteration':90,'passed_time':0.2662834153,'remaining_time':2.659907961},
{'learn':[5.369605034],'iteration':91,'passed_time':0.2674144592,'remaining_time':2.639264445},
{'learn':[5.357467333],'iteration':92,'passed_time':0.268445157,'remaining_time':2.618061908},
{'learn':[5.341109968],'iteration':93,'passed_time':0.2692821056,'remaining_time':2.595421146},
{'learn':[5.330529276],'iteration':94,'passed_time':0.2701256374,'remaining_time':2.573302125},
{'learn':[5.319862075],'iteration':95,'passed_time':0.2709064106,'remaining_time':2.551035367},
{'learn':[5.313052243],'iteration':96,'passed_time':0.2718895066,'remaining_time':2.531095098},
{'learn':[5.299677207],'iteration':97,'passed_time':0.2726523821,'remaining_time':2.509514782},
{'learn':[5.287546698],'iteration':98,'passed_time':0.2735013048,'remaining_time':2.489138138},
{'learn':[5.279803754],'iteration':99,'passed_time':0.2744496961,'remaining_time':2.470047265},
{'learn':[5.272254612],'iteration':100,'passed_time':0.2752438572,'remaining_time':2.449942848},
{'learn':[5.268813888],'iteration':101,'passed_time':0.2757048562,'remaining_time':2.42728393},
{'learn':[5.258113767],'iteration':102,'passed_time':0.2765759896,'remaining_time':2.408627793},
{'learn':[5.251018576],'iteration':103,'passed_time':0.2773912738,'remaining_time':2.389832512},
{'learn':[5.24171237],'iteration':104,'passed_time':0.2782215548,'remaining_time':2.371507538},
{'learn':[5.233984943],'iteration':105,'passed_time':0.2790158808,'remaining_time':2.353209409},
{'learn':[5.226240449],'iteration':106,'passed_time':0.279912827,'remaining_time':2.336094902},
{'learn':[5.220541644],'iteration':107,'passed_time':0.2807177254,'remaining_time':2.318520472},
{'learn':[5.211712096],'iteration':108,'passed_time':0.2816740577,'remaining_time':2.302491609},
{'learn':[5.203388597],'iteration':109,'passed_time':0.2827115054,'remaining_time':2.287393089},
{'learn':[5.196026544],'iteration':110,'passed_time':0.2836374791,'remaining_time':2.271655125},
{'learn':[5.188716772],'iteration':111,'passed_time':0.2848025913,'remaining_time':2.258077689},
{'learn':[5.182163132],'iteration':112,'passed_time':0.2857016408,'remaining_time':2.242631463},
{'learn':[5.17764747],'iteration':113,'passed_time':0.286652672,'remaining_time':2.22784445},
{'learn':[5.170548056],'iteration':114,'passed_time':0.2874421163,'remaining_time':2.212054547},
{'learn':[5.165901827],'iteration':115,'passed_time':0.2881285162,'remaining_time':2.195738003},
{'learn':[5.160333668],'iteration':116,'passed_time':0.2889912068,'remaining_time':2.181019108},
{'learn':[5.148953243],'iteration':117,'passed_time':0.28986254,'remaining_time':2.166599663},
{'learn':[5.144729126],'iteration':118,'passed_time':0.2906097071,'remaining_time':2.151488672},
{'learn':[5.139939946],'iteration':119,'passed_time':0.2914298473,'remaining_time':2.137152214},
{'learn':[5.132898872],'iteration':120,'passed_time':0.2922346499,'remaining_time':2.122927746},
{'learn':[5.129073077],'iteration':121,'passed_time':0.2931560479,'remaining_time':2.109762377},
{'learn':[5.127123916],'iteration':122,'passed_time':0.293560062,'remaining_time':2.093107109},
{'learn':[5.121282057],'iteration':123,'passed_time':0.2943863809,'remaining_time':2.079697336},
{'learn':[5.114489821],'iteration':124,'passed_time':0.295206796,'remaining_time':2.066447572},
{'learn':[5.107777291],'iteration':125,'passed_time':0.2960378961,'remaining_time':2.053469216},
{'learn':[5.103518754],'iteration':126,'passed_time':0.2971727451,'remaining_time':2.04277013},
{'learn':[5.101133351],'iteration':127,'passed_time':0.2977227656,'remaining_time':2.028236341},
{'learn':[5.096462705],'iteration':128,'passed_time':0.298577997,'remaining_time':2.015980119},
{'learn':[5.08562082],'iteration':129,'passed_time':0.299294106,'remaining_time':2.002968248},
{'learn':[5.080483682],'iteration':130,'passed_time':0.3000217369,'remaining_time':1.99022053},
{'learn':[5.07437499],'iteration':131,'passed_time':0.3007736037,'remaining_time':1.977814303},
{'learn':[5.070683732],'iteration':132,'passed_time':0.3014809975,'remaining_time':1.96529342},
{'learn':[5.06432037],'iteration':133,'passed_time':0.3021911808,'remaining_time':1.952966885},
{'learn':[5.057436484],'iteration':134,'passed_time':0.3029560516,'remaining_time':1.941162849},
{'learn':[5.053254656],'iteration':135,'passed_time':0.3036810305,'remaining_time':1.929267723},
{'learn':[5.04801663],'iteration':136,'passed_time':0.3044191778,'remaining_time':1.917618617},
{'learn':[5.045680836],'iteration':137,'passed_time':0.3049866595,'remaining_time':1.905061598},
{'learn':[5.041857933],'iteration':138,'passed_time':0.3057146657,'remaining_time':1.893671419},
{'learn':[5.035264888],'iteration':139,'passed_time':0.3064089003,'remaining_time':1.882226102},
{'learn':[5.028771948],'iteration':140,'passed_time':0.307154847,'remaining_time':1.871248323},
{'learn':[5.024912247],'iteration':141,'passed_time':0.3078399849,'remaining_time':1.860047233},
{'learn':[5.02239068],'iteration':142,'passed_time':0.3085294802,'remaining_time':1.849019333},
{'learn':[5.017110572],'iteration':143,'passed_time':0.3092632096,'remaining_time':1.838397968},
{'learn':[5.010707886],'iteration':144,'passed_time':0.3100287634,'remaining_time':1.82810064},
{'learn':[5.004389868],'iteration':145,'passed_time':0.3107654892,'remaining_time':1.817765259},
{'learn':[4.997628683],'iteration':146,'passed_time':0.3118126885,'remaining_time':1.809362063},
{'learn':[4.991497851],'iteration':147,'passed_time':0.3126975594,'remaining_time':1.800123788},
{'learn':[4.988345253],'iteration':148,'passed_time':0.3134393346,'remaining_time':1.790180361},
{'learn':[4.98460423],'iteration':149,'passed_time':0.3141606355,'remaining_time':1.780243601},
{'learn':[4.982441783],'iteration':150,'passed_time':0.3149079572,'remaining_time':1.770575203},
{'learn':[4.977461771],'iteration':151,'passed_time':0.3156473538,'remaining_time':1.760979974},
{'learn':[4.973601586],'iteration':152,'passed_time':0.3164033676,'remaining_time':1.751592499},
{'learn':[4.968328804],'iteration':153,'passed_time':0.3171481082,'remaining_time':1.742255192},
{'learn':[4.9640736],'iteration':154,'passed_time':0.3178475898,'remaining_time':1.732782022},
{'learn':[4.960865882],'iteration':155,'passed_time':0.3185850331,'remaining_time':1.723626718},
{'learn':[4.957014156],'iteration':156,'passed_time':0.3193090341,'remaining_time':1.71450647},
{'learn':[4.952244852],'iteration':157,'passed_time':0.3200458766,'remaining_time':1.705560938},
{'learn':[4.949695675],'iteration':158,'passed_time':0.3207638261,'remaining_time':1.696618728},
{'learn':[4.946584698],'iteration':159,'passed_time':0.321503549,'remaining_time':1.687893632},
{'learn':[4.940192834],'iteration':160,'passed_time':0.3222307297,'remaining_time':1.679202374},
{'learn':[4.936727994],'iteration':161,'passed_time':0.3229354138,'remaining_time':1.670493067},
{'learn':[4.932342063],'iteration':162,'passed_time':0.3236708636,'remaining_time':1.662039956},
{'learn':[4.925830838],'iteration':163,'passed_time':0.3244565135,'remaining_time':1.653936862},
{'learn':[4.922571773],'iteration':164,'passed_time':0.3252193192,'remaining_time':1.645806858},
{'learn':[4.918395814],'iteration':165,'passed_time':0.3259650241,'remaining_time':1.637679699},
{'learn':[4.911142452],'iteration':166,'passed_time':0.3270740307,'remaining_time':1.631453099},
{'learn':[4.908276131],'iteration':167,'passed_time':0.3278812332,'remaining_time':1.623792774},
{'learn':[4.904584645],'iteration':168,'passed_time':0.3285934414,'remaining_time':1.615746448},
{'learn':[4.89795517],'iteration':169,'passed_time':0.3293206527,'remaining_time':1.607859658},
{'learn':[4.895556491],'iteration':170,'passed_time':0.3300600765,'remaining_time':1.600115809},
{'learn':[4.890591233],'iteration':171,'passed_time':0.3307611563,'remaining_time':1.592268822},
{'learn':[4.884629277],'iteration':172,'passed_time':0.3314289099,'remaining_time':1.584345136},
{'learn':[4.880550786],'iteration':173,'passed_time':0.3321916943,'remaining_time':1.576955974},
{'learn':[4.876384842],'iteration':174,'passed_time':0.3329225163,'remaining_time':1.569491863},
{'learn':[4.872638238],'iteration':175,'passed_time':0.3336816401,'remaining_time':1.562236769},
{'learn':[4.869137118],'iteration':176,'passed_time':0.3344184203,'remaining_time':1.554951186},
{'learn':[4.863587157],'iteration':177,'passed_time':0.3351404926,'remaining_time':1.547671263},
{'learn':[4.858028614],'iteration':178,'passed_time':0.3359089683,'remaining_time':1.540677447},
{'learn':[4.853838176],'iteration':179,'passed_time':0.3366301147,'remaining_time':1.533537189},
{'learn':[4.853462329],'iteration':180,'passed_time':0.3370107846,'remaining_time':1.524927252},
{'learn':[4.851573196],'iteration':181,'passed_time':0.337760415,'remaining_time':1.518066041},
{'learn':[4.848442087],'iteration':182,'passed_time':0.3385938737,'remaining_time':1.511645873},
{'learn':[4.845547104],'iteration':183,'passed_time':0.3393392079,'remaining_time':1.504895618},
{'learn':[4.839868817],'iteration':184,'passed_time':0.3401108645,'remaining_time':1.498326241},
{'learn':[4.836336958],'iteration':185,'passed_time':0.3409429496,'remaining_time':1.492083661},
{'learn':[4.831124789],'iteration':186,'passed_time':0.341990334,'remaining_time':1.486834982},
{'learn':[4.827407333],'iteration':187,'passed_time':0.3428478705,'remaining_time':1.480811015},
{'learn':[4.824088918],'iteration':188,'passed_time':0.343548414,'remaining_time':1.474168062},
{'learn':[4.820934539],'iteration':189,'passed_time':0.3442701882,'remaining_time':1.467678171},
{'learn':[4.816975227],'iteration':190,'passed_time':0.3449673415,'remaining_time':1.461144394},
{'learn':[4.812340486],'iteration':191,'passed_time':0.3457115222,'remaining_time':1.454869323},
{'learn':[4.806402747],'iteration':192,'passed_time':0.34647026,'remaining_time':1.448712434},
{'learn':[4.801521788],'iteration':193,'passed_time':0.3472643769,'remaining_time':1.442758184},
{'learn':[4.797601172],'iteration':194,'passed_time':0.348008267,'remaining_time':1.436649513},
{'learn':[4.792694629],'iteration':195,'passed_time':0.3487294404,'remaining_time':1.430502399},
{'learn':[4.789794613],'iteration':196,'passed_time':0.3494455029,'remaining_time':1.424389537},
{'learn':[4.785367055],'iteration':197,'passed_time':0.3501692859,'remaining_time':1.418362461},
{'learn':[4.780376856],'iteration':198,'passed_time':0.3508553223,'remaining_time':1.412236749},
{'learn':[4.776691261],'iteration':199,'passed_time':0.3515418112,'remaining_time':1.406167245},
{'learn':[4.773470753],'iteration':200,'passed_time':0.3522842157,'remaining_time':1.400373574},
{'learn':[4.77207327],'iteration':201,'passed_time':0.3530074086,'remaining_time':1.39455402},
{'learn':[4.767347177],'iteration':202,'passed_time':0.3537597159,'remaining_time':1.388898983},
{'learn':[4.763983068],'iteration':203,'passed_time':0.3544654784,'remaining_time':1.383110396},
{'learn':[4.761588849],'iteration':204,'passed_time':0.3555069096,'remaining_time':1.378673137},
{'learn':[4.758558086],'iteration':205,'passed_time':0.3563621035,'remaining_time':1.37355102},
{'learn':[4.753678804],'iteration':206,'passed_time':0.3571126545,'remaining_time':1.368069251},
{'learn':[4.746510889],'iteration':207,'passed_time':0.3578386561,'remaining_time':1.362539498},
{'learn':[4.744840601],'iteration':208,'passed_time':0.3586169679,'remaining_time':1.357253692},
{'learn':[4.741702222],'iteration':209,'passed_time':0.3593689942,'remaining_time':1.351911931},
{'learn':[4.739352853],'iteration':210,'passed_time':0.3601092188,'remaining_time':1.346569543},
{'learn':[4.735539287],'iteration':211,'passed_time':0.3609111176,'remaining_time':1.341499815},
{'learn':[4.730726751],'iteration':212,'passed_time':0.3616360132,'remaining_time':1.336185645},
{'learn':[4.726416092],'iteration':213,'passed_time':0.3623562365,'remaining_time':1.330897205},
{'learn':[4.721293082],'iteration':214,'passed_time':0.363130742,'remaining_time':1.325849453},
{'learn':[4.718443695],'iteration':215,'passed_time':0.3638924334,'remaining_time':1.320794758},
{'learn':[4.711627962],'iteration':216,'passed_time':0.3646675547,'remaining_time':1.315828089},
{'learn':[4.709790764],'iteration':217,'passed_time':0.3654040237,'remaining_time':1.310761223},
{'learn':[4.706913073],'iteration':218,'passed_time':0.3661638551,'remaining_time':1.305817218},
{'learn':[4.703846389],'iteration':219,'passed_time':0.3669781076,'remaining_time':1.3011042},
{'learn':[4.701001135],'iteration':220,'passed_time':0.3677312646,'remaining_time':1.296211109},
{'learn':[4.700380864],'iteration':221,'passed_time':0.3685868346,'remaining_time':1.291714222},
{'learn':[4.695837486],'iteration':222,'passed_time':0.3693847876,'remaining_time':1.287049238},
{'learn':[4.691242996],'iteration':223,'passed_time':0.3713671068,'remaining_time':1.286521763},
{'learn':[4.690284609],'iteration':224,'passed_time':0.3723241115,'remaining_time':1.282449717},
{'learn':[4.68827119],'iteration':225,'passed_time':0.3730539585,'remaining_time':1.277627274},
{'learn':[4.686922425],'iteration':226,'passed_time':0.3737808625,'remaining_time':1.272830867},
{'learn':[4.686085874],'iteration':227,'passed_time':0.374461987,'remaining_time':1.267915149},
{'learn':[4.683230741],'iteration':228,'passed_time':0.3751519046,'remaining_time':1.26306602},
{'learn':[4.6773487],'iteration':229,'passed_time':0.3758246881,'remaining_time':1.258195695},
{'learn':[4.671462906],'iteration':230,'passed_time':0.3765545896,'remaining_time':1.253551859},
{'learn':[4.664799601],'iteration':231,'passed_time':0.3772548981,'remaining_time':1.248843801},
{'learn':[4.660979386],'iteration':232,'passed_time':0.3780000001,'remaining_time':1.244317597},
{'learn':[4.656281279],'iteration':233,'passed_time':0.3787682426,'remaining_time':1.239899461},
{'learn':[4.651997094],'iteration':234,'passed_time':0.379533201,'remaining_time':1.235501697},
{'learn':[4.650151977],'iteration':235,'passed_time':0.3802651445,'remaining_time':1.231027841},
{'learn':[4.648478046],'iteration':236,'passed_time':0.3810753447,'remaining_time':1.226837502},
{'learn':[4.646364602],'iteration':237,'passed_time':0.381799236,'remaining_time':1.222399235},
{'learn':[4.642635873],'iteration':238,'passed_time':0.3825167934,'remaining_time':1.217971882},
{'learn':[4.640860821],'iteration':239,'passed_time':0.3832238044,'remaining_time':1.213542047},
{'learn':[4.639446822],'iteration':240,'passed_time':0.383900206,'remaining_time':1.209046707},
{'learn':[4.637120072],'iteration':241,'passed_time':0.384641427,'remaining_time':1.204785957},
{'learn':[4.633769267],'iteration':242,'passed_time':0.3858586873,'remaining_time':1.202037145},
{'learn':[4.630491517],'iteration':243,'passed_time':0.3868420287,'remaining_time':1.198576122},
{'learn':[4.627813333],'iteration':244,'passed_time':0.3876368671,'remaining_time':1.194554427},
{'learn':[4.622496304],'iteration':245,'passed_time':0.3883876816,'remaining_time':1.190424032},
{'learn':[4.618979301],'iteration':246,'passed_time':0.3891461558,'remaining_time':1.186344354},
{'learn':[4.616563458],'iteration':247,'passed_time':0.3898508385,'remaining_time':1.182128349},
{'learn':[4.614759385],'iteration':248,'passed_time':0.3905510615,'remaining_time':1.177927097},
{'learn':[4.61251363],'iteration':249,'passed_time':0.3913092982,'remaining_time':1.173927895},
{'learn':[4.608796693],'iteration':250,'passed_time':0.3921102415,'remaining_time':1.170081956},
{'learn':[4.60847774],'iteration':251,'passed_time':0.3927892168,'remaining_time':1.165898152},
{'learn':[4.605195659],'iteration':252,'passed_time':0.3935151273,'remaining_time':1.161880633},
{'learn':[4.60103766],'iteration':253,'passed_time':0.3942144084,'remaining_time':1.157810821},
{'learn':[4.599325598],'iteration':254,'passed_time':0.3949257572,'remaining_time':1.153802702},
{'learn':[4.597012808],'iteration':255,'passed_time':0.395662639,'remaining_time':1.149894545},
{'learn':[4.594161533],'iteration':256,'passed_time':0.3964604798,'remaining_time':1.146187302},
{'learn':[4.592197259],'iteration':257,'passed_time':0.3971483897,'remaining_time':1.142186454},
{'learn':[4.58952828],'iteration':258,'passed_time':0.3978733284,'remaining_time':1.138317129},
{'learn':[4.585816572],'iteration':259,'passed_time':0.3985558691,'remaining_time':1.13435132},
{'learn':[4.582934052],'iteration':260,'passed_time':0.399268668,'remaining_time':1.130496344},
{'learn':[4.582234842],'iteration':261,'passed_time':0.400308991,'remaining_time':1.127587921},
{'learn':[4.57571562],'iteration':262,'passed_time':0.4012775902,'remaining_time':1.124492715},
{'learn':[4.571197349],'iteration':263,'passed_time':0.4020008857,'remaining_time':1.120729742},
{'learn':[4.56723703],'iteration':264,'passed_time':0.4026765583,'remaining_time':1.116857624},
{'learn':[4.560335567],'iteration':265,'passed_time':0.403385597,'remaining_time':1.11310161},
{'learn':[4.554709345],'iteration':266,'passed_time':0.4040864141,'remaining_time':1.109345848},
{'learn':[4.552806306],'iteration':267,'passed_time':0.4048229468,'remaining_time':1.105710437},
{'learn':[4.550766241],'iteration':268,'passed_time':0.4055119767,'remaining_time':1.101967491},
{'learn':[4.549216045],'iteration':269,'passed_time':0.4062420976,'remaining_time':1.098358264},
{'learn':[4.547687452],'iteration':270,'passed_time':0.4069931656,'remaining_time':1.094826634},
{'learn':[4.545642435],'iteration':271,'passed_time':0.4077253915,'remaining_time':1.091265018},
{'learn':[4.543930359],'iteration':272,'passed_time':0.4085081212,'remaining_time':1.087858623},
{'learn':[4.541029943],'iteration':273,'passed_time':0.4093645448,'remaining_time':1.084666641},
{'learn':[4.537781449],'iteration':274,'passed_time':0.4101477642,'remaining_time':1.081298651},
{'learn':[4.53066128],'iteration':275,'passed_time':0.4108954142,'remaining_time':1.077856087},
{'learn':[4.526763956],'iteration':276,'passed_time':0.4116241651,'remaining_time':1.074383651},
{'learn':[4.522036004],'iteration':277,'passed_time':0.4123540559,'remaining_time':1.070933915},
{'learn':[4.515307629],'iteration':278,'passed_time':0.413047106,'remaining_time':1.067408471},
{'learn':[4.51109143],'iteration':279,'passed_time':0.4138154924,'remaining_time':1.06409698},
{'learn':[4.508233494],'iteration':280,'passed_time':0.4147702913,'remaining_time':1.061280567},
{'learn':[4.502555629],'iteration':281,'passed_time':0.4159018487,'remaining_time':1.058927402},
{'learn':[4.500081355],'iteration':282,'passed_time':0.4166455173,'remaining_time':1.055600127},
{'learn':[4.495281743],'iteration':283,'passed_time':0.4173838485,'remaining_time':1.05227759},
{'learn':[4.492138869],'iteration':284,'passed_time':0.4181063509,'remaining_time':1.048933477},
{'learn':[4.491708261],'iteration':285,'passed_time':0.41876663,'remaining_time':1.045452356},
{'learn':[4.489398865],'iteration':286,'passed_time':0.4195122509,'remaining_time':1.042202909},
{'learn':[4.485796373],'iteration':287,'passed_time':0.4202255769,'remaining_time':1.03889101},
{'learn':[4.479542205],'iteration':288,'passed_time':0.4209536269,'remaining_time':1.035633317},
{'learn':[4.475986993],'iteration':289,'passed_time':0.4216884179,'remaining_time':1.032409575},
{'learn':[4.468661855],'iteration':290,'passed_time':0.4224812194,'remaining_time':1.029344277},
{'learn':[4.463785664],'iteration':291,'passed_time':0.4232057018,'remaining_time':1.026128893},
{'learn':[4.460445831],'iteration':292,'passed_time':0.4239614439,'remaining_time':1.023005941},
{'learn':[4.45692492],'iteration':293,'passed_time':0.4246714847,'remaining_time':1.019789348},
{'learn':[4.454031688],'iteration':294,'passed_time':0.4253480234,'remaining_time':1.016509683},
{'learn':[4.451672391],'iteration':295,'passed_time':0.4260747704,'remaining_time':1.013367022},
{'learn':[4.45031553],'iteration':296,'passed_time':0.4267462943,'remaining_time':1.010109915},
{'learn':[4.446782666],'iteration':297,'passed_time':0.4274416524,'remaining_time':1.006926309},
{'learn':[4.444369689],'iteration':298,'passed_time':0.4281819261,'remaining_time':1.00386465},
{'learn':[4.44411683],'iteration':299,'passed_time':0.4288513133,'remaining_time':1.000653064},
{'learn':[4.440876943],'iteration':300,'passed_time':0.4299063995,'remaining_time':0.998354064},
{'learn':[4.439336453],'iteration':301,'passed_time':0.4308729567,'remaining_time':0.995858688},
{'learn':[4.436666901],'iteration':302,'passed_time':0.4316042164,'remaining_time':0.9928321414},
{'learn':[4.433043336],'iteration':303,'passed_time':0.4323204964,'remaining_time':0.9897863997},
{'learn':[4.431419305],'iteration':304,'passed_time':0.433041121,'remaining_time':0.9867658332},
{'learn':[4.428859646],'iteration':305,'passed_time':0.433785993,'remaining_time':0.9838152913},
{'learn':[4.424552441],'iteration':306,'passed_time':0.4345115538,'remaining_time':0.9808355269},
{'learn':[4.422706391],'iteration':307,'passed_time':0.4351879518,'remaining_time':0.9777599437},
{'learn':[4.421427994],'iteration':308,'passed_time':0.4358902652,'remaining_time':0.9747578423},
{'learn':[4.418733158],'iteration':309,'passed_time':0.4365992285,'remaining_time':0.9717853795},
{'learn':[4.415656941],'iteration':310,'passed_time':0.4373466751,'remaining_time':0.9689127304},
{'learn':[4.410747417],'iteration':311,'passed_time':0.4380654832,'remaining_time':0.9659905527},
{'learn':[4.408126521],'iteration':312,'passed_time':0.4387845441,'remaining_time':0.963083009},
{'learn':[4.407843853],'iteration':313,'passed_time':0.439475209,'remaining_time':0.9601273673},
{'learn':[4.405219398],'iteration':314,'passed_time':0.4402578525,'remaining_time':0.9573861237},
{'learn':[4.402708465],'iteration':315,'passed_time':0.4409969375,'remaining_time':0.9545629914},
{'learn':[4.40104971],'iteration':316,'passed_time':0.4417367135,'remaining_time':0.9517544962},
{'learn':[4.400830038],'iteration':317,'passed_time':0.4424327895,'remaining_time':0.9488652907},
{'learn':[4.39784288],'iteration':318,'passed_time':0.4431477276,'remaining_time':0.9460301019},
{'learn':[4.393741845],'iteration':319,'passed_time':0.443926326,'remaining_time':0.9433434428},
{'learn':[4.393425936],'iteration':320,'passed_time':0.4448550436,'remaining_time':0.9409862138},
{'learn':[4.390505974],'iteration':321,'passed_time':0.4457870015,'remaining_time':0.9386446802},
{'learn':[4.390305136],'iteration':322,'passed_time':0.4465097105,'remaining_time':0.9358732941},
{'learn':[4.38568203],'iteration':323,'passed_time':0.4472686943,'remaining_time':0.9331902387},
{'learn':[4.383057135],'iteration':324,'passed_time':0.4479379476,'remaining_time':0.9303326603},
{'learn':[4.380662684],'iteration':325,'passed_time':0.4486319389,'remaining_time':0.9275396528},
{'learn':[4.37805727],'iteration':326,'passed_time':0.4493159315,'remaining_time':0.9247389049},
{'learn':[4.373708319],'iteration':327,'passed_time':0.4500565867,'remaining_time':0.9220671532},
{'learn':[4.36887921],'iteration':328,'passed_time':0.4508489497,'remaining_time':0.9195125996},
{'learn':[4.367895929],'iteration':329,'passed_time':0.4515841246,'remaining_time':0.9168526166},
{'learn':[4.362140573],'iteration':330,'passed_time':0.4523172094,'remaining_time':0.9142000396},
{'learn':[4.361931924],'iteration':331,'passed_time':0.4529892749,'remaining_time':0.911436252},
{'learn':[4.359656377],'iteration':332,'passed_time':0.4536965626,'remaining_time':0.9087555774},
{'learn':[4.354281355],'iteration':333,'passed_time':0.4544333603,'remaining_time':0.9061455628},
{'learn':[4.348589447],'iteration':334,'passed_time':0.4552189447,'remaining_time':0.9036435768},
{'learn':[4.346355698],'iteration':335,'passed_time':0.4559599923,'remaining_time':0.9010637943},
{'learn':[4.343894047],'iteration':336,'passed_time':0.4566873454,'remaining_time':0.8984679822},
{'learn':[4.341561356],'iteration':337,'passed_time':0.4574165023,'remaining_time':0.8958867588},
{'learn':[4.338869061],'iteration':338,'passed_time':0.4581068822,'remaining_time':0.8932408529},
{'learn':[4.333720063],'iteration':339,'passed_time':0.4590514815,'remaining_time':0.8910999347},
{'learn':[4.330892223],'iteration':340,'passed_time':0.4600926179,'remaining_time':0.8891525959},
{'learn':[4.328311474],'iteration':341,'passed_time':0.4609672377,'remaining_time':0.8868901824},
{'learn':[4.324580133],'iteration':342,'passed_time':0.4616954807,'remaining_time':0.8843554835},
{'learn':[4.323354432],'iteration':343,'passed_time':0.4624816879,'remaining_time':0.8819418235},
{'learn':[4.323159553],'iteration':344,'passed_time':0.4632124028,'remaining_time':0.879432243},
{'learn':[4.318639682],'iteration':345,'passed_time':0.4640034272,'remaining_time':0.8770469404},
{'learn':[4.312712208],'iteration':346,'passed_time':0.4648306207,'remaining_time':0.8747388914},
{'learn':[4.311461062],'iteration':347,'passed_time':0.4657879391,'remaining_time':0.8726831503},
{'learn':[4.311178356],'iteration':348,'passed_time':0.4667467233,'remaining_time':0.8706364381},
{'learn':[4.311102505],'iteration':349,'passed_time':0.4674514801,'remaining_time':0.8681241773},
{'learn':[4.310232308],'iteration':350,'passed_time':0.468155104,'remaining_time':0.8656201211},
{'learn':[4.305128197],'iteration':351,'passed_time':0.4688393035,'remaining_time':0.8630905361},
{'learn':[4.304595496],'iteration':352,'passed_time':0.4695354252,'remaining_time':0.860593258},
{'learn':[4.3004992],'iteration':353,'passed_time':0.4702276017,'remaining_time':0.8580989568},
{'learn':[4.297581524],'iteration':354,'passed_time':0.4709098472,'remaining_time':0.8555967646},
{'learn':[4.297355825],'iteration':355,'passed_time':0.4716048125,'remaining_time':0.8531278069},
{'learn':[4.295758715],'iteration':356,'passed_time':0.4723500299,'remaining_time':0.8507592975},
{'learn':[4.292500657],'iteration':357,'passed_time':0.4730758983,'remaining_time':0.8483651585},
{'learn':[4.290797586],'iteration':358,'passed_time':0.4740957132,'remaining_time':0.8465051593},
{'learn':[4.286410608],'iteration':359,'passed_time':0.4750521492,'remaining_time':0.8445371542},
{'learn':[4.280278245],'iteration':360,'passed_time':0.475920772,'remaining_time':0.8424193166},
{'learn':[4.279941283],'iteration':361,'passed_time':0.4766194893,'remaining_time':0.8400089342},
{'learn':[4.274426275],'iteration':362,'passed_time':0.4773275971,'remaining_time':0.8376244611},
{'learn':[4.273567658],'iteration':363,'passed_time':0.4780654707,'remaining_time':0.835301207},
{'learn':[4.269488271],'iteration':364,'passed_time':0.4788489835,'remaining_time':0.8330660398},
{'learn':[4.266838205],'iteration':365,'passed_time':0.4795801549,'remaining_time':0.8307481372},
{'learn':[4.263456509],'iteration':366,'passed_time':0.4803354276,'remaining_time':0.8284804515},
{'learn':[4.260360204],'iteration':367,'passed_time':0.4810697948,'remaining_time':0.8261850824},
{'learn':[4.255120549],'iteration':368,'passed_time':0.4818222211,'remaining_time':0.8239290556},
{'learn':[4.252582211],'iteration':369,'passed_time':0.4825516019,'remaining_time':0.8216419168},
{'learn':[4.247857931],'iteration':370,'passed_time':0.4832968596,'remaining_time':0.8193900934},
{'learn':[4.245288911],'iteration':371,'passed_time':0.4839967642,'remaining_time':0.8170698063},
{'learn':[4.24048515],'iteration':372,'passed_time':0.4847399589,'remaining_time':0.8148309764},
{'learn':[4.2378365],'iteration':373,'passed_time':0.4854767217,'remaining_time':0.812589379},
{'learn':[4.236751063],'iteration':374,'passed_time':0.4862272573,'remaining_time':0.8103787622},
{'learn':[4.233240093],'iteration':375,'passed_time':0.4869192729,'remaining_time':0.8080787933},
{'learn':[4.230358421],'iteration':376,'passed_time':0.4875859536,'remaining_time':0.8057454882},
{'learn':[4.225853583],'iteration':377,'passed_time':0.4883117992,'remaining_time':0.8035183575},
{'learn':[4.224702126],'iteration':378,'passed_time':0.489126994,'remaining_time':0.8014455496},
{'learn':[4.224361982],'iteration':379,'passed_time':0.489920606,'remaining_time':0.7993441466},
{'learn':[4.223787954],'iteration':380,'passed_time':0.490634713,'remaining_time':0.7971204392},
{'learn':[4.22144054],'iteration':381,'passed_time':0.4913850015,'remaining_time':0.7949631699},
{'learn':[4.217739335],'iteration':382,'passed_time':0.4921089359,'remaining_time':0.7927707922},
{'learn':[4.215611665],'iteration':383,'passed_time':0.4928912073,'remaining_time':0.790679645},
{'learn':[4.210236863],'iteration':384,'passed_time':0.4936706806,'remaining_time':0.7885908275},
{'learn':[4.208454294],'iteration':385,'passed_time':0.4943898584,'remaining_time':0.7864128835},
{'learn':[4.207446501],'iteration':386,'passed_time':0.4951283882,'remaining_time':0.7842731317},
{'learn':[4.204985442],'iteration':387,'passed_time':0.4958471034,'remaining_time':0.7821093486},
{'learn':[4.202796622],'iteration':388,'passed_time':0.4965760651,'remaining_time':0.7799690893},
{'learn':[4.199774004],'iteration':389,'passed_time':0.4973392714,'remaining_time':0.7778896296},
{'learn':[4.199458358],'iteration':390,'passed_time':0.4980202117,'remaining_time':0.7756887696},
{'learn':[4.19751254],'iteration':391,'passed_time':0.4987324971,'remaining_time':0.7735442812},
{'learn':[4.195201346],'iteration':392,'passed_time':0.499498089,'remaining_time':0.7714894149},
{'learn':[4.190593508],'iteration':393,'passed_time':0.5002218781,'remaining_time':0.7693767973},
{'learn':[4.187212054],'iteration':394,'passed_time':0.5009122285,'remaining_time':0.7672199956},
{'learn':[4.184984466],'iteration':395,'passed_time':0.5016547298,'remaining_time':0.7651501434},
{'learn':[4.182832144],'iteration':396,'passed_time':0.5023925955,'remaining_time':0.7630799372},
{'learn':[4.179752812],'iteration':397,'passed_time':0.5031100831,'remaining_time':0.760985603},
{'learn':[4.17878934],'iteration':398,'passed_time':0.5038884269,'remaining_time':0.7589898359},
{'learn':[4.174548229],'iteration':399,'passed_time':0.5046285956,'remaining_time':0.7569428933},
{'learn':[4.168872556],'iteration':400,'passed_time':0.5053951469,'remaining_time':0.7549418778},
{'learn':[4.163926494],'iteration':401,'passed_time':0.5061615686,'remaining_time':0.7529468109},
{'learn':[4.159485076],'iteration':402,'passed_time':0.5069288599,'remaining_time':0.7509591299},
{'learn':[4.155926102],'iteration':403,'passed_time':0.5076906962,'remaining_time':0.7489694429},
{'learn':[4.153540115],'iteration':404,'passed_time':0.5084244067,'remaining_time':0.7469444988},
{'learn':[4.150983044],'iteration':405,'passed_time':0.5091464298,'remaining_time':0.7449088161},
{'learn':[4.146539132],'iteration':406,'passed_time':0.5099207783,'remaining_time':0.7429558269},
{'learn':[4.144869174],'iteration':407,'passed_time':0.5106383115,'remaining_time':0.7409261775},
{'learn':[4.142825962],'iteration':408,'passed_time':0.51137111,'remaining_time':0.7389250025},
{'learn':[4.142467378],'iteration':409,'passed_time':0.5121533234,'remaining_time':0.7370011239},
{'learn':[4.141800768],'iteration':410,'passed_time':0.512868337,'remaining_time':0.7349864976},
{'learn':[4.140107084],'iteration':411,'passed_time':0.5136086232,'remaining_time':0.7330142487},
{'learn':[4.136243196],'iteration':412,'passed_time':0.514355259,'remaining_time':0.7310569904},
{'learn':[4.133618439],'iteration':413,'passed_time':0.5150901451,'remaining_time':0.7290889493},
{'learn':[4.131053025],'iteration':414,'passed_time':0.5158461895,'remaining_time':0.7271566768},
{'learn':[4.128379975],'iteration':415,'passed_time':0.5165939172,'remaining_time':0.7252183837},
{'learn':[4.127068571],'iteration':416,'passed_time':0.5172968421,'remaining_time':0.7232231629},
{'learn':[4.125969877],'iteration':417,'passed_time':0.5180252233,'remaining_time':0.7212695693},
{'learn':[4.123893633],'iteration':418,'passed_time':0.5188206803,'remaining_time':0.7194148335},
{'learn':[4.119643722],'iteration':419,'passed_time':0.5195667096,'remaining_time':0.7174968847},
{'learn':[4.11465686],'iteration':420,'passed_time':0.5204761349,'remaining_time':0.7158092212},
{'learn':[4.111565986],'iteration':421,'passed_time':0.5212943175,'remaining_time':0.7140002738},
{'learn':[4.106322452],'iteration':422,'passed_time':0.5220474026,'remaining_time':0.7121072135},
{'learn':[4.104222175],'iteration':423,'passed_time':0.5228780099,'remaining_time':0.7103248436},
{'learn':[4.103008002],'iteration':424,'passed_time':0.523824252,'remaining_time':0.7087033997},
{'learn':[4.099176337],'iteration':425,'passed_time':0.5246183671,'remaining_time':0.7068801473},
{'learn':[4.096525716],'iteration':426,'passed_time':0.5255106952,'remaining_time':0.705193509},
{'learn':[4.094967724],'iteration':427,'passed_time':0.5262500623,'remaining_time':0.703306158},
{'learn':[4.094683584],'iteration':428,'passed_time':0.527159938,'remaining_time':0.7016511063},
{'learn':[4.091096563],'iteration':429,'passed_time':0.5278870572,'remaining_time':0.6997572619},
{'learn':[4.089178677],'iteration':430,'passed_time':0.5286704988,'remaining_time':0.6979431875},
{'learn':[4.085335077],'iteration':431,'passed_time':0.5294027962,'remaining_time':0.6960666395},
{'learn':[4.084852122],'iteration':432,'passed_time':0.5301033925,'remaining_time':0.694153865},
{'learn':[4.080322952],'iteration':433,'passed_time':0.5308229181,'remaining_time':0.6922713633},
{'learn':[4.077449519],'iteration':434,'passed_time':0.5315387743,'remaining_time':0.6903894425},
{'learn':[4.076568374],'iteration':435,'passed_time':0.532238169,'remaining_time':0.6884915764},
{'learn':[4.076071793],'iteration':436,'passed_time':0.5329744268,'remaining_time':0.6866466872},
{'learn':[4.075027644],'iteration':437,'passed_time':0.5336920697,'remaining_time':0.6847829753},
{'learn':[4.07020837],'iteration':438,'passed_time':0.5344373095,'remaining_time':0.6829597509},
{'learn':[4.06833694],'iteration':439,'passed_time':0.5351609141,'remaining_time':0.6811138907},
{'learn':[4.063936568],'iteration':440,'passed_time':0.5359129822,'remaining_time':0.6793091996},
{'learn':[4.061734926],'iteration':441,'passed_time':0.5366460492,'remaining_time':0.6774852838},
{'learn':[4.060815619],'iteration':442,'passed_time':0.5373561865,'remaining_time':0.6756374625},
{'learn':[4.056407489],'iteration':443,'passed_time':0.5380952131,'remaining_time':0.6738309426},
{'learn':[4.05238936],'iteration':444,'passed_time':0.5387831604,'remaining_time':0.6719655147},
{'learn':[4.049685254],'iteration':445,'passed_time':0.5395187139,'remaining_time':0.6701645011},
{'learn':[4.045162016],'iteration':446,'passed_time':0.5402696793,'remaining_time':0.6683873214},
{'learn':[4.042955482],'iteration':447,'passed_time':0.5410236095,'remaining_time':0.666618376},
{'learn':[4.041467663],'iteration':448,'passed_time':0.5417432192,'remaining_time':0.6648118347},
{'learn':[4.038920476],'iteration':449,'passed_time':0.5424954802,'remaining_time':0.6630500314},
{'learn':[4.036694383],'iteration':450,'passed_time':0.5432228779,'remaining_time':0.6612624389},
{'learn':[4.034999007],'iteration':451,'passed_time':0.5439181829,'remaining_time':0.6594406288},
{'learn':[4.031928018],'iteration':452,'passed_time':0.5446746586,'remaining_time':0.6576976562},
{'learn':[4.028718143],'iteration':453,'passed_time':0.5454198898,'remaining_time':0.6559455063},
{'learn':[4.027401978],'iteration':454,'passed_time':0.5461205904,'remaining_time':0.6541444435},
{'learn':[4.025930598],'iteration':455,'passed_time':0.5468526963,'remaining_time':0.6523856727},
{'learn':[4.021074523],'iteration':456,'passed_time':0.5475926855,'remaining_time':0.650640762},
{'learn':[4.020268486],'iteration':457,'passed_time':0.5483086518,'remaining_time':0.6488718106},
{'learn':[4.017986361],'iteration':458,'passed_time':0.5490911546,'remaining_time':0.6471858707},
{'learn':[4.014814804],'iteration':459,'passed_time':0.5497980776,'remaining_time':0.6454151346},
{'learn':[4.009704796],'iteration':460,'passed_time':0.5505221377,'remaining_time':0.6436690504},
{'learn':[4.008440457],'iteration':461,'passed_time':0.5512597627,'remaining_time':0.6419431869},
{'learn':[4.004854849],'iteration':462,'passed_time':0.5519224898,'remaining_time':0.6401347235},
{'learn':[4.000898028],'iteration':463,'passed_time':0.552722786,'remaining_time':0.6384901149},
{'learn':[3.996617985],'iteration':464,'passed_time':0.553540724,'remaining_time':0.6368694352},
{'learn':[3.995443319],'iteration':465,'passed_time':0.5542797471,'remaining_time':0.6351617703},
{'learn':[3.990771995],'iteration':466,'passed_time':0.5549936126,'remaining_time':0.6334295408},
{'learn':[3.989249359],'iteration':467,'passed_time':0.5557044209,'remaining_time':0.6316981879},
{'learn':[3.986599538],'iteration':468,'passed_time':0.5564212828,'remaining_time':0.6299780408},
{'learn':[3.985628919],'iteration':469,'passed_time':0.5570950498,'remaining_time':0.6282135668},
{'learn':[3.985086112],'iteration':470,'passed_time':0.5577729204,'remaining_time':0.6264583331},
{'learn':[3.98466839],'iteration':471,'passed_time':0.558466394,'remaining_time':0.6247251187},
{'learn':[3.984233894],'iteration':472,'passed_time':0.5591760498,'remaining_time':0.6230143303},
{'learn':[3.981855845],'iteration':473,'passed_time':0.559902519,'remaining_time':0.6213264241},
{'learn':[3.978684264],'iteration':474,'passed_time':0.5606531017,'remaining_time':0.6196692177},
{'learn':[3.974361269],'iteration':475,'passed_time':0.5613607462,'remaining_time':0.6179685525},
{'learn':[3.972074049],'iteration':476,'passed_time':0.5621213927,'remaining_time':0.6163301643},
{'learn':[3.97191982],'iteration':477,'passed_time':0.5628886812,'remaining_time':0.6147027021},
{'learn':[3.969616848],'iteration':478,'passed_time':0.5635780804,'remaining_time':0.6129941125},
{'learn':[3.968533527],'iteration':479,'passed_time':0.564302524,'remaining_time':0.6113277344},
{'learn':[3.967568753],'iteration':480,'passed_time':0.565016376,'remaining_time':0.6096538444},
{'learn':[3.966232553],'iteration':481,'passed_time':0.5657461322,'remaining_time':0.60800103},
{'learn':[3.961522393],'iteration':482,'passed_time':0.5664821197,'remaining_time':0.6063587079},
{'learn':[3.955829553],'iteration':483,'passed_time':0.5671889776,'remaining_time':0.6046890753},
{'learn':[3.954248095],'iteration':484,'passed_time':0.5678696017,'remaining_time':0.6029955564},
{'learn':[3.951922606],'iteration':485,'passed_time':0.5686114206,'remaining_time':0.6013709263},
{'learn':[3.94978202],'iteration':486,'passed_time':0.5693440503,'remaining_time':0.5997402419},
{'learn':[3.949518999],'iteration':487,'passed_time':0.5700125693,'remaining_time':0.5980459743},
{'learn':[3.945431216],'iteration':488,'passed_time':0.5707393793,'remaining_time':0.5964168156},
{'learn':[3.943249086],'iteration':489,'passed_time':0.5714774405,'remaining_time':0.5948030503},
{'learn':[3.941981548],'iteration':490,'passed_time':0.5722264616,'remaining_time':0.5932042138},
{'learn':[3.936600517],'iteration':491,'passed_time':0.5729778487,'remaining_time':0.5916112747},
{'learn':[3.934476885],'iteration':492,'passed_time':0.5737137992,'remaining_time':0.5900058746},
{'learn':[3.93045798],'iteration':493,'passed_time':0.5744163064,'remaining_time':0.5883697389},
{'learn':[3.925977375],'iteration':494,'passed_time':0.575170072,'remaining_time':0.5867896694},
{'learn':[3.92457993],'iteration':495,'passed_time':0.5759218412,'remaining_time':0.5852109032},
{'learn':[3.919849146],'iteration':496,'passed_time':0.5766496858,'remaining_time':0.5836112514},
{'learn':[3.919681964],'iteration':497,'passed_time':0.5774129028,'remaining_time':0.5820507574},
{'learn':[3.917633027],'iteration':498,'passed_time':0.578103491,'remaining_time':0.5804205391},
{'learn':[3.916616419],'iteration':499,'passed_time':0.5788132815,'remaining_time':0.5788132815},
{'learn':[3.912896166],'iteration':500,'passed_time':0.5795168289,'remaining_time':0.5772033884},
{'learn':[3.912769674],'iteration':501,'passed_time':0.5802032281,'remaining_time':0.5755800948},
{'learn':[3.909373788],'iteration':502,'passed_time':0.5809526954,'remaining_time':0.5740228422},
{'learn':[3.906706036],'iteration':503,'passed_time':0.5816913018,'remaining_time':0.5724581066},
{'learn':[3.903895664],'iteration':504,'passed_time':0.5823875207,'remaining_time':0.5708550945},
{'learn':[3.902982967],'iteration':505,'passed_time':0.5830819279,'remaining_time':0.569253898},
{'learn':[3.900905528],'iteration':506,'passed_time':0.5838140925,'remaining_time':0.5676929933},
{'learn':[3.897463465],'iteration':507,'passed_time':0.5845700415,'remaining_time':0.5661583867},
{'learn':[3.895918033],'iteration':508,'passed_time':0.5853281265,'remaining_time':0.5646289},
{'learn':[3.893921936],'iteration':509,'passed_time':0.5860586786,'remaining_time':0.5630759853},
{'learn':[3.890237934],'iteration':510,'passed_time':0.5867912464,'remaining_time':0.5615282181},
{'learn':[3.887311613],'iteration':511,'passed_time':0.5875222668,'remaining_time':0.5599821605},
{'learn':[3.884869735],'iteration':512,'passed_time':0.5883015899,'remaining_time':0.558485135},
{'learn':[3.882101231],'iteration':513,'passed_time':0.5890587091,'remaining_time':0.5569699078},
{'learn':[3.88060368],'iteration':514,'passed_time':0.589798871,'remaining_time':0.5554416552},
{'learn':[3.877726076],'iteration':515,'passed_time':0.5905565999,'remaining_time':0.5539329348},
{'learn':[3.874938145],'iteration':516,'passed_time':0.5912617245,'remaining_time':0.5523779747},
{'learn':[3.874340833],'iteration':517,'passed_time':0.5920683041,'remaining_time':0.5509207},
{'learn':[3.873105224],'iteration':518,'passed_time':0.5928513864,'remaining_time':0.5494441558},
{'learn':[3.869800236],'iteration':519,'passed_time':0.5935732453,'remaining_time':0.5479137649},
{'learn':[3.867932518],'iteration':520,'passed_time':0.5943051478,'remaining_time':0.5463957117},
{'learn':[3.866666962],'iteration':521,'passed_time':0.5950266239,'remaining_time':0.5448711231},
{'learn':[3.865527652],'iteration':522,'passed_time':0.5957605193,'remaining_time':0.5433609325},
{'learn':[3.861900081],'iteration':523,'passed_time':0.5965185234,'remaining_time':0.5418756053},
{'learn':[3.858502887],'iteration':524,'passed_time':0.5972322953,'remaining_time':0.5403530291},
{'learn':[3.858335097],'iteration':525,'passed_time':0.5979208555,'remaining_time':0.5388108089},
{'learn':[3.855719306],'iteration':526,'passed_time':0.5986671722,'remaining_time':0.5373236669},
{'learn':[3.855137428],'iteration':527,'passed_time':0.5993572241,'remaining_time':0.5357890337},
{'learn':[3.851985706],'iteration':528,'passed_time':0.6000673526,'remaining_time':0.5342754689},
{'learn':[3.851051809],'iteration':529,'passed_time':0.6007976144,'remaining_time':0.5327827902},
{'learn':[3.850679146],'iteration':530,'passed_time':0.6015188669,'remaining_time':0.5312850256},
{'learn':[3.848179484],'iteration':531,'passed_time':0.602234857,'remaining_time':0.5297855509},
{'learn':[3.844551071],'iteration':532,'passed_time':0.602941352,'remaining_time':0.5282806968},
{'learn':[3.841604794],'iteration':533,'passed_time':0.6036392129,'remaining_time':0.5267712981},
{'learn':[3.83969656],'iteration':534,'passed_time':0.6043777409,'remaining_time':0.5253002795},
{'learn':[3.836811463],'iteration':535,'passed_time':0.6051349712,'remaining_time':0.5238481841},
{'learn':[3.834182551],'iteration':536,'passed_time':0.605910767,'remaining_time':0.5224146836},
{'learn':[3.828012842],'iteration':537,'passed_time':0.6066551764,'remaining_time':0.5209566756},
{'learn':[3.826636176],'iteration':538,'passed_time':0.607362672,'remaining_time':0.5194697436},
{'learn':[3.826189798],'iteration':539,'passed_time':0.6082370297,'remaining_time':0.5181278401},
{'learn':[3.824104738],'iteration':540,'passed_time':0.6089926485,'remaining_time':0.5166869236},
{'learn':[3.82300218],'iteration':541,'passed_time':0.6097555699,'remaining_time':0.5152547067},
{'learn':[3.817146402],'iteration':542,'passed_time':0.6104995975,'remaining_time':0.5138090536},
{'learn':[3.814638044],'iteration':543,'passed_time':0.611235771,'remaining_time':0.5123593963},
{'learn':[3.812979573],'iteration':544,'passed_time':0.6120337454,'remaining_time':0.5109639526},
{'learn':[3.811938825],'iteration':545,'passed_time':0.6127141715,'remaining_time':0.5094729558},
{'learn':[3.811479418],'iteration':546,'passed_time':0.6135237261,'remaining_time':0.5080918609},
{'learn':[3.80742981],'iteration':547,'passed_time':0.6142490411,'remaining_time':0.5066433697},
{'learn':[3.805097043],'iteration':548,'passed_time':0.6149882348,'remaining_time':0.5052089142},
{'learn':[3.801577232],'iteration':549,'passed_time':0.6156672656,'remaining_time':0.5037277628},
{'learn':[3.799762083],'iteration':550,'passed_time':0.6164182849,'remaining_time':0.502308185},
{'learn':[3.796393455],'iteration':551,'passed_time':0.6170941772,'remaining_time':0.5008300569},
{'learn':[3.793486459],'iteration':552,'passed_time':0.6177814479,'remaining_time':0.4993640275},
{'learn':[3.792006091],'iteration':553,'passed_time':0.6184982852,'remaining_time':0.4979246123},
{'learn':[3.78932128],'iteration':554,'passed_time':0.6191975072,'remaining_time':0.496473677},
{'learn':[3.787581812],'iteration':555,'passed_time':0.6199091424,'remaining_time':0.4950353583},
{'learn':[3.785308865],'iteration':556,'passed_time':0.6206560428,'remaining_time':0.4936276965},
{'learn':[3.78465475],'iteration':557,'passed_time':0.6213560802,'remaining_time':0.4921852822},
{'learn':[3.780498869],'iteration':558,'passed_time':0.6220911622,'remaining_time':0.4907731709},
{'learn':[3.778734909],'iteration':559,'passed_time':0.622818308,'remaining_time':0.489357242},
{'learn':[3.778652349],'iteration':560,'passed_time':0.6234766107,'remaining_time':0.4878898968},
{'learn':[3.777928006],'iteration':561,'passed_time':0.6242534905,'remaining_time':0.4865178449},
{'learn':[3.776131406],'iteration':562,'passed_time':0.6249883082,'remaining_time':0.4851152587},
{'learn':[3.772925617],'iteration':563,'passed_time':0.6257388872,'remaining_time':0.4837272249},
{'learn':[3.7727745],'iteration':564,'passed_time':0.6264015502,'remaining_time':0.4822737599},
{'learn':[3.771763073],'iteration':565,'passed_time':0.6271028729,'remaining_time':0.4808527329},
{'learn':[3.768738162],'iteration':566,'passed_time':0.6278148613,'remaining_time':0.4794423897},
{'learn':[3.767220794],'iteration':567,'passed_time':0.6285167962,'remaining_time':0.4780268591},
{'learn':[3.766691102],'iteration':568,'passed_time':0.6292156816,'remaining_time':0.4766115269},
{'learn':[3.766259335],'iteration':569,'passed_time':0.6298895587,'remaining_time':0.4751798426},
{'learn':[3.76116362],'iteration':570,'passed_time':0.6306234384,'remaining_time':0.4737958933},
{'learn':[3.758633056],'iteration':571,'passed_time':0.6313397234,'remaining_time':0.4724010518},
{'learn':[3.754603809],'iteration':572,'passed_time':0.6320181438,'remaining_time':0.470980362},
{'learn':[3.754070549],'iteration':573,'passed_time':0.6327294225,'remaining_time':0.4695866446},
{'learn':[3.750534319],'iteration':574,'passed_time':0.6334648905,'remaining_time':0.4682131799},
{'learn':[3.746491516],'iteration':575,'passed_time':0.6341862163,'remaining_time':0.4668315203},
{'learn':[3.744210544],'iteration':576,'passed_time':0.6349072334,'remaining_time':0.4654519233},
{'learn':[3.742929991],'iteration':577,'passed_time':0.6356260197,'remaining_time':0.4640729763},
{'learn':[3.740402992],'iteration':578,'passed_time':0.6363701873,'remaining_time':0.4627147648},
{'learn':[3.739644243],'iteration':579,'passed_time':0.6371058404,'remaining_time':0.4613525051},
{'learn':[3.737529404],'iteration':580,'passed_time':0.6378632851,'remaining_time':0.4600081178},
{'learn':[3.737196923],'iteration':581,'passed_time':0.6385951495,'remaining_time':0.4586473754},
{'learn':[3.733954464],'iteration':582,'passed_time':0.6393266841,'remaining_time':0.4572885545},
{'learn':[3.731608623],'iteration':583,'passed_time':0.6400538656,'remaining_time':0.455928781},
{'learn':[3.729843952],'iteration':584,'passed_time':0.6408274891,'remaining_time':0.4546041162},
{'learn':[3.727223798],'iteration':585,'passed_time':0.6415256199,'remaining_time':0.4532279977},
{'learn':[3.725351667],'iteration':586,'passed_time':0.6422559704,'remaining_time':0.4518768582},
{'learn':[3.725026912],'iteration':587,'passed_time':0.6430076603,'remaining_time':0.4505427824},
{'learn':[3.721974565],'iteration':588,'passed_time':0.6437077739,'remaining_time':0.4491746946},
{'learn':[3.720269493],'iteration':589,'passed_time':0.6443871167,'remaining_time':0.447794437},
{'learn':[3.718907466],'iteration':590,'passed_time':0.6451215235,'remaining_time':0.4464546584},
{'learn':[3.715602912],'iteration':591,'passed_time':0.6458288806,'remaining_time':0.4450982826},
{'learn':[3.714463059],'iteration':592,'passed_time':0.6464809829,'remaining_time':0.4437061721},
{'learn':[3.710802077],'iteration':593,'passed_time':0.6472034223,'remaining_time':0.4423646287},
{'learn':[3.708032435],'iteration':594,'passed_time':0.647941095,'remaining_time':0.4410355352},
{'learn':[3.703788939],'iteration':595,'passed_time':0.6486262414,'remaining_time':0.4396728213},
{'learn':[3.702500944],'iteration':596,'passed_time':0.6493321544,'remaining_time':0.4383263957},
{'learn':[3.698196925],'iteration':597,'passed_time':0.6500007186,'remaining_time':0.4369570048},
{'learn':[3.69658891],'iteration':598,'passed_time':0.6507274065,'remaining_time':0.4356288648},
{'learn':[3.696124066],'iteration':599,'passed_time':0.6514212732,'remaining_time':0.4342808488},
{'learn':[3.693537052],'iteration':600,'passed_time':0.6521716194,'remaining_time':0.432972506},
{'learn':[3.691343275],'iteration':601,'passed_time':0.6528673058,'remaining_time':0.4316298799},
{'learn':[3.690973831],'iteration':602,'passed_time':0.6535672735,'remaining_time':0.4302922182},
{'learn':[3.686151073],'iteration':603,'passed_time':0.6542839484,'remaining_time':0.4289676218},
{'learn':[3.683921982],'iteration':604,'passed_time':0.6550355927,'remaining_time':0.4276678663},
{'learn':[3.679975271],'iteration':605,'passed_time':0.6557080684,'remaining_time':0.4263184471},
{'learn':[3.674047638],'iteration':606,'passed_time':0.6564362175,'remaining_time':0.4250073039},
{'learn':[3.673151794],'iteration':607,'passed_time':0.6571939232,'remaining_time':0.4237171347},
{'learn':[3.670953108],'iteration':608,'passed_time':0.6578796408,'remaining_time':0.4223824952},
{'learn':[3.6703947],'iteration':609,'passed_time':0.6585867593,'remaining_time':0.4210636658},
{'learn':[3.668433805],'iteration':610,'passed_time':0.6592784459,'remaining_time':0.4197370138},
{'learn':[3.668304956],'iteration':611,'passed_time':0.6599511104,'remaining_time':0.4184003772},
{'learn':[3.667880012],'iteration':612,'passed_time':0.6606810703,'remaining_time':0.4171020786},
{'learn':[3.667282264],'iteration':613,'passed_time':0.6613556429,'remaining_time':0.4157708113},
{'learn':[3.664611483],'iteration':614,'passed_time':0.6621033979,'remaining_time':0.414487493},
{'learn':[3.662543394],'iteration':615,'passed_time':0.6628414727,'remaining_time':0.4131998791},
{'learn':[3.659041959],'iteration':616,'passed_time':0.6635963352,'remaining_time':0.4119244674},
{'learn':[3.656868545],'iteration':617,'passed_time':0.6643194084,'remaining_time':0.4106310907},
{'learn':[3.654785614],'iteration':618,'passed_time':0.6650276893,'remaining_time':0.4093304518},
{'learn':[3.654566096],'iteration':619,'passed_time':0.6657217825,'remaining_time':0.408023028},
{'learn':[3.651007045],'iteration':620,'passed_time':0.6664073627,'remaining_time':0.406712384},
{'learn':[3.648921786],'iteration':621,'passed_time':0.6671660919,'remaining_time':0.4054482037},
{'learn':[3.647655706],'iteration':622,'passed_time':0.6679191937,'remaining_time':0.4041822408},
{'learn':[3.647241144],'iteration':623,'passed_time':0.6686525773,'remaining_time':0.4029060402},
{'learn':[3.644195689],'iteration':624,'passed_time':0.6693531336,'remaining_time':0.4016118802},
{'learn':[3.642632246],'iteration':625,'passed_time':0.6700537199,'remaining_time':0.4003196346},
{'learn':[3.642523322],'iteration':626,'passed_time':0.6705968029,'remaining_time':0.3989355781},
{'learn':[3.641494659],'iteration':627,'passed_time':0.6712830561,'remaining_time':0.3976390078},
{'learn':[3.63976496],'iteration':628,'passed_time':0.672002085,'remaining_time':0.3963637099},
{'learn':[3.637945652],'iteration':629,'passed_time':0.6727484032,'remaining_time':0.395106205},
{'learn':[3.636233667],'iteration':630,'passed_time':0.6734698152,'remaining_time':0.3938357556},
{'learn':[3.635304404],'iteration':631,'passed_time':0.6741573704,'remaining_time':0.3925473296},
{'learn':[3.632234951],'iteration':632,'passed_time':0.6748589135,'remaining_time':0.3912689119},
{'learn':[3.631630987],'iteration':633,'passed_time':0.6755382367,'remaining_time':0.3899794868},
{'learn':[3.630301009],'iteration':634,'passed_time':0.6762599368,'remaining_time':0.3887163416},
{'learn':[3.629077964],'iteration':635,'passed_time':0.6769452528,'remaining_time':0.3874340755},
{'learn':[3.628004522],'iteration':636,'passed_time':0.6776712316,'remaining_time':0.3861768557},
{'learn':[3.625062876],'iteration':637,'passed_time':0.6784173129,'remaining_time':0.3849327073},
{'learn':[3.624917986],'iteration':638,'passed_time':0.6791088631,'remaining_time':0.3836593107},
{'learn':[3.622887087],'iteration':639,'passed_time':0.6798146145,'remaining_time':0.3823957206},
{'learn':[3.621220865],'iteration':640,'passed_time':0.6805271128,'remaining_time':0.3811376498},
{'learn':[3.621143844],'iteration':641,'passed_time':0.6811926625,'remaining_time':0.3798550984},
{'learn':[3.620822821],'iteration':642,'passed_time':0.681902651,'remaining_time':0.378599139},
{'learn':[3.619202826],'iteration':643,'passed_time':0.6826123004,'remaining_time':0.3773446878},
{'learn':[3.618204882],'iteration':644,'passed_time':0.6833798143,'remaining_time':0.3761237738},
{'learn':[3.614259666],'iteration':645,'passed_time':0.6841153909,'remaining_time':0.3748867622},
{'learn':[3.613415661],'iteration':646,'passed_time':0.6848468949,'remaining_time':0.3736490787},
{'learn':[3.611096773],'iteration':647,'passed_time':0.685584116,'remaining_time':0.372416063},
{'learn':[3.610820695],'iteration':648,'passed_time':0.6862473003,'remaining_time':0.3711445338},
{'learn':[3.609290065],'iteration':649,'passed_time':0.686966035,'remaining_time':0.3699047881},
{'learn':[3.60897947],'iteration':650,'passed_time':0.6876499717,'remaining_time':0.3686479879},
{'learn':[3.606570702],'iteration':651,'passed_time':0.6883665537,'remaining_time':0.3674103692},
{'learn':[3.606292637],'iteration':652,'passed_time':0.6890981015,'remaining_time':0.366182299},
{'learn':[3.602753838],'iteration':653,'passed_time':0.6898084735,'remaining_time':0.3649445441},
{'learn':[3.599755869],'iteration':654,'passed_time':0.6905318474,'remaining_time':0.3637152479},
{'learn':[3.599509575],'iteration':655,'passed_time':0.6912521423,'remaining_time':0.3624858795},
{'learn':[3.595337722],'iteration':656,'passed_time':0.6920512438,'remaining_time':0.3612992034},
{'learn':[3.595168561],'iteration':657,'passed_time':0.6927971966,'remaining_time':0.3600860809},
{'learn':[3.59290559],'iteration':658,'passed_time':0.6935314893,'remaining_time':0.3588683427},
{'learn':[3.592015928],'iteration':659,'passed_time':0.694250671,'remaining_time':0.357644285},
{'learn':[3.590680403],'iteration':660,'passed_time':0.6950053272,'remaining_time':0.3564399485},
{'learn':[3.590361532],'iteration':661,'passed_time':0.6957326665,'remaining_time':0.3552230231},
{'learn':[3.589069739],'iteration':662,'passed_time':0.6964133151,'remaining_time':0.3539838419},
{'learn':[3.585010186],'iteration':663,'passed_time':0.6970940364,'remaining_time':0.3527463799},
{'learn':[3.582997552],'iteration':664,'passed_time':0.6978085672,'remaining_time':0.3515276241},
{'learn':[3.582119256],'iteration':665,'passed_time':0.6985267033,'remaining_time':0.3503121905},
{'learn':[3.579019356],'iteration':666,'passed_time':0.6993008435,'remaining_time':0.3491262082},
{'learn':[3.57719559],'iteration':667,'passed_time':0.7000465245,'remaining_time':0.3479273146},
{'learn':[3.574050046],'iteration':668,'passed_time':0.7007628519,'remaining_time':0.3467152526},
{'learn':[3.572204518],'iteration':669,'passed_time':0.7014760005,'remaining_time':0.3455031047},
{'learn':[3.569508025],'iteration':670,'passed_time':0.7021986511,'remaining_time':0.3442971031},
{'learn':[3.566268704],'iteration':671,'passed_time':0.702937948,'remaining_time':0.3431006651},
{'learn':[3.562564052],'iteration':672,'passed_time':0.7036639536,'remaining_time':0.3418991275},
{'learn':[3.561173586],'iteration':673,'passed_time':0.7044161,'remaining_time':0.3407116448},
{'learn':[3.559551904],'iteration':674,'passed_time':0.7051207203,'remaining_time':0.339502569},
{'learn':[3.558593054],'iteration':675,'passed_time':0.7058662237,'remaining_time':0.3383145806},
{'learn':[3.555647008],'iteration':676,'passed_time':0.7066171596,'remaining_time':0.3371304912},
{'learn':[3.553100059],'iteration':677,'passed_time':0.7073432367,'remaining_time':0.3359358735},
{'learn':[3.55085578],'iteration':678,'passed_time':0.7080715058,'remaining_time':0.3347436721},
{'learn':[3.550737965],'iteration':679,'passed_time':0.7088086258,'remaining_time':0.3335570004},
{'learn':[3.549408772],'iteration':680,'passed_time':0.709544656,'remaining_time':0.3323711384},
{'learn':[3.547390589],'iteration':681,'passed_time':0.7102231409,'remaining_time':0.3311597637},
{'learn':[3.54723575],'iteration':682,'passed_time':0.7109128613,'remaining_time':0.329955164},
{'learn':[3.543988891],'iteration':683,'passed_time':0.7116170419,'remaining_time':0.3287587503},
{'learn':[3.543868508],'iteration':684,'passed_time':0.7123346523,'remaining_time':0.3275699496},
{'learn':[3.542752124],'iteration':685,'passed_time':0.713034802,'remaining_time':0.3263745304},
{'learn':[3.541334315],'iteration':686,'passed_time':0.713766467,'remaining_time':0.3251949114},
{'learn':[3.540208266],'iteration':687,'passed_time':0.7144552935,'remaining_time':0.323997168},
{'learn':[3.537730983],'iteration':688,'passed_time':0.7151990398,'remaining_time':0.3228256914},
{'learn':[3.53419867],'iteration':689,'passed_time':0.7159527894,'remaining_time':0.3216599489},
{'learn':[3.532628335],'iteration':690,'passed_time':0.7166764702,'remaining_time':0.3204819527},
{'learn':[3.532204987],'iteration':691,'passed_time':0.71739195,'remaining_time':0.3193016194},
{'learn':[3.530618147],'iteration':692,'passed_time':0.7180938721,'remaining_time':0.3181166215},
{'learn':[3.528909306],'iteration':693,'passed_time':0.71881545,'remaining_time':0.3169416826},
{'learn':[3.526700678],'iteration':694,'passed_time':0.7195332375,'remaining_time':0.3157663848},
{'learn':[3.526439574],'iteration':695,'passed_time':0.7203462005,'remaining_time':0.3146339726},
{'learn':[3.525784216],'iteration':696,'passed_time':0.7212091831,'remaining_time':0.3135242216},
{'learn':[3.524112693],'iteration':697,'passed_time':0.7220953254,'remaining_time':0.3124251981},
{'learn':[3.522813541],'iteration':698,'passed_time':0.7228716097,'remaining_time':0.3112794772},
{'learn':[3.519148203],'iteration':699,'passed_time':0.7236243109,'remaining_time':0.3101247047},
{'learn':[3.517236747],'iteration':700,'passed_time':0.7243575051,'remaining_time':0.3089627589},
{'learn':[3.515603888],'iteration':701,'passed_time':0.7251154063,'remaining_time':0.3078125229},
{'learn':[3.51263524],'iteration':702,'passed_time':0.7258480178,'remaining_time':0.3066527188},
{'learn':[3.51123442],'iteration':703,'passed_time':0.7265620817,'remaining_time':0.3054863298},
{'learn':[3.50828027],'iteration':704,'passed_time':0.7273402036,'remaining_time':0.3043480285},
{'learn':[3.508265537],'iteration':705,'passed_time':0.7277909119,'remaining_time':0.3030744024},
{'learn':[3.506774876],'iteration':706,'passed_time':0.7285260141,'remaining_time':0.3019209648},
{'learn':[3.50552068],'iteration':707,'passed_time':0.7292470554,'remaining_time':0.3007629099},
{'learn':[3.501973993],'iteration':708,'passed_time':0.7300069196,'remaining_time':0.299622022},
{'learn':[3.498880354],'iteration':709,'passed_time':0.7307306787,'remaining_time':0.2984674603},
{'learn':[3.497370959],'iteration':710,'passed_time':0.7314454103,'remaining_time':0.2973104411},
{'learn':[3.496050455],'iteration':711,'passed_time':0.7321959755,'remaining_time':0.2961691586},
{'learn':[3.495630067],'iteration':712,'passed_time':0.7328583155,'remaining_time':0.2949934594},
{'learn':[3.49550669],'iteration':713,'passed_time':0.7335762792,'remaining_time':0.2938414788},
{'learn':[3.493652375],'iteration':714,'passed_time':0.7343483788,'remaining_time':0.2927122909},
{'learn':[3.491915684],'iteration':715,'passed_time':0.7350793846,'remaining_time':0.2915678006},
{'learn':[3.490303956],'iteration':716,'passed_time':0.7358104991,'remaining_time':0.2904245066},
{'learn':[3.488363853],'iteration':717,'passed_time':0.7365469624,'remaining_time':0.2892844615},
{'learn':[3.485483936],'iteration':718,'passed_time':0.7372978139,'remaining_time':0.2881511623},
{'learn':[3.483763466],'iteration':719,'passed_time':0.7380413625,'remaining_time':0.2870160854},
{'learn':[3.481642352],'iteration':720,'passed_time':0.7387467175,'remaining_time':0.2858673151},
{'learn':[3.479826119],'iteration':721,'passed_time':0.7394620738,'remaining_time':0.284723624},
{'learn':[3.478588728],'iteration':722,'passed_time':0.7401959848,'remaining_time':0.2835882265},
{'learn':[3.475390887],'iteration':723,'passed_time':0.7408847479,'remaining_time':0.2824367271},
{'learn':[3.472636852],'iteration':724,'passed_time':0.7416790013,'remaining_time':0.2813265177},
{'learn':[3.47061883],'iteration':725,'passed_time':0.7424279939,'remaining_time':0.2802000969},
{'learn':[3.46953149],'iteration':726,'passed_time':0.7432007384,'remaining_time':0.2790836335},
{'learn':[3.467217162],'iteration':727,'passed_time':0.7443793845,'remaining_time':0.27811977},
{'learn':[3.465686216],'iteration':728,'passed_time':0.7450911849,'remaining_time':0.2769817711},
{'learn':[3.462631216],'iteration':729,'passed_time':0.7458083702,'remaining_time':0.2758469314},
{'learn':[3.461451053],'iteration':730,'passed_time':0.7465039209,'remaining_time':0.2747052732},
{'learn':[3.458950469],'iteration':731,'passed_time':0.7472565516,'remaining_time':0.273585732},
{'learn':[3.458072145],'iteration':732,'passed_time':0.7479700649,'remaining_time':0.2724529432},
{'learn':[3.454364268],'iteration':733,'passed_time':0.7486626991,'remaining_time':0.2713137302},
{'learn':[3.453243406],'iteration':734,'passed_time':0.7494034191,'remaining_time':0.2701930695},
{'learn':[3.453017963],'iteration':735,'passed_time':0.7501171884,'remaining_time':0.2690637741},
{'learn':[3.45201581],'iteration':736,'passed_time':0.7507944041,'remaining_time':0.2679225621},
{'learn':[3.449510107],'iteration':737,'passed_time':0.7515340536,'remaining_time':0.2668047724},
{'learn':[3.447189189],'iteration':738,'passed_time':0.7522169323,'remaining_time':0.2656679558},
{'learn':[3.446423605],'iteration':739,'passed_time':0.7529076481,'remaining_time':0.2645351196},
{'learn':[3.445531987],'iteration':740,'passed_time':0.7536148513,'remaining_time':0.2634092395},
{'learn':[3.445328199],'iteration':741,'passed_time':0.7542742181,'remaining_time':0.2622678548},
{'learn':[3.443327544],'iteration':742,'passed_time':0.7549963954,'remaining_time':0.2611494934},
{'learn':[3.441475798],'iteration':743,'passed_time':0.7556950931,'remaining_time':0.2600241181},
{'learn':[3.439046501],'iteration':744,'passed_time':0.7564364812,'remaining_time':0.2589145003},
{'learn':[3.435899469],'iteration':745,'passed_time':0.7571744145,'remaining_time':0.2578046934},
{'learn':[3.433988352],'iteration':746,'passed_time':0.7578838849,'remaining_time':0.2566862421},
{'learn':[3.433413263],'iteration':747,'passed_time':0.7585824484,'remaining_time':0.2555652099},
{'learn':[3.429944699],'iteration':748,'passed_time':0.7592813071,'remaining_time':0.2544454047},
{'learn':[3.429291634],'iteration':749,'passed_time':0.7599664849,'remaining_time':0.2533221616},
{'learn':[3.429175603],'iteration':750,'passed_time':0.7606627589,'remaining_time':0.2522037643},
{'learn':[3.428780323],'iteration':751,'passed_time':0.7613903378,'remaining_time':0.2510968135},
{'learn':[3.423893341],'iteration':752,'passed_time':0.7621491628,'remaining_time':0.2500011198},
{'learn':[3.421024316],'iteration':753,'passed_time':0.7629053404,'remaining_time':0.2489054559},
{'learn':[3.420969872],'iteration':754,'passed_time':0.7636547646,'remaining_time':0.2478084998},
{'learn':[3.419544785],'iteration':755,'passed_time':0.7643878024,'remaining_time':0.2467071743},
{'learn':[3.417057977],'iteration':756,'passed_time':0.7650863948,'remaining_time':0.2455957648},
{'learn':[3.415160245],'iteration':757,'passed_time':0.7658139943,'remaining_time':0.2444947053},
{'learn':[3.412854597],'iteration':758,'passed_time':0.7665624901,'remaining_time':0.243401265},
{'learn':[3.410926347],'iteration':759,'passed_time':0.76726305,'remaining_time':0.2422935947},
{'learn':[3.408963843],'iteration':760,'passed_time':0.7680527084,'remaining_time':0.2412149767},
{'learn':[3.407629634],'iteration':761,'passed_time':0.7687768066,'remaining_time':0.2401166404},
{'learn':[3.404384724],'iteration':762,'passed_time':0.7695129195,'remaining_time':0.2390230169},
{'learn':[3.403041656],'iteration':763,'passed_time':0.7702567936,'remaining_time':0.2379327268},
{'learn':[3.401101731],'iteration':764,'passed_time':0.7710018165,'remaining_time':0.2368436953},
{'learn':[3.400890668],'iteration':765,'passed_time':0.7717483309,'remaining_time':0.2357560175},
{'learn':[3.399289941],'iteration':766,'passed_time':0.7724504467,'remaining_time':0.2346557419},
{'learn':[3.399202366],'iteration':767,'passed_time':0.7731767603,'remaining_time':0.233563813},
{'learn':[3.397447845],'iteration':768,'passed_time':0.7739196707,'remaining_time':0.2324778205},
{'learn':[3.394655341],'iteration':769,'passed_time':0.7746392519,'remaining_time':0.2313857506},
{'learn':[3.393228229],'iteration':770,'passed_time':0.7753682638,'remaining_time':0.230297448},
{'learn':[3.389691197],'iteration':771,'passed_time':0.7761232844,'remaining_time':0.2292177576},
{'learn':[3.389626772],'iteration':772,'passed_time':0.7768189605,'remaining_time':0.22812148},
{'learn':[3.388480222],'iteration':773,'passed_time':0.7776012601,'remaining_time':0.2270515307},
{'learn':[3.388215066],'iteration':774,'passed_time':0.7782856334,'remaining_time':0.2259538936},
{'learn':[3.386324358],'iteration':775,'passed_time':0.7789723781,'remaining_time':0.224858006},
{'learn':[3.383913061],'iteration':776,'passed_time':0.7797144267,'remaining_time':0.223779044},
{'learn':[3.382839768],'iteration':777,'passed_time':0.7804550605,'remaining_time':0.2227005443},
{'learn':[3.381961844],'iteration':778,'passed_time':0.7811655632,'remaining_time':0.2216143639},
{'learn':[3.381521703],'iteration':779,'passed_time':0.7819030162,'remaining_time':0.2205367481},
{'learn':[3.380918963],'iteration':780,'passed_time':0.7825881085,'remaining_time':0.2194453211},
{'learn':[3.377139006],'iteration':781,'passed_time':0.783332438,'remaining_time':0.2183714469},
{'learn':[3.376004372],'iteration':782,'passed_time':0.7840583421,'remaining_time':0.2172933081},
{'learn':[3.373826468],'iteration':783,'passed_time':0.7847855549,'remaining_time':0.2162164284},
{'learn':[3.373546786],'iteration':784,'passed_time':0.7855070606,'remaining_time':0.2151388765},
{'learn':[3.372109181],'iteration':785,'passed_time':0.7862935409,'remaining_time':0.2140799208},
{'learn':[3.370764924],'iteration':786,'passed_time':0.7870617343,'remaining_time':0.2130167083},
{'learn':[3.367833107],'iteration':787,'passed_time':0.7877953854,'remaining_time':0.2119449514},
{'learn':[3.36450404],'iteration':788,'passed_time':0.7885314252,'remaining_time':0.2108746904},
{'learn':[3.361794558],'iteration':789,'passed_time':0.7892638997,'remaining_time':0.2098043278},
{'learn':[3.356880529],'iteration':790,'passed_time':0.7900132851,'remaining_time':0.2087392877},
{'learn':[3.353843509],'iteration':791,'passed_time':0.7907421072,'remaining_time':0.2076696443},
{'learn':[3.353640253],'iteration':792,'passed_time':0.7914651352,'remaining_time':0.206599348},
{'learn':[3.353055088],'iteration':793,'passed_time':0.7922214734,'remaining_time':0.2055385687},
{'learn':[3.351415617],'iteration':794,'passed_time':0.7929844956,'remaining_time':0.2044802787},
{'learn':[3.349169061],'iteration':795,'passed_time':0.7937619459,'remaining_time':0.2034264284},
{'learn':[3.346211014],'iteration':796,'passed_time':0.7944733129,'remaining_time':0.2023564398},
{'learn':[3.344560452],'iteration':797,'passed_time':0.7952715501,'remaining_time':0.2013093398},
{'learn':[3.344445461],'iteration':798,'passed_time':0.796008689,'remaining_time':0.2002474925},
{'learn':[3.342608898],'iteration':799,'passed_time':0.7967591285,'remaining_time':0.1991897821},
{'learn':[3.339572899],'iteration':800,'passed_time':0.7975002185,'remaining_time':0.1981305162},
{'learn':[3.339309302],'iteration':801,'passed_time':0.798206092,'remaining_time':0.1970633494},
{'learn':[3.33698088],'iteration':802,'passed_time':0.7989879663,'remaining_time':0.1960157277},
{'learn':[3.334746342],'iteration':803,'passed_time':0.7997589577,'remaining_time':0.1949661141},
{'learn':[3.332048511],'iteration':804,'passed_time':0.8004770229,'remaining_time':0.193904372},
{'learn':[3.331932544],'iteration':805,'passed_time':0.8012069551,'remaining_time':0.1928463391},
{'learn':[3.330541133],'iteration':806,'passed_time':0.8018992188,'remaining_time':0.1917801106},
{'learn':[3.329124989],'iteration':807,'passed_time':0.8025818066,'remaining_time':0.1907125085},
{'learn':[3.32583918],'iteration':808,'passed_time':0.8032720426,'remaining_time':0.189647664},
{'learn':[3.325287299],'iteration':809,'passed_time':0.8039659439,'remaining_time':0.1885846041},
{'learn':[3.322745162],'iteration':810,'passed_time':0.804691312,'remaining_time':0.1875297879},
{'learn':[3.319733662],'iteration':811,'passed_time':0.8053957991,'remaining_time':0.1864709486},
{'learn':[3.318080007],'iteration':812,'passed_time':0.8061658725,'remaining_time':0.1854280666},
{'learn':[3.317179538],'iteration':813,'passed_time':0.8069226672,'remaining_time':0.1843828208},
{'learn':[3.315685949],'iteration':814,'passed_time':0.8076557186,'remaining_time':0.1833328932},
{'learn':[3.314944576],'iteration':815,'passed_time':0.8083928179,'remaining_time':0.182284655},
{'learn':[3.312369052],'iteration':816,'passed_time':0.8091012971,'remaining_time':0.1812307679},
{'learn':[3.312321621],'iteration':817,'passed_time':0.8096111465,'remaining_time':0.1801335314},
{'learn':[3.309465776],'iteration':818,'passed_time':0.8103281965,'remaining_time':0.1790835208},
{'learn':[3.308307377],'iteration':819,'passed_time':0.811052217,'remaining_time':0.1780358525},
{'learn':[3.308076804],'iteration':820,'passed_time':0.8117433954,'remaining_time':0.1769818121},
{'learn':[3.305643326],'iteration':821,'passed_time':0.8125037,'remaining_time':0.1759436236},
{'learn':[3.304154814],'iteration':822,'passed_time':0.8132276868,'remaining_time':0.1748982996},
{'learn':[3.303076321],'iteration':823,'passed_time':0.8139730007,'remaining_time':0.1738583108},
{'learn':[3.301746372],'iteration':824,'passed_time':0.814730596,'remaining_time':0.1728216416},
{'learn':[3.301345455],'iteration':825,'passed_time':0.8154563761,'remaining_time':0.1717789461},
{'learn':[3.299181039],'iteration':826,'passed_time':0.8162187854,'remaining_time':0.1707446794},
{'learn':[3.297989357],'iteration':827,'passed_time':0.8169076387,'remaining_time':0.1696957897},
{'learn':[3.294775182],'iteration':828,'passed_time':0.81760673,'remaining_time':0.1686498804},
{'learn':[3.293840636],'iteration':829,'passed_time':0.8183501315,'remaining_time':0.1676138824},
{'learn':[3.289279397],'iteration':830,'passed_time':0.8191165998,'remaining_time':0.1665832796},
{'learn':[3.286204979],'iteration':831,'passed_time':0.8198466733,'remaining_time':0.1655459629},
{'learn':[3.284833593],'iteration':832,'passed_time':0.8206203003,'remaining_time':0.1645181154},
{'learn':[3.283519914],'iteration':833,'passed_time':0.8213386789,'remaining_time':0.1634798809},
{'learn':[3.282853026],'iteration':834,'passed_time':0.8220532122,'remaining_time':0.1624416527},
{'learn':[3.281944673],'iteration':835,'passed_time':0.8227535673,'remaining_time':0.1614014175},
{'learn':[3.279764865],'iteration':836,'passed_time':0.8234616377,'remaining_time':0.160363497},
{'learn':[3.277468839],'iteration':837,'passed_time':0.8241926101,'remaining_time':0.159330791},
{'learn':[3.277124974],'iteration':838,'passed_time':0.824890091,'remaining_time':0.1582923774},
{'learn':[3.275636037],'iteration':839,'passed_time':0.8255910458,'remaining_time':0.1572554373},
{'learn':[3.274413635],'iteration':840,'passed_time':0.826302405,'remaining_time':0.1562212633},
{'learn':[3.272636087],'iteration':841,'passed_time':0.8270313168,'remaining_time':0.1551911497},
{'learn':[3.269644466],'iteration':842,'passed_time':0.8277737355,'remaining_time':0.1541642663},
{'learn':[3.26852083],'iteration':843,'passed_time':0.8285218054,'remaining_time':0.1531391015},
{'learn':[3.267820927],'iteration':844,'passed_time':0.8292663632,'remaining_time':0.1521139483},
{'learn':[3.267331099],'iteration':845,'passed_time':0.8300051228,'remaining_time':0.151088403},
{'learn':[3.267231014],'iteration':846,'passed_time':0.8306989147,'remaining_time':0.150055412},
{'learn':[3.267158695],'iteration':847,'passed_time':0.8313689432,'remaining_time':0.1490189615},
{'learn':[3.264718705],'iteration':848,'passed_time':0.8320547898,'remaining_time':0.1479861876},
{'learn':[3.261678512],'iteration':849,'passed_time':0.8328066292,'remaining_time':0.1469658757},
{'learn':[3.261368381],'iteration':850,'passed_time':0.8334972883,'remaining_time':0.1459354829},
{'learn':[3.260128799],'iteration':851,'passed_time':0.8342159799,'remaining_time':0.1449107571},
{'learn':[3.258972952],'iteration':852,'passed_time':0.8349619779,'remaining_time':0.1438914546},
{'learn':[3.258724846],'iteration':853,'passed_time':0.8356835925,'remaining_time':0.1428686235},
{'learn':[3.25686724],'iteration':854,'passed_time':0.836451319,'remaining_time':0.1418543173},
{'learn':[3.255750259],'iteration':855,'passed_time':0.8372125005,'remaining_time':0.1408394861},
{'learn':[3.254915866],'iteration':856,'passed_time':0.8379589781,'remaining_time':0.1398227933},
{'learn':[3.254348625],'iteration':857,'passed_time':0.8387026122,'remaining_time':0.1388062598},
{'learn':[3.253408514],'iteration':858,'passed_time':0.8394579337,'remaining_time':0.1377922802},
{'learn':[3.253291714],'iteration':859,'passed_time':0.8401776008,'remaining_time':0.1367730978},
{'learn':[3.250186342],'iteration':860,'passed_time':0.8408915614,'remaining_time':0.1357536899},
{'learn':[3.249141318],'iteration':861,'passed_time':0.841592414,'remaining_time':0.1347328923},
{'learn':[3.246300388],'iteration':862,'passed_time':0.8422828812,'remaining_time':0.1337111874},
{'learn':[3.245205135],'iteration':863,'passed_time':0.8430058637,'remaining_time':0.1326953674},
{'learn':[3.244403535],'iteration':864,'passed_time':0.8437553915,'remaining_time':0.1316843675},
{'learn':[3.244211781],'iteration':865,'passed_time':0.8444706388,'remaining_time':0.130668667},
{'learn':[3.242286347],'iteration':866,'passed_time':0.8452120101,'remaining_time':0.1296576671},
{'learn':[3.239606746],'iteration':867,'passed_time':0.8459891156,'remaining_time':0.1286527227},
{'learn':[3.236773361],'iteration':868,'passed_time':0.846760128,'remaining_time':0.1276473841},
{'learn':[3.234552446],'iteration':869,'passed_time':0.8475709764,'remaining_time':0.1266485367},
{'learn':[3.233724647],'iteration':870,'passed_time':0.8482436388,'remaining_time':0.1256296549},
{'learn':[3.230851485],'iteration':871,'passed_time':0.8491229052,'remaining_time':0.1246418943},
{'learn':[3.227728941],'iteration':872,'passed_time':0.849874814,'remaining_time':0.123635855},
{'learn':[3.225787575],'iteration':873,'passed_time':0.8506276328,'remaining_time':0.1226305283},
{'learn':[3.222797487],'iteration':874,'passed_time':0.8514309026,'remaining_time':0.1216329861},
{'learn':[3.22137014],'iteration':875,'passed_time':0.8522015179,'remaining_time':0.1206312651},
{'learn':[3.219701963],'iteration':876,'passed_time':0.8529474358,'remaining_time':0.1196266073},
{'learn':[3.21783327],'iteration':877,'passed_time':0.8537093861,'remaining_time':0.1186247666},
{'learn':[3.217713355],'iteration':878,'passed_time':0.8544809829,'remaining_time':0.1176247997},
{'learn':[3.217666091],'iteration':879,'passed_time':0.8552002525,'remaining_time':0.1166182162},
{'learn':[3.214962005],'iteration':880,'passed_time':0.8559885205,'remaining_time':0.1156216049},
{'learn':[3.214081828],'iteration':881,'passed_time':0.8567402941,'remaining_time':0.1146205836},
{'learn':[3.213358337],'iteration':882,'passed_time':0.8574874598,'remaining_time':0.1136195162},
{'learn':[3.210850401],'iteration':883,'passed_time':0.8582067347,'remaining_time':0.1126153634},
{'learn':[3.207810328],'iteration':884,'passed_time':0.8589568077,'remaining_time':0.1116158564},
{'learn':[3.204935073],'iteration':885,'passed_time':0.8597033007,'remaining_time':0.1106164518},
{'learn':[3.20280198],'iteration':886,'passed_time':0.860474816,'remaining_time':0.1096208052},
{'learn':[3.200663495],'iteration':887,'passed_time':0.861235579,'remaining_time':0.1086243073},
{'learn':[3.197301669],'iteration':888,'passed_time':0.8620044429,'remaining_time':0.1076293511},
{'learn':[3.195666943],'iteration':889,'passed_time':0.8627649708,'remaining_time':0.1066338728},
{'learn':[3.193886506],'iteration':890,'passed_time':0.8635792918,'remaining_time':0.1056455026},
{'learn':[3.190601248],'iteration':891,'passed_time':0.8643064967,'remaining_time':0.1046469749},
{'learn':[3.188983797],'iteration':892,'passed_time':0.8650257617,'remaining_time':0.1036481036},
{'learn':[3.187365749],'iteration':893,'passed_time':0.8657671964,'remaining_time':0.1026524864},
{'learn':[3.186160771],'iteration':894,'passed_time':0.866520097,'remaining_time':0.1016587823},
{'learn':[3.185358981],'iteration':895,'passed_time':0.8672110564,'remaining_time':0.1006584262},
{'learn':[3.183832164],'iteration':896,'passed_time':0.8679065619,'remaining_time':0.09965928191},
{'learn':[3.183106966],'iteration':897,'passed_time':0.8686457278,'remaining_time':0.09866577309},
{'learn':[3.182838152],'iteration':898,'passed_time':0.8693869581,'remaining_time':0.09767306203},
{'learn':[3.180835453],'iteration':899,'passed_time':0.8701153681,'remaining_time':0.09667948535},
{'learn':[3.179957348],'iteration':900,'passed_time':0.8708434905,'remaining_time':0.09568646565},
{'learn':[3.179752966],'iteration':901,'passed_time':0.871562999,'remaining_time':0.09469309745},
{'learn':[3.178851983],'iteration':902,'passed_time':0.8722609126,'remaining_time':0.09369801608},
{'learn':[3.176748586],'iteration':903,'passed_time':0.8729682441,'remaining_time':0.09270459229},
{'learn':[3.172960988],'iteration':904,'passed_time':0.8737212287,'remaining_time':0.09171659307},
{'learn':[3.172794225],'iteration':905,'passed_time':0.8743851751,'remaining_time':0.09071987468},
{'learn':[3.169996507],'iteration':906,'passed_time':0.8751163572,'remaining_time':0.08973078415},
{'learn':[3.16813015],'iteration':907,'passed_time':0.8758606914,'remaining_time':0.08874359429},
{'learn':[3.166920871],'iteration':908,'passed_time':0.876587875,'remaining_time':0.08775522181},
{'learn':[3.16531606],'iteration':909,'passed_time':0.8773567308,'remaining_time':0.0867715448},
{'learn':[3.162035247],'iteration':910,'passed_time':0.8782644699,'remaining_time':0.08580190759},
{'learn':[3.16189467],'iteration':911,'passed_time':0.8789764123,'remaining_time':0.08481351347},
{'learn':[3.161008416],'iteration':912,'passed_time':0.8797077703,'remaining_time':0.08382757505},
{'learn':[3.160560787],'iteration':913,'passed_time':0.8804059934,'remaining_time':0.08283907597},
{'learn':[3.160416261],'iteration':914,'passed_time':0.8811013593,'remaining_time':0.08185094595},
{'learn':[3.15844291],'iteration':915,'passed_time':0.8818429575,'remaining_time':0.08086769479},
{'learn':[3.155040501],'iteration':916,'passed_time':0.8825766997,'remaining_time':0.07988425963},
{'learn':[3.154937548],'iteration':917,'passed_time':0.8832776307,'remaining_time':0.0788984376},
{'learn':[3.153721161],'iteration':918,'passed_time':0.8840137233,'remaining_time':0.0779163347},
{'learn':[3.153170511],'iteration':919,'passed_time':0.8847497852,'remaining_time':0.07693476393},
{'learn':[3.153113601],'iteration':920,'passed_time':0.8854672771,'remaining_time':0.07595213343},
{'learn':[3.150607379],'iteration':921,'passed_time':0.8861552849,'remaining_time':0.07496758376},
{'learn':[3.148408359],'iteration':922,'passed_time':0.8868996715,'remaining_time':0.07398837996},
{'learn':[3.147495728],'iteration':923,'passed_time':0.8877461434,'remaining_time':0.07301808106},
{'learn':[3.146946235],'iteration':924,'passed_time':0.8885704798,'remaining_time':0.07204625512},
{'learn':[3.14472738],'iteration':925,'passed_time':0.8893414968,'remaining_time':0.07107048678},
{'learn':[3.144469477],'iteration':926,'passed_time':0.8900820433,'remaining_time':0.07009276069},
{'learn':[3.142975516],'iteration':927,'passed_time':0.890833872,'remaining_time':0.06911642111},
{'learn':[3.14079113],'iteration':928,'passed_time':0.8916237665,'remaining_time':0.06814347408},
{'learn':[3.138173032],'iteration':929,'passed_time':0.892394239,'remaining_time':0.06716945885},
{'learn':[3.136352813],'iteration':930,'passed_time':0.8931380091,'remaining_time':0.06619390186},
{'learn':[3.133735004],'iteration':931,'passed_time':0.8938527393,'remaining_time':0.06521672347},
{'learn':[3.1319496],'iteration':932,'passed_time':0.8946359665,'remaining_time':0.06424502654},
{'learn':[3.129865343],'iteration':933,'passed_time':0.8954180624,'remaining_time':0.06327365323},
{'learn':[3.129830206],'iteration':934,'passed_time':0.8959558357,'remaining_time':0.06228569981},
{'learn':[3.126676562],'iteration':935,'passed_time':0.8966859989,'remaining_time':0.06131186317},
{'learn':[3.12645665],'iteration':936,'passed_time':0.8973434885,'remaining_time':0.06033366038},
{'learn':[3.126378007],'iteration':937,'passed_time':0.8982983327,'remaining_time':0.05937579598},
{'learn':[3.124621914],'iteration':938,'passed_time':0.8991860622,'remaining_time':0.05841357806},
{'learn':[3.123379018],'iteration':939,'passed_time':0.8999102074,'remaining_time':0.05744107707},
{'learn':[3.123332451],'iteration':940,'passed_time':0.9007861295,'remaining_time':0.05647862023},
{'learn':[3.122432444],'iteration':941,'passed_time':0.9016010088,'remaining_time':0.05551258865},
{'learn':[3.121889006],'iteration':942,'passed_time':0.9024427269,'remaining_time':0.05454849993},
{'learn':[3.121070914],'iteration':943,'passed_time':0.9031555846,'remaining_time':0.0535770262},
{'learn':[3.118444705],'iteration':944,'passed_time':0.9039003725,'remaining_time':0.05260795819},
{'learn':[3.116820458],'iteration':945,'passed_time':0.9046537208,'remaining_time':0.05163985298},
{'learn':[3.114971041],'iteration':946,'passed_time':0.9053783845,'remaining_time':0.05067059596},
{'learn':[3.114685138],'iteration':947,'passed_time':0.9062229184,'remaining_time':0.04970843012},
{'learn':[3.113399363],'iteration':948,'passed_time':0.9069749515,'remaining_time':0.04874154112},
{'learn':[3.110575399],'iteration':949,'passed_time':0.9077363783,'remaining_time':0.04777559886},
{'learn':[3.110466553],'iteration':950,'passed_time':0.9084398238,'remaining_time':0.04680709923},
{'learn':[3.108691641],'iteration':951,'passed_time':0.9091660772,'remaining_time':0.04584030641},
{'learn':[3.107898017],'iteration':952,'passed_time':0.9099408588,'remaining_time':0.04487641171},
{'learn':[3.105551729],'iteration':953,'passed_time':0.9106684366,'remaining_time':0.0439106374},
{'learn':[3.104824945],'iteration':954,'passed_time':0.9113931965,'remaining_time':0.04294522915},
{'learn':[3.103186704],'iteration':955,'passed_time':0.9121442663,'remaining_time':0.04198153527},
{'learn':[3.102330655],'iteration':956,'passed_time':0.9130090814,'remaining_time':0.04102339655},
{'learn':[3.102291298],'iteration':957,'passed_time':0.9137467936,'remaining_time':0.04005988031},
{'learn':[3.100363529],'iteration':958,'passed_time':0.9144960473,'remaining_time':0.0390973284},
{'learn':[3.097871596],'iteration':959,'passed_time':0.9152320964,'remaining_time':0.03813467068},
{'learn':[3.097372213],'iteration':960,'passed_time':0.9159629088,'remaining_time':0.03717227205},
{'learn':[3.095981813],'iteration':961,'passed_time':0.9167192154,'remaining_time':0.03621136194},
{'learn':[3.095347452],'iteration':962,'passed_time':0.9174498708,'remaining_time':0.03524989119},
{'learn':[3.094728409],'iteration':963,'passed_time':0.9182173765,'remaining_time':0.03429027547},
{'learn':[3.094118537],'iteration':964,'passed_time':0.9189662565,'remaining_time':0.03333038236},
{'learn':[3.093793695],'iteration':965,'passed_time':0.9196972431,'remaining_time':0.03237029634},
{'learn':[3.092581602],'iteration':966,'passed_time':0.9204317773,'remaining_time':0.03141080522},
{'learn':[3.091694202],'iteration':967,'passed_time':0.9212460252,'remaining_time':0.03045441406},
{'learn':[3.090298312],'iteration':968,'passed_time':0.9220832502,'remaining_time':0.02949905135},
{'learn':[3.090020107],'iteration':969,'passed_time':0.9228342552,'remaining_time':0.02854126562},
{'learn':[3.088949869],'iteration':970,'passed_time':0.9235658422,'remaining_time':0.02758332587},
{'learn':[3.086700204],'iteration':971,'passed_time':0.9242974886,'remaining_time':0.02662585358},
{'learn':[3.086584317],'iteration':972,'passed_time':0.9250115368,'remaining_time':0.02566835714},
{'learn':[3.084850742],'iteration':973,'passed_time':0.9256972367,'remaining_time':0.02471060385},
{'learn':[3.084239948],'iteration':974,'passed_time':0.9263894022,'remaining_time':0.02375357441},
{'learn':[3.082561673],'iteration':975,'passed_time':0.9271106849,'remaining_time':0.02279780373},
{'learn':[3.07991814],'iteration':976,'passed_time':0.9278294004,'remaining_time':0.02184245262},
{'learn':[3.079350277],'iteration':977,'passed_time':0.9285029947,'remaining_time':0.02088657043},
{'learn':[3.077637462],'iteration':978,'passed_time':0.9292514713,'remaining_time':0.01993287119},
{'learn':[3.076733301],'iteration':979,'passed_time':0.9299859631,'remaining_time':0.01897930537},
{'learn':[3.07594065],'iteration':980,'passed_time':0.9307147457,'remaining_time':0.0180260756},
{'learn':[3.072594655],'iteration':981,'passed_time':0.9314568139,'remaining_time':0.01707354649},
{'learn':[3.071977674],'iteration':982,'passed_time':0.9321629507,'remaining_time':0.01612082417},
{'learn':[3.069532634],'iteration':983,'passed_time':0.932899014,'remaining_time':0.01516908966},
{'learn':[3.068870784],'iteration':984,'passed_time':0.9336805985,'remaining_time':0.01421848627},
{'learn':[3.068801463],'iteration':985,'passed_time':0.9344111442,'remaining_time':0.01326750103},
{'learn':[3.067433249],'iteration':986,'passed_time':0.9351451667,'remaining_time':0.01231700827},
{'learn':[3.065611456],'iteration':987,'passed_time':0.9359501733,'remaining_time':0.01136781587},
{'learn':[3.063039162],'iteration':988,'passed_time':0.9366926187,'remaining_time':0.01041821922},
{'learn':[3.06177873],'iteration':989,'passed_time':0.9374189537,'remaining_time':0.00946887832},
{'learn':[3.061689148],'iteration':990,'passed_time':0.9381108236,'remaining_time':0.008519674483},
{'learn':[3.058984039],'iteration':991,'passed_time':0.9388586681,'remaining_time':0.007571440871},
{'learn':[3.057492984],'iteration':992,'passed_time':0.9395359806,'remaining_time':0.00662311366},
{'learn':[3.057290731],'iteration':993,'passed_time':0.9402250394,'remaining_time':0.005675402652},
{'learn':[3.056068348],'iteration':994,'passed_time':0.9409393251,'remaining_time':0.004728338317},
{'learn':[3.054987307],'iteration':995,'passed_time':0.9417017615,'remaining_time':0.003781934785},
{'learn':[3.054200234],'iteration':996,'passed_time':0.9424250652,'remaining_time':0.002835782543},
{'learn':[3.052732869],'iteration':997,'passed_time':0.9431633849,'remaining_time':0.001890106984},
{'learn':[3.051787862],'iteration':998,'passed_time':0.9438957767,'remaining_time':0.0009448406174},
{'learn':[3.051366222],'iteration':999,'passed_time':0.9446698649,'remaining_time':0}
]}

================================================
File: catboost_info/learn_error.tsv
================================================
iter  RMSE
0 14.61268541
1 14.23196558
2 13.86674177
3 13.49946468
4 13.16661202
5 12.85632158
6 12.56784336
7 12.31617801
8 12.01509946
9 11.71512571
10  11.43264457
11  11.17973129
12  10.93746433
13  10.69387075
14  10.4615922
15  10.2299235
16  10.01419731
17  9.795856918
18  9.60040151
19  9.418664989
20  9.249278645
21  9.090113396
22  8.909548708
23  8.740140208
24  8.59377682
25  8.453885414
26  8.317732234
27  8.180896085
28  8.053220863
29  7.924234474
30  7.818879511
31  7.719346395
32  7.624163594
33  7.524952543
34  7.424464745
35  7.327482321
36  7.238666841
37  7.158842395
38  7.074348246
39  6.992269093
40  6.925219745
41  6.86013671
42  6.786739622
43  6.73057926
44  6.666356486
45  6.606182832
46  6.547854615
47  6.49240675
48  6.431317261
49  6.377586395
50  6.327558015
51  6.282040317
52  6.237655841
53  6.192792003
54  6.150579347
55  6.115693845
56  6.078780782
57  6.045146957
58  6.008080327
59  5.977575734
60  5.948036502
61  5.914888282
62  5.884957796
63  5.849539885
64  5.821387627
65  5.797012279
66  5.768685095
67  5.755484587
68  5.731887055
69  5.707148487
70  5.685365039
71  5.663541834
72  5.638108797
73  5.619204893
74  5.598472793
75  5.577007075
76  5.562637084
77  5.54729991
78  5.530737623
79  5.513704873
80  5.501575529
81  5.484080734
82  5.472178894
83  5.458923342
84  5.451382371
85  5.441410748
86  5.434047468
87  5.422107497
88  5.40731265
89  5.396360181
90  5.383793239
91  5.369605034
92  5.357467333
93  5.341109968
94  5.330529276
95  5.319862075
96  5.313052243
97  5.299677207
98  5.287546698
99  5.279803754
100 5.272254612
101 5.268813888
102 5.258113767
103 5.251018576
104 5.24171237
105 5.233984943
106 5.226240449
107 5.220541644
108 5.211712096
109 5.203388597
110 5.196026544
111 5.188716772
112 5.182163132
113 5.17764747
114 5.170548056
115 5.165901827
116 5.160333668
117 5.148953243
118 5.144729126
119 5.139939946
120 5.132898872
121 5.129073077
122 5.127123916
123 5.121282057
124 5.114489821
125 5.107777291
126 5.103518754
127 5.101133351
128 5.096462705
129 5.08562082
130 5.080483682
131 5.07437499
132 5.070683732
133 5.06432037
134 5.057436484
135 5.053254656
136 5.04801663
137 5.045680836
138 5.041857933
139 5.035264888
140 5.028771948
141 5.024912247
142 5.02239068
143 5.017110572
144 5.010707886
145 5.004389868
146 4.997628683
147 4.991497851
148 4.988345253
149 4.98460423
150 4.982441783
151 4.977461771
152 4.973601586
153 4.968328804
154 4.9640736
155 4.960865882
156 4.957014156
157 4.952244852
158 4.949695675
159 4.946584698
160 4.940192834
161 4.936727994
162 4.932342063
163 4.925830838
164 4.922571773
165 4.918395814
166 4.911142452
167 4.908276131
168 4.904584645
169 4.89795517
170 4.895556491
171 4.890591233
172 4.884629277
173 4.880550786
174 4.876384842
175 4.872638238
176 4.869137118
177 4.863587157
178 4.858028614
179 4.853838176
180 4.853462329
181 4.851573196
182 4.848442087
183 4.845547104
184 4.839868817
185 4.836336958
186 4.831124789
187 4.827407333
188 4.824088918
189 4.820934539
190 4.816975227
191 4.812340486
192 4.806402747
193 4.801521788
194 4.797601172
195 4.792694629
196 4.789794613
197 4.785367055
198 4.780376856
199 4.776691261
200 4.773470753
201 4.77207327
202 4.767347177
203 4.763983068
204 4.761588849
205 4.758558086
206 4.753678804
207 4.746510889
208 4.744840601
209 4.741702222
210 4.739352853
211 4.735539287
212 4.730726751
213 4.726416092
214 4.721293082
215 4.718443695
216 4.711627962
217 4.709790764
218 4.706913073
219 4.703846389
220 4.701001135
221 4.700380864
222 4.695837486
223 4.691242996
224 4.690284609
225 4.68827119
226 4.686922425
227 4.686085874
228 4.683230741
229 4.6773487
230 4.671462906
231 4.664799601
232 4.660979386
233 4.656281279
234 4.651997094
235 4.650151977
236 4.648478046
237 4.646364602
238 4.642635873
239 4.640860821
240 4.639446822
241 4.637120072
242 4.633769267
243 4.630491517
244 4.627813333
245 4.622496304
246 4.618979301
247 4.616563458
248 4.614759385
249 4.61251363
250 4.608796693
251 4.60847774
252 4.605195659
253 4.60103766
254 4.599325598
255 4.597012808
256 4.594161533
257 4.592197259
258 4.58952828
259 4.585816572
260 4.582934052
261 4.582234842
262 4.57571562
263 4.571197349
264 4.56723703
265 4.560335567
266 4.554709345
267 4.552806306
268 4.550766241
269 4.549216045
270 4.547687452
271 4.545642435
272 4.543930359
273 4.541029943
274 4.537781449
275 4.53066128
276 4.526763956
277 4.522036004
278 4.515307629
279 4.51109143
280 4.508233494
281 4.502555629
282 4.500081355
283 4.495281743
284 4.492138869
285 4.491708261
286 4.489398865
287 4.485796373
288 4.479542205
289 4.475986993
290 4.468661855
291 4.463785664
292 4.460445831
293 4.45692492
294 4.454031688
295 4.451672391
296 4.45031553
297 4.446782666
298 4.444369689
299 4.44411683
300 4.440876943
301 4.439336453
302 4.436666901
303 4.433043336
304 4.431419305
305 4.428859646
306 4.424552441
307 4.422706391
308 4.421427994
309 4.418733158
310 4.415656941
311 4.410747417
312 4.408126521
313 4.407843853
314 4.405219398
315 4.402708465
316 4.40104971
317 4.400830038
318 4.39784288
319 4.393741845
320 4.393425936
321 4.390505974
322 4.390305136
323 4.38568203
324 4.383057135
325 4.380662684
326 4.37805727
327 4.373708319
328 4.36887921
329 4.367895929
330 4.362140573
331 4.361931924
332 4.359656377
333 4.354281355
334 4.348589447
335 4.346355698
336 4.343894047
337 4.341561356
338 4.338869061
339 4.333720063
340 4.330892223
341 4.328311474
342 4.324580133
343 4.323354432
344 4.323159553
345 4.318639682
346 4.312712208
347 4.311461062
348 4.311178356
349 4.311102505
350 4.310232308
351 4.305128197
352 4.304595496
353 4.3004992
354 4.297581524
355 4.297355825
356 4.295758715
357 4.292500657
358 4.290797586
359 4.286410608
360 4.280278245
361 4.279941283
362 4.274426275
363 4.273567658
364 4.269488271
365 4.266838205
366 4.263456509
367 4.260360204
368 4.255120549
369 4.252582211
370 4.247857931
371 4.245288911
372 4.24048515
373 4.2378365
374 4.236751063
375 4.233240093
376 4.230358421
377 4.225853583
378 4.224702126
379 4.224361982
380 4.223787954
381 4.22144054
382 4.217739335
383 4.215611665
384 4.210236863
385 4.208454294
386 4.207446501
387 4.204985442
388 4.202796622
389 4.199774004
390 4.199458358
391 4.19751254
392 4.195201346
393 4.190593508
394 4.187212054
395 4.184984466
396 4.182832144
397 4.179752812
398 4.17878934
399 4.174548229
400 4.168872556
401 4.163926494
402 4.159485076
403 4.155926102
404 4.153540115
405 4.150983044
406 4.146539132
407 4.144869174
408 4.142825962
409 4.142467378
410 4.141800768
411 4.140107084
412 4.136243196
413 4.133618439
414 4.131053025
415 4.128379975
416 4.127068571
417 4.125969877
418 4.123893633
419 4.119643722
420 4.11465686
421 4.111565986
422 4.106322452
423 4.104222175
424 4.103008002
425 4.099176337
426 4.096525716
427 4.094967724
428 4.094683584
429 4.091096563
430 4.089178677
431 4.085335077
432 4.084852122
433 4.080322952
434 4.077449519
435 4.076568374
436 4.076071793
437 4.075027644
438 4.07020837
439 4.06833694
440 4.063936568
441 4.061734926
442 4.060815619
443 4.056407489
444 4.05238936
445 4.049685254
446 4.045162016
447 4.042955482
448 4.041467663
449 4.038920476
450 4.036694383
451 4.034999007
452 4.031928018
453 4.028718143
454 4.027401978
455 4.025930598
456 4.021074523
457 4.020268486
458 4.017986361
459 4.014814804
460 4.009704796
461 4.008440457
462 4.004854849
463 4.000898028
464 3.996617985
465 3.995443319
466 3.990771995
467 3.989249359
468 3.986599538
469 3.985628919
470 3.985086112
471 3.98466839
472 3.984233894
473 3.981855845
474 3.978684264
475 3.974361269
476 3.972074049
477 3.97191982
478 3.969616848
479 3.968533527
480 3.967568753
481 3.966232553
482 3.961522393
483 3.955829553
484 3.954248095
485 3.951922606
486 3.94978202
487 3.949518999
488 3.945431216
489 3.943249086
490 3.941981548
491 3.936600517
492 3.934476885
493 3.93045798
494 3.925977375
495 3.92457993
496 3.919849146
497 3.919681964
498 3.917633027
499 3.916616419
500 3.912896166
501 3.912769674
502 3.909373788
503 3.906706036
504 3.903895664
505 3.902982967
506 3.900905528
507 3.897463465
508 3.895918033
509 3.893921936
510 3.890237934
511 3.887311613
512 3.884869735
513 3.882101231
514 3.88060368
515 3.877726076
516 3.874938145
517 3.874340833
518 3.873105224
519 3.869800236
520 3.867932518
521 3.866666962
522 3.865527652
523 3.861900081
524 3.858502887
525 3.858335097
526 3.855719306
527 3.855137428
528 3.851985706
529 3.851051809
530 3.850679146
531 3.848179484
532 3.844551071
533 3.841604794
534 3.83969656
535 3.836811463
536 3.834182551
537 3.828012842
538 3.826636176
539 3.826189798
540 3.824104738
541 3.82300218
542 3.817146402
543 3.814638044
544 3.812979573
545 3.811938825
546 3.811479418
547 3.80742981
548 3.805097043
549 3.801577232
550 3.799762083
551 3.796393455
552 3.793486459
553 3.792006091
554 3.78932128
555 3.787581812
556 3.785308865
557 3.78465475
558 3.780498869
559 3.778734909
560 3.778652349
561 3.777928006
562 3.776131406
563 3.772925617
564 3.7727745
565 3.771763073
566 3.768738162
567 3.767220794
568 3.766691102
569 3.766259335
570 3.76116362
571 3.758633056
572 3.754603809
573 3.754070549
574 3.750534319
575 3.746491516
576 3.744210544
577 3.742929991
578 3.740402992
579 3.739644243
580 3.737529404
581 3.737196923
582 3.733954464
583 3.731608623
584 3.729843952
585 3.727223798
586 3.725351667
587 3.725026912
588 3.721974565
589 3.720269493
590 3.718907466
591 3.715602912
592 3.714463059
593 3.710802077
594 3.708032435
595 3.703788939
596 3.702500944
597 3.698196925
598 3.69658891
599 3.696124066
600 3.693537052
601 3.691343275
602 3.690973831
603 3.686151073
604 3.683921982
605 3.679975271
606 3.674047638
607 3.673151794
608 3.670953108
609 3.6703947
610 3.668433805
611 3.668304956
612 3.667880012
613 3.667282264
614 3.664611483
615 3.662543394
616 3.659041959
617 3.656868545
618 3.654785614
619 3.654566096
620 3.651007045
621 3.648921786
622 3.647655706
623 3.647241144
624 3.644195689
625 3.642632246
626 3.642523322
627 3.641494659
628 3.63976496
629 3.637945652
630 3.636233667
631 3.635304404
632 3.632234951
633 3.631630987
634 3.630301009
635 3.629077964
636 3.628004522
637 3.625062876
638 3.624917986
639 3.622887087
640 3.621220865
641 3.621143844
642 3.620822821
643 3.619202826
644 3.618204882
645 3.614259666
646 3.613415661
647 3.611096773
648 3.610820695
649 3.609290065
650 3.60897947
651 3.606570702
652 3.606292637
653 3.602753838
654 3.599755869
655 3.599509575
656 3.595337722
657 3.595168561
658 3.59290559
659 3.592015928
660 3.590680403
661 3.590361532
662 3.589069739
663 3.585010186
664 3.582997552
665 3.582119256
666 3.579019356
667 3.57719559
668 3.574050046
669 3.572204518
670 3.569508025
671 3.566268704
672 3.562564052
673 3.561173586
674 3.559551904
675 3.558593054
676 3.555647008
677 3.553100059
678 3.55085578
679 3.550737965
680 3.549408772
681 3.547390589
682 3.54723575
683 3.543988891
684 3.543868508
685 3.542752124
686 3.541334315
687 3.540208266
688 3.537730983
689 3.53419867
690 3.532628335
691 3.532204987
692 3.530618147
693 3.528909306
694 3.526700678
695 3.526439574
696 3.525784216
697 3.524112693
698 3.522813541
699 3.519148203
700 3.517236747
701 3.515603888
702 3.51263524
703 3.51123442
704 3.50828027
705 3.508265537
706 3.506774876
707 3.50552068
708 3.501973993
709 3.498880354
710 3.497370959
711 3.496050455
712 3.495630067
713 3.49550669
714 3.493652375
715 3.491915684
716 3.490303956
717 3.488363853
718 3.485483936
719 3.483763466
720 3.481642352
721 3.479826119
722 3.478588728
723 3.475390887
724 3.472636852
725 3.47061883
726 3.46953149
727 3.467217162
728 3.465686216
729 3.462631216
730 3.461451053
731 3.458950469
732 3.458072145
733 3.454364268
734 3.453243406
735 3.453017963
736 3.45201581
737 3.449510107
738 3.447189189
739 3.446423605
740 3.445531987
741 3.445328199
742 3.443327544
743 3.441475798
744 3.439046501
745 3.435899469
746 3.433988352
747 3.433413263
748 3.429944699
749 3.429291634
750 3.429175603
751 3.428780323
752 3.423893341
753 3.421024316
754 3.420969872
755 3.419544785
756 3.417057977
757 3.415160245
758 3.412854597
759 3.410926347
760 3.408963843
761 3.407629634
762 3.404384724
763 3.403041656
764 3.401101731
765 3.400890668
766 3.399289941
767 3.399202366
768 3.397447845
769 3.394655341
770 3.393228229
771 3.389691197
772 3.389626772
773 3.388480222
774 3.388215066
775 3.386324358
776 3.383913061
777 3.382839768
778 3.381961844
779 3.381521703
780 3.380918963
781 3.377139006
782 3.376004372
783 3.373826468
784 3.373546786
785 3.372109181
786 3.370764924
787 3.367833107
788 3.36450404
789 3.361794558
790 3.356880529
791 3.353843509
792 3.353640253
793 3.353055088
794 3.351415617
795 3.349169061
796 3.346211014
797 3.344560452
798 3.344445461
799 3.342608898
800 3.339572899
801 3.339309302
802 3.33698088
803 3.334746342
804 3.332048511
805 3.331932544
806 3.330541133
807 3.329124989
808 3.32583918
809 3.325287299
810 3.322745162
811 3.319733662
812 3.318080007
813 3.317179538
814 3.315685949
815 3.314944576
816 3.312369052
817 3.312321621
818 3.309465776
819 3.308307377
820 3.308076804
821 3.305643326
822 3.304154814
823 3.303076321
824 3.301746372
825 3.301345455
826 3.299181039
827 3.297989357
828 3.294775182
829 3.293840636
830 3.289279397
831 3.286204979
832 3.284833593
833 3.283519914
834 3.282853026
835 3.281944673
836 3.279764865
837 3.277468839
838 3.277124974
839 3.275636037
840 3.274413635
841 3.272636087
842 3.269644466
843 3.26852083
844 3.267820927
845 3.267331099
846 3.267231014
847 3.267158695
848 3.264718705
849 3.261678512
850 3.261368381
851 3.260128799
852 3.258972952
853 3.258724846
854 3.25686724
855 3.255750259
856 3.254915866
857 3.254348625
858 3.253408514
859 3.253291714
860 3.250186342
861 3.249141318
862 3.246300388
863 3.245205135
864 3.244403535
865 3.244211781
866 3.242286347
867 3.239606746
868 3.236773361
869 3.234552446
870 3.233724647
871 3.230851485
872 3.227728941
873 3.225787575
874 3.222797487
875 3.22137014
876 3.219701963
877 3.21783327
878 3.217713355
879 3.217666091
880 3.214962005
881 3.214081828
882 3.213358337
883 3.210850401
884 3.207810328
885 3.204935073
886 3.20280198
887 3.200663495
888 3.197301669
889 3.195666943
890 3.193886506
891 3.190601248
892 3.188983797
893 3.187365749
894 3.186160771
895 3.185358981
896 3.183832164
897 3.183106966
898 3.182838152
899 3.180835453
900 3.179957348
901 3.179752966
902 3.178851983
903 3.176748586
904 3.172960988
905 3.172794225
906 3.169996507
907 3.16813015
908 3.166920871
909 3.16531606
910 3.162035247
911 3.16189467
912 3.161008416
913 3.160560787
914 3.160416261
915 3.15844291
916 3.155040501
917 3.154937548
918 3.153721161
919 3.153170511
920 3.153113601
921 3.150607379
922 3.148408359
923 3.147495728
924 3.146946235
925 3.14472738
926 3.144469477
927 3.142975516
928 3.14079113
929 3.138173032
930 3.136352813
931 3.133735004
932 3.1319496
933 3.129865343
934 3.129830206
935 3.126676562
936 3.12645665
937 3.126378007
938 3.124621914
939 3.123379018
940 3.123332451
941 3.122432444
942 3.121889006
943 3.121070914
944 3.118444705
945 3.116820458
946 3.114971041
947 3.114685138
948 3.113399363
949 3.110575399
950 3.110466553
951 3.108691641
952 3.107898017
953 3.105551729
954 3.104824945
955 3.103186704
956 3.102330655
957 3.102291298
958 3.100363529
959 3.097871596
960 3.097372213
961 3.095981813
962 3.095347452
963 3.094728409
964 3.094118537
965 3.093793695
966 3.092581602
967 3.091694202
968 3.090298312
969 3.090020107
970 3.088949869
971 3.086700204
972 3.086584317
973 3.084850742
974 3.084239948
975 3.082561673
976 3.07991814
977 3.079350277
978 3.077637462
979 3.076733301
980 3.07594065
981 3.072594655
982 3.071977674
983 3.069532634
984 3.068870784
985 3.068801463
986 3.067433249
987 3.065611456
988 3.063039162
989 3.06177873
990 3.061689148
991 3.058984039
992 3.057492984
993 3.057290731
994 3.056068348
995 3.054987307
996 3.054200234
997 3.052732869
998 3.051787862
999 3.051366222


================================================
File: catboost_info/time_left.tsv
================================================
iter  Passed  Remaining
0 188 187904
1 188 94310
2 189 63092
3 190 47464
4 191 38096
5 192 31863
6 193 27406
7 194 24073
8 194 21460
9 195 19377
10  196 17672
11  197 16251
12  198 15055
13  199 14028
14  200 13135
15  200 12354
16  201 11669
17  202 11054
18  203 10512
19  204 10018
20  205 9574
21  206 9170
22  207 8798
23  208 8458
24  208 8144
25  209 7857
26  210 7588
27  211 7340
28  212 7108
29  213 6891
30  213 6686
31  214 6494
32  215 6314
33  216 6143
34  216 5982
35  217 5831
36  218 5688
37  219 5554
38  220 5428
39  221 5307
40  222 5192
41  222 5085
42  223 4980
43  224 4884
44  225 4788
45  226 4695
46  227 4610
47  228 4529
48  229 4450
49  230 4374
50  231 4301
51  232 4229
52  232 4158
53  233 4091
54  234 4027
55  235 3965
56  236 3906
57  237 3852
58  238 3801
59  239 3748
60  240 3698
61  241 3648
62  241 3598
63  242 3551
64  243 3505
65  244 3461
66  245 3417
67  245 3370
68  246 3331
69  247 3290
70  248 3253
71  249 3216
72  250 3179
73  251 3145
74  252 3111
75  253 3081
76  254 3052
77  255 3022
78  256 2991
79  257 2960
80  258 2929
81  259 2899
82  259 2871
83  260 2843
84  261 2812
85  262 2785
86  262 2756
87  263 2731
88  264 2706
89  265 2683
90  266 2659
91  267 2639
92  268 2618
93  269 2595
94  270 2573
95  270 2551
96  271 2531
97  272 2509
98  273 2489
99  274 2470
100 275 2449
101 275 2427
102 276 2408
103 277 2389
104 278 2371
105 279 2353
106 279 2336
107 280 2318
108 281 2302
109 282 2287
110 283 2271
111 284 2258
112 285 2242
113 286 2227
114 287 2212
115 288 2195
116 288 2181
117 289 2166
118 290 2151
119 291 2137
120 292 2122
121 293 2109
122 293 2093
123 294 2079
124 295 2066
125 296 2053
126 297 2042
127 297 2028
128 298 2015
129 299 2002
130 300 1990
131 300 1977
132 301 1965
133 302 1952
134 302 1941
135 303 1929
136 304 1917
137 304 1905
138 305 1893
139 306 1882
140 307 1871
141 307 1860
142 308 1849
143 309 1838
144 310 1828
145 310 1817
146 311 1809
147 312 1800
148 313 1790
149 314 1780
150 314 1770
151 315 1760
152 316 1751
153 317 1742
154 317 1732
155 318 1723
156 319 1714
157 320 1705
158 320 1696
159 321 1687
160 322 1679
161 322 1670
162 323 1662
163 324 1653
164 325 1645
165 325 1637
166 327 1631
167 327 1623
168 328 1615
169 329 1607
170 330 1600
171 330 1592
172 331 1584
173 332 1576
174 332 1569
175 333 1562
176 334 1554
177 335 1547
178 335 1540
179 336 1533
180 337 1524
181 337 1518
182 338 1511
183 339 1504
184 340 1498
185 340 1492
186 341 1486
187 342 1480
188 343 1474
189 344 1467
190 344 1461
191 345 1454
192 346 1448
193 347 1442
194 348 1436
195 348 1430
196 349 1424
197 350 1418
198 350 1412
199 351 1406
200 352 1400
201 353 1394
202 353 1388
203 354 1383
204 355 1378
205 356 1373
206 357 1368
207 357 1362
208 358 1357
209 359 1351
210 360 1346
211 360 1341
212 361 1336
213 362 1330
214 363 1325
215 363 1320
216 364 1315
217 365 1310
218 366 1305
219 366 1301
220 367 1296
221 368 1291
222 369 1287
223 371 1286
224 372 1282
225 373 1277
226 373 1272
227 374 1267
228 375 1263
229 375 1258
230 376 1253
231 377 1248
232 378 1244
233 378 1239
234 379 1235
235 380 1231
236 381 1226
237 381 1222
238 382 1217
239 383 1213
240 383 1209
241 384 1204
242 385 1202
243 386 1198
244 387 1194
245 388 1190
246 389 1186
247 389 1182
248 390 1177
249 391 1173
250 392 1170
251 392 1165
252 393 1161
253 394 1157
254 394 1153
255 395 1149
256 396 1146
257 397 1142
258 397 1138
259 398 1134
260 399 1130
261 400 1127
262 401 1124
263 402 1120
264 402 1116
265 403 1113
266 404 1109
267 404 1105
268 405 1101
269 406 1098
270 406 1094
271 407 1091
272 408 1087
273 409 1084
274 410 1081
275 410 1077
276 411 1074
277 412 1070
278 413 1067
279 413 1064
280 414 1061
281 415 1058
282 416 1055
283 417 1052
284 418 1048
285 418 1045
286 419 1042
287 420 1038
288 420 1035
289 421 1032
290 422 1029
291 423 1026
292 423 1023
293 424 1019
294 425 1016
295 426 1013
296 426 1010
297 427 1006
298 428 1003
299 428 1000
300 429 998
301 430 995
302 431 992
303 432 989
304 433 986
305 433 983
306 434 980
307 435 977
308 435 974
309 436 971
310 437 968
311 438 965
312 438 963
313 439 960
314 440 957
315 440 954
316 441 951
317 442 948
318 443 946
319 443 943
320 444 940
321 445 938
322 446 935
323 447 933
324 447 930
325 448 927
326 449 924
327 450 922
328 450 919
329 451 916
330 452 914
331 452 911
332 453 908
333 454 906
334 455 903
335 455 901
336 456 898
337 457 895
338 458 893
339 459 891
340 460 889
341 460 886
342 461 884
343 462 881
344 463 879
345 464 877
346 464 874
347 465 872
348 466 870
349 467 868
350 468 865
351 468 863
352 469 860
353 470 858
354 470 855
355 471 853
356 472 850
357 473 848
358 474 846
359 475 844
360 475 842
361 476 840
362 477 837
363 478 835
364 478 833
365 479 830
366 480 828
367 481 826
368 481 823
369 482 821
370 483 819
371 483 817
372 484 814
373 485 812
374 486 810
375 486 808
376 487 805
377 488 803
378 489 801
379 489 799
380 490 797
381 491 794
382 492 792
383 492 790
384 493 788
385 494 786
386 495 784
387 495 782
388 496 779
389 497 777
390 498 775
391 498 773
392 499 771
393 500 769
394 500 767
395 501 765
396 502 763
397 503 760
398 503 758
399 504 756
400 505 754
401 506 752
402 506 750
403 507 748
404 508 746
405 509 744
406 509 742
407 510 740
408 511 738
409 512 737
410 512 734
411 513 733
412 514 731
413 515 729
414 515 727
415 516 725
416 517 723
417 518 721
418 518 719
419 519 717
420 520 715
421 521 714
422 522 712
423 522 710
424 523 708
425 524 706
426 525 705
427 526 703
428 527 701
429 527 699
430 528 697
431 529 696
432 530 694
433 530 692
434 531 690
435 532 688
436 532 686
437 533 684
438 534 682
439 535 681
440 535 679
441 536 677
442 537 675
443 538 673
444 538 671
445 539 670
446 540 668
447 541 666
448 541 664
449 542 663
450 543 661
451 543 659
452 544 657
453 545 655
454 546 654
455 546 652
456 547 650
457 548 648
458 549 647
459 549 645
460 550 643
461 551 641
462 551 640
463 552 638
464 553 636
465 554 635
466 554 633
467 555 631
468 556 629
469 557 628
470 557 626
471 558 624
472 559 623
473 559 621
474 560 619
475 561 617
476 562 616
477 562 614
478 563 612
479 564 611
480 565 609
481 565 608
482 566 606
483 567 604
484 567 602
485 568 601
486 569 599
487 570 598
488 570 596
489 571 594
490 572 593
491 572 591
492 573 590
493 574 588
494 575 586
495 575 585
496 576 583
497 577 582
498 578 580
499 578 578
500 579 577
501 580 575
502 580 574
503 581 572
504 582 570
505 583 569
506 583 567
507 584 566
508 585 564
509 586 563
510 586 561
511 587 559
512 588 558
513 589 556
514 589 555
515 590 553
516 591 552
517 592 550
518 592 549
519 593 547
520 594 546
521 595 544
522 595 543
523 596 541
524 597 540
525 597 538
526 598 537
527 599 535
528 600 534
529 600 532
530 601 531
531 602 529
532 602 528
533 603 526
534 604 525
535 605 523
536 605 522
537 606 520
538 607 519
539 608 518
540 608 516
541 609 515
542 610 513
543 611 512
544 612 510
545 612 509
546 613 508
547 614 506
548 614 505
549 615 503
550 616 502
551 617 500
552 617 499
553 618 497
554 619 496
555 619 495
556 620 493
557 621 492
558 622 490
559 622 489
560 623 487
561 624 486
562 624 485
563 625 483
564 626 482
565 627 480
566 627 479
567 628 478
568 629 476
569 629 475
570 630 473
571 631 472
572 632 470
573 632 469
574 633 468
575 634 466
576 634 465
577 635 464
578 636 462
579 637 461
580 637 460
581 638 458
582 639 457
583 640 455
584 640 454
585 641 453
586 642 451
587 643 450
588 643 449
589 644 447
590 645 446
591 645 445
592 646 443
593 647 442
594 647 441
595 648 439
596 649 438
597 650 436
598 650 435
599 651 434
600 652 432
601 652 431
602 653 430
603 654 428
604 655 427
605 655 426
606 656 425
607 657 423
608 657 422
609 658 421
610 659 419
611 659 418
612 660 417
613 661 415
614 662 414
615 662 413
616 663 411
617 664 410
618 665 409
619 665 408
620 666 406
621 667 405
622 667 404
623 668 402
624 669 401
625 670 400
626 670 398
627 671 397
628 672 396
629 672 395
630 673 393
631 674 392
632 674 391
633 675 389
634 676 388
635 676 387
636 677 386
637 678 384
638 679 383
639 679 382
640 680 381
641 681 379
642 681 378
643 682 377
644 683 376
645 684 374
646 684 373
647 685 372
648 686 371
649 686 369
650 687 368
651 688 367
652 689 366
653 689 364
654 690 363
655 691 362
656 692 361
657 692 360
658 693 358
659 694 357
660 695 356
661 695 355
662 696 353
663 697 352
664 697 351
665 698 350
666 699 349
667 700 347
668 700 346
669 701 345
670 702 344
671 702 343
672 703 341
673 704 340
674 705 339
675 705 338
676 706 337
677 707 335
678 708 334
679 708 333
680 709 332
681 710 331
682 710 329
683 711 328
684 712 327
685 713 326
686 713 325
687 714 323
688 715 322
689 715 321
690 716 320
691 717 319
692 718 318
693 718 316
694 719 315
695 720 314
696 721 313
697 722 312
698 722 311
699 723 310
700 724 308
701 725 307
702 725 306
703 726 305
704 727 304
705 727 303
706 728 301
707 729 300
708 730 299
709 730 298
710 731 297
711 732 296
712 732 294
713 733 293
714 734 292
715 735 291
716 735 290
717 736 289
718 737 288
719 738 287
720 738 285
721 739 284
722 740 283
723 740 282
724 741 281
725 742 280
726 743 279
727 744 278
728 745 276
729 745 275
730 746 274
731 747 273
732 747 272
733 748 271
734 749 270
735 750 269
736 750 267
737 751 266
738 752 265
739 752 264
740 753 263
741 754 262
742 754 261
743 755 260
744 756 258
745 757 257
746 757 256
747 758 255
748 759 254
749 759 253
750 760 252
751 761 251
752 762 250
753 762 248
754 763 247
755 764 246
756 765 245
757 765 244
758 766 243
759 767 242
760 768 241
761 768 240
762 769 239
763 770 237
764 771 236
765 771 235
766 772 234
767 773 233
768 773 232
769 774 231
770 775 230
771 776 229
772 776 228
773 777 227
774 778 225
775 778 224
776 779 223
777 780 222
778 781 221
779 781 220
780 782 219
781 783 218
782 784 217
783 784 216
784 785 215
785 786 214
786 787 213
787 787 211
788 788 210
789 789 209
790 790 208
791 790 207
792 791 206
793 792 205
794 792 204
795 793 203
796 794 202
797 795 201
798 796 200
799 796 199
800 797 198
801 798 197
802 798 196
803 799 194
804 800 193
805 801 192
806 801 191
807 802 190
808 803 189
809 803 188
810 804 187
811 805 186
812 806 185
813 806 184
814 807 183
815 808 182
816 809 181
817 809 180
818 810 179
819 811 178
820 811 176
821 812 175
822 813 174
823 813 173
824 814 172
825 815 171
826 816 170
827 816 169
828 817 168
829 818 167
830 819 166
831 819 165
832 820 164
833 821 163
834 822 162
835 822 161
836 823 160
837 824 159
838 824 158
839 825 157
840 826 156
841 827 155
842 827 154
843 828 153
844 829 152
845 830 151
846 830 150
847 831 149
848 832 147
849 832 146
850 833 145
851 834 144
852 834 143
853 835 142
854 836 141
855 837 140
856 837 139
857 838 138
858 839 137
859 840 136
860 840 135
861 841 134
862 842 133
863 843 132
864 843 131
865 844 130
866 845 129
867 845 128
868 846 127
869 847 126
870 848 125
871 849 124
872 849 123
873 850 122
874 851 121
875 852 120
876 852 119
877 853 118
878 854 117
879 855 116
880 855 115
881 856 114
882 857 113
883 858 112
884 858 111
885 859 110
886 860 109
887 861 108
888 862 107
889 862 106
890 863 105
891 864 104
892 865 103
893 865 102
894 866 101
895 867 100
896 867 99
897 868 98
898 869 97
899 870 96
900 870 95
901 871 94
902 872 93
903 872 92
904 873 91
905 874 90
906 875 89
907 875 88
908 876 87
909 877 86
910 878 85
911 878 84
912 879 83
913 880 82
914 881 81
915 881 80
916 882 79
917 883 78
918 884 77
919 884 76
920 885 75
921 886 74
922 886 73
923 887 73
924 888 72
925 889 71
926 890 70
927 890 69
928 891 68
929 892 67
930 893 66
931 893 65
932 894 64
933 895 63
934 895 62
935 896 61
936 897 60
937 898 59
938 899 58
939 899 57
940 900 56
941 901 55
942 902 54
943 903 53
944 903 52
945 904 51
946 905 50
947 906 49
948 906 48
949 907 47
950 908 46
951 909 45
952 909 44
953 910 43
954 911 42
955 912 41
956 913 41
957 913 40
958 914 39
959 915 38
960 915 37
961 916 36
962 917 35
963 918 34
964 918 33
965 919 32
966 920 31
967 921 30
968 922 29
969 922 28
970 923 27
971 924 26
972 925 25
973 925 24
974 926 23
975 927 22
976 927 21
977 928 20
978 929 19
979 929 18
980 930 18
981 931 17
982 932 16
983 932 15
984 933 14
985 934 13
986 935 12
987 935 11
988 936 10
989 937 9
990 938 8
991 938 7
992 939 6
993 940 5
994 940 4
995 941 3
996 942 2
997 943 1
998 943 0
999 944 0


================================================
File: notebook/1 . EDA STUDENT PERFORMANCE .ipynb
================================================
# Jupyter notebook converted to Python script.

'''
## Student Performance Indicator

'''

'''
#### Life cycle of Machine learning Project

- Understanding the Problem Statement
- Data Collection
- Data Checks to perform
- Exploratory data analysis
- Data Pre-Processing
- Model Training
- Choose best model
'''

'''
### 1) Problem statement
- This project understands how the student's performance (test scores) is affected by other variables such as Gender, Ethnicity, Parental level of education, Lunch and Test preparation course.


### 2) Data Collection
- Dataset Source - https://www.kaggle.com/datasets/spscientist/students-performance-in-exams?datasetId=74977
- The data consists of 8 column and 1000 rows.
'''

'''
### 2.1 Import Data and Required Packages
####  Importing Pandas, Numpy, Matplotlib, Seaborn and Warings Library.
'''

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline
import warnings
warnings.filterwarnings('ignore')

'''
#### Import the CSV Data as Pandas DataFrame
'''

df = pd.read_csv('data/stud.csv')

'''
#### Show Top 5 Records
'''

df.head()
# Output:
#      gender race_ethnicity parental_level_of_education         lunch  \

#   0  female        group B           bachelor's degree      standard   

#   1  female        group C                some college      standard   

#   2  female        group B             master's degree      standard   

#   3    male        group A          associate's degree  free/reduced   

#   4    male        group C                some college      standard   

#   

#     test_preparation_course  math_score  reading_score  writing_score  

#   0                    none          72             72             74  

#   1               completed          69             90             88  

#   2                    none          90             95             93  

#   3                    none          47             57             44  

#   4                    none          76             78             75  

'''
#### Shape of the dataset
'''

df.shape
# Output:
#   (1000, 8)

'''
### 2.2 Dataset information
'''

'''
- gender : sex of students  -> (Male/female)
- race/ethnicity : ethnicity of students -> (Group A, B,C, D,E)
- parental level of education : parents' final education ->(bachelor's degree,some college,master's degree,associate's degree,high school)
- lunch : having lunch before test (standard or free/reduced) 
- test preparation course : complete or not complete before test
- math score
- reading score
- writing score
'''

'''
### 3. Data Checks to perform

- Check Missing values
- Check Duplicates
- Check data type
- Check the number of unique values of each column
- Check statistics of data set
- Check various categories present in the different categorical column
'''

'''
### 3.1 Check Missing values
'''

df.isna().sum()
# Output:
#   gender                         0

#   race_ethnicity                 0

#   parental_level_of_education    0

#   lunch                          0

#   test_preparation_course        0

#   math_score                     0

#   reading_score                  0

#   writing_score                  0

#   dtype: int64

'''
#### There are no missing values in the data set
'''

'''
### 3.2 Check Duplicates
'''

df.duplicated().sum()
# Output:
#   0

'''
#### There are no duplicates  values in the data set
'''

'''
### 3.3 Check data types
'''

# Check Null and Dtypes
df.info()
# Output:
#   <class 'pandas.core.frame.DataFrame'>

#   RangeIndex: 1000 entries, 0 to 999

#   Data columns (total 8 columns):

#    #   Column                       Non-Null Count  Dtype 

#   ---  ------                       --------------  ----- 

#    0   gender                       1000 non-null   object

#    1   race_ethnicity               1000 non-null   object

#    2   parental_level_of_education  1000 non-null   object

#    3   lunch                        1000 non-null   object

#    4   test_preparation_course      1000 non-null   object

#    5   math_score                   1000 non-null   int64 

#    6   reading_score                1000 non-null   int64 

#    7   writing_score                1000 non-null   int64 

#   dtypes: int64(3), object(5)

#   memory usage: 62.6+ KB


'''
### 3.4 Checking the number of unique values of each column
'''

df.nunique()
# Output:
#   gender                          2

#   race_ethnicity                  5

#   parental_level_of_education     6

#   lunch                           2

#   test_preparation_course         2

#   math_score                     81

#   reading_score                  72

#   writing_score                  77

#   dtype: int64

df.gender.unique()
# Output:
#   array(['female', 'male'], dtype=object)

'''
### 3.5 Check statistics of data set
'''

df.describe()
# Output:
#          math_score  reading_score  writing_score

#   count  1000.00000    1000.000000    1000.000000

#   mean     66.08900      69.169000      68.054000

#   std      15.16308      14.600192      15.195657

#   min       0.00000      17.000000      10.000000

#   25%      57.00000      59.000000      57.750000

#   50%      66.00000      70.000000      69.000000

#   75%      77.00000      79.000000      79.000000

#   max     100.00000     100.000000     100.000000

'''
#### Insight
- From above description of numerical data, all means are very close to each other - between 66 and 68.05;
- All standard deviations are also close - between 14.6 and 15.19;
- While there is a minimum score  0 for math, for writing minimum is much higher = 10 and for reading myet higher = 17
'''

'''
### 3.7 Exploring Data
'''

print('Categories in 'gender' variable:     ',end=' ' )
print(df['gender'].unique())

print('Categories in 'race_ethnicity' variable:  ',end=' ')
print(df['race_ethnicity'].unique())

print('Categories in'parental_level_of_education' variable:',end=' ' )
print(df['parental_level_of_education'].unique())

print('Categories in 'lunch' variable:     ',end=' ' )
print(df['lunch'].unique())

print('Categories in 'test_preparation_course' variable:     ',end=' ' )
print(df['test_preparation_course'].unique())
# Output:
#   Categories in 'gender' variable:      ['female' 'male']

#   Categories in 'race_ethnicity' variable:   ['group B' 'group C' 'group A' 'group D' 'group E']

#   Categories in'parental_level_of_education' variable: ['bachelor's degree' 'some college' 'master's degree' 'associate's degree'

#    'high school' 'some high school']

#   Categories in 'lunch' variable:      ['standard' 'free/reduced']

#   Categories in 'test_preparation_course' variable:      ['none' 'completed']


df.columns
# Output:
#   Index(['gender', 'race_ethnicity', 'parental_level_of_education', 'lunch',

#          'test_preparation_course', 'math_score', 'reading_score',

#          'writing_score'],

#         dtype='object')

# define numerical & categorical columns
numeric_features = [feature for feature in df.columns if df[feature].dtype != 'O']
categorical_features = [feature for feature in df.columns if df[feature].dtype == 'O']

# print columns
print('We have {} numerical features : {}'.format(len(numeric_features), numeric_features))
print('\nWe have {} categorical features : {}'.format(len(categorical_features), categorical_features))
# Output:
#   We have 3 numerical features : ['math_score', 'reading_score', 'writing_score']

#   

#   We have 5 categorical features : ['gender', 'race_ethnicity', 'parental_level_of_education', 'lunch', 'test_preparation_course']


'''
### 3.8 Adding columns for 'Total Score' and 'Average'
'''

df['total_score'] = df['math_score'] + df['reading_score'] + df['writing_score']
df['average'] = df['total_score']/3
df.head()
# Output:
#      gender race_ethnicity parental_level_of_education         lunch  \

#   0  female        group B           bachelor's degree      standard   

#   1  female        group C                some college      standard   

#   2  female        group B             master's degree      standard   

#   3    male        group A          associate's degree  free/reduced   

#   4    male        group C                some college      standard   

#   

#     test_preparation_course  math_score  reading_score  writing_score  \

#   0                    none          72             72             74   

#   1               completed          69             90             88   

#   2                    none          90             95             93   

#   3                    none          47             57             44   

#   4                    none          76             78             75   

#   

#      total_score    average  

#   0          218  72.666667  

#   1          247  82.333333  

#   2          278  92.666667  

#   3          148  49.333333  

#   4          229  76.333333  

df.to_csv('s.csv', index=False) ## Not needed just for internal testing

reading_full = df[df['reading_score'] == 100]['average'].count()
writing_full = df[df['writing_score'] == 100]['average'].count()
math_full = df[df['math_score'] == 100]['total_score'].count()

print(f'Number of students with full marks in Maths: {math_full}')
print(f'Number of students with full marks in Writing: {writing_full}')
print(f'Number of students with full marks in Reading: {reading_full}')
# Output:
#   Number of students with full marks in Maths: 7

#   Number of students with full marks in Writing: 14

#   Number of students with full marks in Reading: 17


reading_less_20 = df[df['reading_score'] <= 20]['average'].count()
writing_less_20 = df[df['writing_score'] <= 20]['average'].count()
math_less_20 = df[df['math_score'] <= 20]['average'].count()

print(f'Number of students with less than 20 marks in Maths: {math_less_20}')
print(f'Number of students with less than 20 marks in Writing: {writing_less_20}')
print(f'Number of students with less than 20 marks in Reading: {reading_less_20}')
# Output:
#   Number of students with less than 20 marks in Maths: 4

#   Number of students with less than 20 marks in Writing: 3

#   Number of students with less than 20 marks in Reading: 1


'''
#####  Insights
 - From above values we get students have performed the worst in Maths 
 - Best performance is in reading section
'''

'''
### 4. Exploring Data ( Visualization )
#### 4.1 Visualize average score distribution to make some conclusion. 
- Histogram
- Kernel Distribution Function (KDE)
'''

'''
#### 4.1.1 Histogram & KDE
'''

fig, axs = plt.subplots(1, 2, figsize=(15, 7))
plt.subplot(121)
sns.histplot(data=df,x='average',bins=30,kde=True,color='g')
plt.subplot(122)
sns.histplot(data=df,x='average',kde=True,hue='gender')
plt.show()
# Output:
#   <Figure size 1500x700 with 2 Axes>

'''
In the given code, fig and axs are variables that are created using the subplots() function from the Matplotlib library.

fig is a Figure object, which is a container that holds all the plot elements such as axis, plot titles, and legends. It represents the overall figure or window in which one or more subplots are contained.

axs is an array of Axes objects. Each Axes object represents an individual subplot and is used to plot data and set various plot properties such as labels, titles, colors, etc. In this case, subplots(1, 2) creates a Figure object with one row and two columns of subplots, so axs is an array of length 2, with each element representing an Axes object.

By using these variables, you can customize the plot elements and properties of each subplot independently. For example, you can set the title and axis labels of each subplot using axs[0].set_title('Title'), axs[0].set_xlabel('X Label'), axs[0].set_ylabel('Y Label'), etc.

The figsize argument in the subplots() function is used to specify the width and height of the figure in inches. In this case, figsize=(15, 7) creates a figure with a width of 15 inches and a height of 7 inches.
'''

'''
#####  Insights
- Female students tend to perform well then male students.
'''

plt.subplots(1,3,figsize=(25,6))
plt.subplot(141)
sns.histplot(data=df,x='average',kde=True,hue='lunch')
plt.subplot(142)
sns.histplot(data=df[df.gender=='female'],x='average',kde=True,hue='lunch')
plt.subplot(143)
sns.histplot(data=df[df.gender=='male'],x='average',kde=True,hue='lunch')
plt.show()
# Output:
#   <Figure size 2500x600 with 3 Axes>

'''
#####  Insights
- Standard lunch helps perform well in exams.
- Standard lunch helps perform well in exams be it a male or a female.
'''

plt.subplots(1,3,figsize=(25,6))
plt.subplot(141)
ax =sns.histplot(data=df,x='average',kde=True,hue='parental_level_of_education')
plt.subplot(142)
ax =sns.histplot(data=df[df.gender=='male'],x='average',kde=True,hue='parental_level_of_education')
plt.subplot(143)
ax =sns.histplot(data=df[df.gender=='female'],x='average',kde=True,hue='parental_level_of_education')
plt.show()
# Output:
#   <Figure size 2500x600 with 3 Axes>

'''
#####  Insights
- In general parent's education don't help student perform well in exam.
- 2nd plot shows that parent's whose education is of associate's degree or master's degree their male child tend to perform well in exam
- 3rd plot we can see there is no effect of parent's education on female students.
'''

plt.subplots(1,3,figsize=(25,6))
plt.subplot(141)
ax =sns.histplot(data=df,x='average',kde=True,hue='race_ethnicity')
plt.subplot(142)
ax =sns.histplot(data=df[df.gender=='female'],x='average',kde=True,hue='race_ethnicity')
plt.subplot(143)
ax =sns.histplot(data=df[df.gender=='male'],x='average',kde=True,hue='race_ethnicity')
plt.show()
# Output:
#   <Figure size 2500x600 with 3 Axes>

'''
Yes, you can specify any number as the second index in the plt.subplot() command, as long as it is less than or equal to the number of columns specified in plt.subplots().

For example, if you create a figure with plt.subplots(2, 4), which has 2 rows and 4 columns, you can specify the location of a subplot using the plt.subplot() command with indices ranging from 1 to 8:

plt.subplot(1, 4, 1) specifies the first subplot in the first row
plt.subplot(1, 4, 2) specifies the second subplot in the first row
plt.subplot(1, 4, 3) specifies the third subplot in the first row
plt.subplot(1, 4, 4) specifies the fourth subplot in the first row
plt.subplot(2, 4, 5) specifies the first subplot in the second row
plt.subplot(2, 4, 6) specifies the second subplot in the second row
plt.subplot(2, 4, 7) specifies the third subplot in the second row
plt.subplot(2, 4, 8) specifies the fourth subplot in the second row
In general, the location of a subplot can be specified using the indices of its row, column, and position in the grid, in the format plt.subplot(nrows, ncols, index).
'''

'''
#####  Insights
- Students of group A and group B tends to perform poorly in exam.
- Students of group A and group B tends to perform poorly in exam irrespective of whether they are male or female
'''

'''
#### 4.2 Maximumum score of students in all three subjects
'''


plt.figure(figsize=(18,8))
plt.subplot(1, 4, 1)
plt.title('MATH SCORES')
sns.violinplot(y='math_score',data=df,color='red',linewidth=3)
plt.subplot(1, 4, 2)
plt.title('READING SCORES')
sns.violinplot(y='reading_score',data=df,color='green',linewidth=3)
plt.subplot(1, 4, 3)
plt.title('WRITING SCORES')
sns.violinplot(y='writing_score',data=df,color='blue',linewidth=3)
plt.show()
# Output:
#   <Figure size 1800x800 with 3 Axes>

'''
#### Insights
- From the above three plots its clearly visible that most of the students score in between 60-80 in Maths whereas in reading and writing most of them score from 50-80
'''

'''
#### 4.3 Multivariate analysis using pieplot
'''

plt.rcParams['figure.figsize'] = (30, 12)

plt.subplot(1, 5, 1)
size = df['gender'].value_counts()
labels = 'Female', 'Male'
color = ['red','green']


plt.pie(size, colors = color, labels = labels,autopct = '.%2f%%')
plt.title('Gender', fontsize = 20)
plt.axis('off')



plt.subplot(1, 5, 2)
size = df['race_ethnicity'].value_counts()
labels = 'Group C', 'Group D','Group B','Group E','Group A'
color = ['red', 'green', 'blue', 'cyan','orange']

plt.pie(size, colors = color,labels = labels,autopct = '.%2f%%')
plt.title('Race/Ethnicity', fontsize = 20)
plt.axis('off')



plt.subplot(1, 5, 3)
size = df['lunch'].value_counts()
labels = 'Standard', 'Free'
color = ['red','green']

plt.pie(size, colors = color,labels = labels,autopct = '.%2f%%')
plt.title('Lunch', fontsize = 20)
plt.axis('off')


plt.subplot(1, 5, 4)
size = df['test_preparation_course'].value_counts()
labels = 'None', 'Completed'
color = ['red','green']

plt.pie(size, colors = color,labels = labels,autopct = '.%2f%%')
plt.title('Test Course', fontsize = 20)
plt.axis('off')


plt.subplot(1, 5, 5)
size = df['parental_level_of_education'].value_counts()
labels = 'Some College', 'Associate's Degree','High School','Some High School','Bachelor's Degree','Master's Degree'
color = ['red', 'green', 'blue', 'cyan','orange','grey']

plt.pie(size, colors = color,labels = labels,autopct = '.%2f%%')
plt.title('Parental Education', fontsize = 20)
plt.axis('off')


plt.tight_layout()
plt.grid()

plt.show()
# Output:
#   <Figure size 3000x1200 with 5 Axes>

'''
#####  Insights
- Number of Male and Female students is almost equal
- Number students are greatest in Group C
- Number of students who have standard lunch are greater
- Number of students who have not enrolled in any test preparation course is greater
- Number of students whose parental education is 'Some College' is greater followed closely by 'Associate's Degree'
'''

'''
#### 4.4 Feature Wise Visualization
#### 4.4.1 GENDER COLUMN
- How is distribution of Gender ?
- Is gender has any impact on student's performance ?
'''

'''
#### UNIVARIATE ANALYSIS ( How is distribution of Gender ? )
'''

f,ax=plt.subplots(1,2,figsize=(20,10))
sns.countplot(x=df['gender'],data=df,palette ='bright',ax=ax[0],saturation=0.95)
for container in ax[0].containers:
    ax[0].bar_label(container,color='black',size=20)
    
plt.pie(x=df['gender'].value_counts(),labels=['Male','Female'],explode=[0,0.05],autopct='%1.1f%%',shadow=True,colors=['#ff4d4d','#ff8000'])
plt.show()
# Output:
#   <Figure size 2000x1000 with 2 Axes>

'''
This code creates a figure with two subplots side-by-side, each with a size of 20 by 10 inches, using the plt.subplots() function. The ax variable is assigned to an array with two axes objects representing each of the subplots.

The first subplot displays a countplot of the 'gender' column in the 'df' DataFrame using the sns.countplot() function from the Seaborn library. The x parameter specifies the column to be plotted, the data parameter specifies the DataFrame to be used, and the palette parameter specifies the color palette to be used for the bars in the plot. The ax parameter specifies which axis object to use for the plot, which in this case is the first axis object in the ax array (ax[0]). The saturation parameter controls the intensity of the colors used in the plot.

The for loop then adds labels to the bars in the countplot using the ax.bar_label() method. The containers attribute of the axis object is used to access the bars in the plot, and the bar_label() method is used to add text labels to each bar. The color and size parameters of the bar_label() method are used to set the color and size of the labels.

The second subplot displays a pie chart of the 'gender' column in the 'df' DataFrame using the plt.pie() function from the Matplotlib library. The x parameter specifies the data to be plotted, which in this case is the result of calling the value_counts() method on the 'gender' column. The labels parameter specifies the labels to be used for each slice of the pie chart. The explode parameter specifies the distance to be used for each slice of the pie chart. The autopct parameter specifies the format string for the percentage values to be displayed on each slice of the pie chart. The shadow parameter specifies whether to add a shadow effect to the pie chart. The colors parameter specifies the colors to be used for each slice of the pie chart.

Finally, the plt.show() function is used to display the figure.
'''

'''
#### Insights 
- Gender has balanced data with female students are 518 (48%) and male students are 482 (52%) 
'''

'''
#### BIVARIATE ANALYSIS ( Is gender has any impact on student's performance ? ) 
'''

gender_group = df.groupby('gender').mean()
gender_group
# Output:
#           math_score  reading_score  writing_score  total_score    average

#   gender                                                                  

#   female   63.633205      72.608108      72.467181   208.708494  69.569498

#   male     68.728216      65.473029      63.311203   197.512448  65.837483

plt.figure(figsize=(10, 8))

X = ['Total Average','Math Average']


female_scores = [gender_group['average'][0], gender_group['math_score'][0]]
male_scores = [gender_group['average'][1], gender_group['math_score'][1]]

X_axis = np.arange(len(X))
  
plt.bar(X_axis - 0.2, male_scores, 0.4, label = 'Male')
plt.bar(X_axis + 0.2, female_scores, 0.4, label = 'Female')
  
plt.xticks(X_axis, X)
plt.ylabel('Marks')
plt.title('Total average v/s Math average marks of both the genders', fontweight='bold')
plt.legend()
plt.show()
# Output:
#   <Figure size 1000x800 with 1 Axes>

'''
#### Insights 
- On an average females have a better overall score than men.
- whereas males have scored higher in Maths.
'''

'''
#### 4.4.2 RACE/EHNICITY COLUMN
- How is Group wise distribution ?
- Is Race/Ehnicity has any impact on student's performance ?
'''

'''
#### UNIVARIATE ANALYSIS ( How is Group wise distribution ?)
'''

f,ax=plt.subplots(1,2,figsize=(20,10))
sns.countplot(x=df['race_ethnicity'],data=df,palette = 'bright',ax=ax[0],saturation=0.95)
for container in ax[0].containers:
    ax[0].bar_label(container,color='black',size=20)
    
plt.pie(x = df['race_ethnicity'].value_counts(),labels=df['race_ethnicity'].value_counts().index,explode=[0.1,0,0,0,0],autopct='%1.1f%%',shadow=True)
plt.show()   
# Output:
#   <Figure size 2000x1000 with 2 Axes>

'''
#### Insights 
- Most of the student belonging from group C /group D.
- Lowest number of students belong to groupA.
'''

Group_data2=df.groupby('race_ethnicity').mean()
Group_data2.head()
# Output:
#                   math_score  reading_score  writing_score  total_score  \

#   race_ethnicity                                                          

#   group A          61.629213      64.674157      62.674157   188.977528   

#   group B          63.452632      67.352632      65.600000   196.405263   

#   group C          64.463950      69.103448      67.827586   201.394984   

#   group D          67.362595      70.030534      70.145038   207.538168   

#   group E          73.821429      73.028571      71.407143   218.257143   

#   

#                     average  

#   race_ethnicity             

#   group A         62.992509  

#   group B         65.468421  

#   group C         67.131661  

#   group D         69.179389  

#   group E         72.752381  

'''
#### BIVARIATE ANALYSIS ( Is Race/Ehnicity has any impact on student's performance ? )
'''

Group_data2=df.groupby('race_ethnicity')
f,ax=plt.subplots(1,3,figsize=(20,8))
sns.barplot(x=Group_data2['math_score'].mean().index,y=Group_data2['math_score'].mean().values,palette = 'mako',ax=ax[0])
ax[0].set_title('Math score',color='#005ce6',size=20)

for container in ax[0].containers:
    ax[0].bar_label(container,color='black',size=15)

sns.barplot(x=Group_data2['reading_score'].mean().index,y=Group_data2['reading_score'].mean().values,palette = 'flare',ax=ax[1])
ax[1].set_title('Reading score',color='#005ce6',size=20)

for container in ax[1].containers:
    ax[1].bar_label(container,color='black',size=15)

sns.barplot(x=Group_data2['writing_score'].mean().index,y=Group_data2['writing_score'].mean().values,palette = 'coolwarm',ax=ax[2])
ax[2].set_title('Writing score',color='#005ce6',size=20)

for container in ax[2].containers:
    ax[2].bar_label(container,color='black',size=15)
# Output:
#   <Figure size 2000x800 with 3 Axes>

'''
#### Insights 
- Group E students have scored the highest marks. 
- Group A students have scored the lowest marks. 
- Students from a lower Socioeconomic status have a lower avg in all course subjects
'''

'''
#### 4.4.3 PARENTAL LEVEL OF EDUCATION COLUMN
- What is educational background of student's parent ?
- Is parental education has any impact on student's performance ?
'''

'''
#### UNIVARIATE ANALYSIS ( What is educational background of student's parent ? )
'''

plt.rcParams['figure.figsize'] = (15, 9)
plt.style.use('fivethirtyeight')
sns.countplot(x=df['parental_level_of_education'], palette = 'Blues')
plt.title('Comparison of Parental Education', fontweight = 30, fontsize = 20)
plt.xlabel('Degree')
plt.ylabel('count')
plt.show()
# Output:
#   <Figure size 1500x900 with 1 Axes>

'''
#### Insights 
- Largest number of parents are from some college.
'''

'''
#### BIVARIATE ANALYSIS ( Is parental education has any impact on student's performance ? )
'''

df.groupby('parental_level_of_education').agg('mean').plot(kind='barh',figsize=(10,10))
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.show()
# Output:
#   <Figure size 1000x1000 with 1 Axes>

'''
#### Insights 
- The score of student whose parents possess master and bachelor level education are higher than others.
'''

'''
#### 4.4.4 LUNCH COLUMN 
- Which type of lunch is most common amoung students ?
- What is the effect of lunch type on test results?

'''

'''
#### UNIVARIATE ANALYSIS ( Which type of lunch is most common amoung students ? )
'''

plt.rcParams['figure.figsize'] = (15, 9)
plt.style.use('seaborn-talk')
sns.countplot(x=df['lunch'], palette = 'PuBu')
plt.title('Comparison of different types of lunch', fontweight = 30, fontsize = 20)
plt.xlabel('types of lunch')
plt.ylabel('count')
plt.show()
# Output:
#   <Figure size 1040x715 with 1 Axes>

'''
#### Insights 
- Students being served Standard lunch was more than free lunch
'''

'''
#### BIVARIATE ANALYSIS (  Is lunch type intake has any impact on student's performance ? )
'''

f,ax=plt.subplots(1,2,figsize=(20,8))
sns.countplot(x=df['parental_level_of_education'],data=df,palette = 'bright',hue='test_preparation_course',saturation=0.95,ax=ax[0])
ax[0].set_title('Students vs test preparation course ',color='black',size=25)
for container in ax[0].containers:
    ax[0].bar_label(container,color='black',size=20)
    
sns.countplot(x=df['parental_level_of_education'],data=df,palette = 'bright',hue='lunch',saturation=0.95,ax=ax[1])
for container in ax[1].containers:
    ax[1].bar_label(container,color='black',size=20)   
# Output:
#   <Figure size 2000x800 with 2 Axes>

'''
#### Insights 
- Students who get Standard Lunch tend to perform better than students who got free/reduced lunch
'''

'''
#### 4.4.5 TEST PREPARATION COURSE COLUMN 
- Which type of lunch is most common amoung students ?
- Is Test prepration course has any impact on student's performance ?
'''

'''
#### BIVARIATE ANALYSIS ( Is Test prepration course has any impact on student's performance ? )
'''

plt.figure(figsize=(20,10))
plt.subplot(2,4,1)
sns.barplot (x=df['lunch'], y=df['math_score'], hue=df['test_preparation_course'])
plt.subplot(2,4,2)
sns.barplot (x=df['lunch'], y=df['reading_score'], hue=df['test_preparation_course'])
plt.subplot(2,4,3)
sns.barplot (x=df['lunch'], y=df['writing_score'], hue=df['test_preparation_course'])
# Output:
#   <Axes: xlabel='lunch', ylabel='writing_score'>
#   <Figure size 2000x1000 with 3 Axes>

'''
#### Insights  
- Students who have completed the Test Prepration Course have scores higher in all three categories than those who haven't taken the course
'''

'''
#### 4.4.6 CHECKING OUTLIERS
'''

plt.subplots(1,4,figsize=(16,5))
plt.subplot(141)
sns.boxplot(df['math_score'],color='skyblue')
plt.subplot(142)
sns.boxplot(df['reading_score'],color='hotpink')
plt.subplot(143)
sns.boxplot(df['writing_score'],color='yellow')
plt.subplot(144)
sns.boxplot(df['average'],color='lightgreen')
plt.show()
# Output:
#   <Figure size 1600x500 with 4 Axes>

'''
#### 4.4.7 MUTIVARIATE ANALYSIS USING PAIRPLOT
'''

sns.pairplot(df,hue = 'gender')
plt.show()
# Output:
#   <Figure size 1377.25x1250 with 30 Axes>

'''
#### Insights
- From the above plot it is clear that all the scores increase linearly with each other.
'''

'''
### 5. Conclusions
- Student's Performance is related with lunch, race, parental level education
- Females lead in pass percentage and also are top-scorers
- Student's Performance is not much related with test preparation course
- Finishing preparation course is benefitial.
'''


================================================
File: notebook/2. MODEL TRAINING.ipynb
================================================
# Jupyter notebook converted to Python script.

'''
## Model Training
'''

'''
#### 1.1 Import Data and Required Packages
##### Importing Pandas, Numpy, Matplotlib, Seaborn and Warings Library.
'''

# Basic Import
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt 
import seaborn as sns
# Modelling
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.neighbors import KNeighborsRegressor
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor,AdaBoostRegressor
from sklearn.svm import SVR
from sklearn.linear_model import LinearRegression, Ridge,Lasso
from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error
from sklearn.model_selection import RandomizedSearchCV
from catboost import CatBoostRegressor
from xgboost import XGBRegressor
import warnings

'''
#### Import the CSV Data as Pandas DataFrame
'''

df = pd.read_csv('data/stud.csv')

'''
#### Show Top 5 Records
'''

df.head()
# Output:
#      gender race_ethnicity parental_level_of_education         lunch  \

#   0  female        group B           bachelor's degree      standard   

#   1  female        group C                some college      standard   

#   2  female        group B             master's degree      standard   

#   3    male        group A          associate's degree  free/reduced   

#   4    male        group C                some college      standard   

#   

#     test_preparation_course  math_score  reading_score  writing_score  

#   0                    none          72             72             74  

#   1               completed          69             90             88  

#   2                    none          90             95             93  

#   3                    none          47             57             44  

#   4                    none          76             78             75  

'''
#### Preparing X and Y variables
'''

X = df.drop(columns=['math_score'],axis=1)

y = df['math_score']

num_features = X.select_dtypes(exclude='object').columns
cat_features = X.select_dtypes(include='object').columns
print(num_features,cat_features)

# Output:
#   Index(['reading_score', 'writing_score'], dtype='object') Index(['gender', 'race_ethnicity', 'parental_level_of_education', 'lunch',

#          'test_preparation_course'],

#         dtype='object')


# Create Column Transformer with 3 types of transformers
num_features = X.select_dtypes(exclude='object').columns
cat_features = X.select_dtypes(include='object').columns

from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.compose import ColumnTransformer

numeric_transformer = StandardScaler() ## Numerical values
oh_transformer = OneHotEncoder()  ## Categorical values

preprocessor = ColumnTransformer(
    [
        ('OneHotEncoder', oh_transformer, cat_features),
         ('StandardScaler', numeric_transformer, num_features),        
    ]
)

X = preprocessor.fit_transform(X)

# separate dataset into train and test
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=42)
X_train.shape, X_test.shape
# Output:
#   ((800, 19), (200, 19))

'''
#### Create an Evaluate Function to give all metrics after model Training
'''

def evaluate_model(true, predicted):
    mae = mean_absolute_error(true, predicted)
    mse = mean_squared_error(true, predicted)
    #rmse = np.sqrt(mean_squared_error(true, predicted))
    rmse = np.sqrt(mse)
    r2_square = r2_score(true, predicted)
    return mae, rmse, r2_square

models = {
    'Linear Regression': LinearRegression(),
    'Lasso': Lasso(),
    'Ridge': Ridge(),
    'K-Neighbors Regressor': KNeighborsRegressor(),
    'Decision Tree': DecisionTreeRegressor(),
    'Random Forest Regressor': RandomForestRegressor(),
    'XGBRegressor': XGBRegressor(), 
    'CatBoosting Regressor': CatBoostRegressor(verbose=False),
    'AdaBoost Regressor': AdaBoostRegressor()
}
model_list = []
r2_list =[]

for i in range(len(list(models))):
    model = list(models.values())[i]
    model.fit(X_train, y_train) # Train model

    # Make predictions
    y_train_pred = model.predict(X_train)
    y_test_pred = model.predict(X_test)
    
    # Evaluate Train and Test dataset
    model_train_mae , model_train_rmse, model_train_r2 = evaluate_model(y_train, y_train_pred)

    model_test_mae , model_test_rmse, model_test_r2 = evaluate_model(y_test, y_test_pred)

    
    print(list(models.keys())[i])
    model_list.append(list(models.keys())[i])
    
    print('Model performance for Training set')
    print('- Root Mean Squared Error: {:.4f}'.format(model_train_rmse))
    print('- Mean Absolute Error: {:.4f}'.format(model_train_mae))
    print('- R2 Score: {:.4f}'.format(model_train_r2))

    print('----------------------------------')
    
    print('Model performance for Test set')
    print('- Root Mean Squared Error: {:.4f}'.format(model_test_rmse))
    print('- Mean Absolute Error: {:.4f}'.format(model_test_mae))
    print('- R2 Score: {:.4f}'.format(model_test_r2))
    r2_list.append(model_test_r2)
    
    print('='*35)
    print('\n')
# Output:
#   Linear Regression

#   Model performance for Training set

#   - Root Mean Squared Error: 5.3243

#   - Mean Absolute Error: 4.2671

#   - R2 Score: 0.8743

#   ----------------------------------

#   Model performance for Test set

#   - Root Mean Squared Error: 5.3960

#   - Mean Absolute Error: 4.2158

#   - R2 Score: 0.8803

#   ===================================

#   

#   

#   Lasso

#   Model performance for Training set

#   - Root Mean Squared Error: 6.5938

#   - Mean Absolute Error: 5.2063

#   - R2 Score: 0.8071

#   ----------------------------------

#   Model performance for Test set

#   - Root Mean Squared Error: 6.5197

#   - Mean Absolute Error: 5.1579

#   - R2 Score: 0.8253

#   ===================================

#   

#   

#   Ridge

#   Model performance for Training set

#   - Root Mean Squared Error: 5.3233

#   - Mean Absolute Error: 4.2650

#   - R2 Score: 0.8743

#   ----------------------------------

#   Model performance for Test set

#   - Root Mean Squared Error: 5.3904

#   - Mean Absolute Error: 4.2111

#   - R2 Score: 0.8806

#   ===================================

#   

#   

#   K-Neighbors Regressor

#   Model performance for Training set

#   - Root Mean Squared Error: 5.7077

#   - Mean Absolute Error: 4.5167

#   - R2 Score: 0.8555

#   ----------------------------------

#   Model performance for Test set

#   - Root Mean Squared Error: 7.2530

#   - Mean Absolute Error: 5.6210

#   - R2 Score: 0.7838

#   ===================================

#   

#   

#   Decision Tree

#   Model performance for Training set

#   - Root Mean Squared Error: 0.2795

#   - Mean Absolute Error: 0.0187

#   - R2 Score: 0.9997

#   ----------------------------------

#   Model performance for Test set

#   - Root Mean Squared Error: 7.8588

#   - Mean Absolute Error: 6.1500

#   - R2 Score: 0.7462

#   ===================================

#   

#   

#   Random Forest Regressor

#   Model performance for Training set

#   - Root Mean Squared Error: 2.2953

#   - Mean Absolute Error: 1.8314

#   - R2 Score: 0.9766

#   ----------------------------------

#   Model performance for Test set

#   - Root Mean Squared Error: 5.9572

#   - Mean Absolute Error: 4.6539

#   - R2 Score: 0.8542

#   ===================================

#   

#   

#   XGBRegressor

#   Model performance for Training set

#   - Root Mean Squared Error: 0.9087

#   - Mean Absolute Error: 0.6148

#   - R2 Score: 0.9963

#   ----------------------------------

#   Model performance for Test set

#   - Root Mean Squared Error: 6.5889

#   - Mean Absolute Error: 5.0844

#   - R2 Score: 0.8216

#   ===================================

#   

#   

#   CatBoosting Regressor

#   Model performance for Training set

#   - Root Mean Squared Error: 3.0427

#   - Mean Absolute Error: 2.4054

#   - R2 Score: 0.9589

#   ----------------------------------

#   Model performance for Test set

#   - Root Mean Squared Error: 6.0086

#   - Mean Absolute Error: 4.6125

#   - R2 Score: 0.8516

#   ===================================

#   

#   

#   AdaBoost Regressor

#   Model performance for Training set

#   - Root Mean Squared Error: 5.8359

#   - Mean Absolute Error: 4.7843

#   - R2 Score: 0.8489

#   ----------------------------------

#   Model performance for Test set

#   - Root Mean Squared Error: 6.0919

#   - Mean Absolute Error: 4.7874

#   - R2 Score: 0.8475

#   ===================================

#   

#   


'''
### Results
'''

pd.DataFrame(list(zip(model_list, r2_list)), columns=['Model Name', 'R2_Score']).sort_values(by=['R2_Score'],ascending=False)
# Output:
#                   Model Name  R2_Score

#   2                    Ridge  0.880593

#   0        Linear Regression  0.880345

#   5  Random Forest Regressor  0.854160

#   7    CatBoosting Regressor  0.851632

#   8       AdaBoost Regressor  0.847489

#   1                    Lasso  0.825320

#   6             XGBRegressor  0.821589

#   3    K-Neighbors Regressor  0.783813

#   4            Decision Tree  0.746197

'''
## Linear Regression
'''

lin_model = LinearRegression(fit_intercept=True)
lin_model = lin_model.fit(X_train, y_train)
y_pred = lin_model.predict(X_test)
score = r2_score(y_test, y_pred)*100
print(' Accuracy of the model is %.2f' %score)
# Output:
#    Accuracy of the model is 88.03


'''
## Plot y_pred and y_test
'''

plt.scatter(y_test,y_pred);
plt.xlabel('Actual');
plt.ylabel('Predicted');
# Output:
#   <Figure size 640x480 with 1 Axes>

sns.regplot(x=y_test,y=y_pred,ci=None,color ='red');
# Output:
#   <Figure size 640x480 with 1 Axes>

'''
#### Difference between Actual and Predicted Values
'''

pred_df=pd.DataFrame({'Actual Value':y_test,'Predicted Value':y_pred,'Difference':y_test-y_pred})
pred_df
# Output:
#        Actual Value  Predicted Value  Difference

#   521            91        76.507812   14.492188

#   737            53        58.953125   -5.953125

#   740            80        76.960938    3.039062

#   660            74        76.757812   -2.757812

#   411            84        87.539062   -3.539062

#   ..            ...              ...         ...

#   408            52        43.546875    8.453125

#   332            62        62.031250   -0.031250

#   208            74        67.976562    6.023438

#   613            65        67.132812   -2.132812

#   78             61        62.492188   -1.492188

#   

#   [200 rows x 3 columns]


================================================
File: notebook/catboost_info/catboost_training.json
================================================
{
'meta':{'test_sets':[],'test_metrics':[],'learn_metrics':[{'best_value':'Min','name':'RMSE'}],'launch_mode':'Train','parameters':'','iteration_count':1000,'learn_sets':['learn'],'name':'experiment'},
'iterations':[
{'learn':[14.59871775],'iteration':0,'passed_time':0.1440821023,'remaining_time':143.9380202},
{'learn':[14.22518863],'iteration':1,'passed_time':0.1449774932,'remaining_time':72.34376911},
{'learn':[13.8866124],'iteration':2,'passed_time':0.1458146587,'remaining_time':48.45907159},
{'learn':[13.52356875],'iteration':3,'passed_time':0.1466161397,'remaining_time':36.5074188},
{'learn':[13.18870211],'iteration':4,'passed_time':0.1475984597,'remaining_time':29.37209348},
{'learn':[12.9124226],'iteration':5,'passed_time':0.1490622897,'remaining_time':24.69465265},
{'learn':[12.60003351],'iteration':6,'passed_time':0.1499980808,'remaining_time':21.27829918},
{'learn':[12.32990573],'iteration':7,'passed_time':0.1508091095,'remaining_time':18.70032958},
{'learn':[12.0660619],'iteration':8,'passed_time':0.1515713187,'remaining_time':16.68968632},
{'learn':[11.77309809],'iteration':9,'passed_time':0.1523767533,'remaining_time':15.08529858},
{'learn':[11.49227636],'iteration':10,'passed_time':0.1531427901,'remaining_time':13.76892903},
{'learn':[11.26264833],'iteration':11,'passed_time':0.1541409755,'remaining_time':12.69094032},
{'learn':[11.04260393],'iteration':12,'passed_time':0.1553015327,'remaining_time':11.79097021},
{'learn':[10.79916926],'iteration':13,'passed_time':0.1561498967,'remaining_time':10.99741415},
{'learn':[10.5541002],'iteration':14,'passed_time':0.1569111013,'remaining_time':10.30382898},
{'learn':[10.31918115],'iteration':15,'passed_time':0.1578600362,'remaining_time':9.708392226},
{'learn':[10.10004441],'iteration':16,'passed_time':0.1587330443,'remaining_time':9.178504858},
{'learn':[9.894556723],'iteration':17,'passed_time':0.1595082727,'remaining_time':8.702062435},
{'learn':[9.690174082],'iteration':18,'passed_time':0.1602475225,'remaining_time':8.273832611},
{'learn':[9.506034866],'iteration':19,'passed_time':0.1610611316,'remaining_time':7.891995447},
{'learn':[9.338524633],'iteration':20,'passed_time':0.1619218312,'remaining_time':7.548641559},
{'learn':[9.170203312],'iteration':21,'passed_time':0.1630571668,'remaining_time':7.248632231},
{'learn':[9.010299969],'iteration':22,'passed_time':0.1640331023,'remaining_time':6.96784091},
{'learn':[8.843866678],'iteration':23,'passed_time':0.1649532943,'remaining_time':6.708100634},
{'learn':[8.690548059],'iteration':24,'passed_time':0.1657587968,'remaining_time':6.464593076},
{'learn':[8.555307687],'iteration':25,'passed_time':0.1664450284,'remaining_time':6.235286833},
{'learn':[8.413851302],'iteration':26,'passed_time':0.1671912297,'remaining_time':6.025076539},
{'learn':[8.29256019],'iteration':27,'passed_time':0.1680502372,'remaining_time':5.833743949},
{'learn':[8.162193833],'iteration':28,'passed_time':0.1689527135,'remaining_time':5.657002925},
{'learn':[8.040736294],'iteration':29,'passed_time':0.1698973916,'remaining_time':5.493348994},
{'learn':[7.921220278],'iteration':30,'passed_time':0.1706411321,'remaining_time':5.333911517},
{'learn':[7.809589039],'iteration':31,'passed_time':0.1714905268,'remaining_time':5.187588436},
{'learn':[7.699675801],'iteration':32,'passed_time':0.1722833698,'remaining_time':5.048424806},
{'learn':[7.60645267],'iteration':33,'passed_time':0.1731215995,'remaining_time':4.91869015},
{'learn':[7.498880302],'iteration':34,'passed_time':0.1739071409,'remaining_time':4.794868315},
{'learn':[7.401158744],'iteration':35,'passed_time':0.174760377,'remaining_time':4.679694541},
{'learn':[7.306431077],'iteration':36,'passed_time':0.1754759315,'remaining_time':4.567116811},
{'learn':[7.223863468],'iteration':37,'passed_time':0.176275004,'remaining_time':4.462540892},
{'learn':[7.143477682],'iteration':38,'passed_time':0.1772522899,'remaining_time':4.367678221},
{'learn':[7.062817131],'iteration':39,'passed_time':0.1782537237,'remaining_time':4.278089368},
{'learn':[6.990793435],'iteration':40,'passed_time':0.1791397666,'remaining_time':4.190122834},
{'learn':[6.931862224],'iteration':41,'passed_time':0.1798829305,'remaining_time':4.103043985},
{'learn':[6.858296558],'iteration':42,'passed_time':0.1807158964,'remaining_time':4.02197937},
{'learn':[6.786268161],'iteration':43,'passed_time':0.1815135464,'remaining_time':3.943794325},
{'learn':[6.717118549],'iteration':44,'passed_time':0.1822529265,'remaining_time':3.867812106},
{'learn':[6.652948106],'iteration':45,'passed_time':0.1830211388,'remaining_time':3.795699271},
{'learn':[6.589686076],'iteration':46,'passed_time':0.1842980039,'remaining_time':3.736936121},
{'learn':[6.531283097],'iteration':47,'passed_time':0.1854071509,'remaining_time':3.677241827},
{'learn':[6.471368031],'iteration':48,'passed_time':0.1863044418,'remaining_time':3.615827024},
{'learn':[6.416481395],'iteration':49,'passed_time':0.1871590386,'remaining_time':3.556021734},
{'learn':[6.369870822],'iteration':50,'passed_time':0.1879178483,'remaining_time':3.496745844},
{'learn':[6.325678067],'iteration':51,'passed_time':0.1886890484,'remaining_time':3.439946497},
{'learn':[6.275766122],'iteration':52,'passed_time':0.1895838212,'remaining_time':3.387469409},
{'learn':[6.224773967],'iteration':53,'passed_time':0.1905011252,'remaining_time':3.337297489},
{'learn':[6.182249254],'iteration':54,'passed_time':0.1913680212,'remaining_time':3.288050547},
{'learn':[6.139904173],'iteration':55,'passed_time':0.1923981178,'remaining_time':3.243282557},
{'learn':[6.100525536],'iteration':56,'passed_time':0.1935788436,'remaining_time':3.20254122},
{'learn':[6.062568564],'iteration':57,'passed_time':0.1943862526,'remaining_time':3.157100862},
{'learn':[6.030559288],'iteration':58,'passed_time':0.1951774761,'remaining_time':3.112915339},
{'learn':[5.997931376],'iteration':59,'passed_time':0.196000924,'remaining_time':3.070681143},
{'learn':[5.964103835],'iteration':60,'passed_time':0.1967886671,'remaining_time':3.029255055},
{'learn':[5.933729724],'iteration':61,'passed_time':0.1976125895,'remaining_time':2.989687242},
{'learn':[5.901932711],'iteration':62,'passed_time':0.1985845249,'remaining_time':2.953550791},
{'learn':[5.873727795],'iteration':63,'passed_time':0.1993955378,'remaining_time':2.916159741},
{'learn':[5.846485734],'iteration':64,'passed_time':0.2003544241,'remaining_time':2.882021332},
{'learn':[5.820630862],'iteration':65,'passed_time':0.2011630557,'remaining_time':2.846762031},
{'learn':[5.793646238],'iteration':66,'passed_time':0.2019636915,'remaining_time':2.812419764},
{'learn':[5.765388646],'iteration':67,'passed_time':0.2027418407,'remaining_time':2.778755816},
{'learn':[5.747073912],'iteration':68,'passed_time':0.2035429532,'remaining_time':2.746354919},
{'learn':[5.722315217],'iteration':69,'passed_time':0.2042978944,'remaining_time':2.714243454},
{'learn':[5.699970599],'iteration':70,'passed_time':0.2050382963,'remaining_time':2.682825031},
{'learn':[5.682732647],'iteration':71,'passed_time':0.2059869514,'remaining_time':2.654942929},
{'learn':[5.663525791],'iteration':72,'passed_time':0.2069525023,'remaining_time':2.628013282},
{'learn':[5.642381613],'iteration':73,'passed_time':0.207917271,'remaining_time':2.60177558},
{'learn':[5.621404779],'iteration':74,'passed_time':0.2089065981,'remaining_time':2.57651471},
{'learn':[5.602460129],'iteration':75,'passed_time':0.2097623658,'remaining_time':2.550268763},
{'learn':[5.587337574],'iteration':76,'passed_time':0.2105559853,'remaining_time':2.52393733},
{'learn':[5.572393026],'iteration':77,'passed_time':0.2113820887,'remaining_time':2.498644689},
{'learn':[5.558425806],'iteration':78,'passed_time':0.2123351473,'remaining_time':2.475451528},
{'learn':[5.541518902],'iteration':79,'passed_time':0.2131928525,'remaining_time':2.451717804},
{'learn':[5.526157283],'iteration':80,'passed_time':0.2141845933,'remaining_time':2.430069646},
{'learn':[5.511746977],'iteration':81,'passed_time':0.2150342536,'remaining_time':2.407334693},
{'learn':[5.504975022],'iteration':82,'passed_time':0.2154961329,'remaining_time':2.380842818},
{'learn':[5.493980522],'iteration':83,'passed_time':0.2163293969,'remaining_time':2.359020566},
{'learn':[5.480745463],'iteration':84,'passed_time':0.2171310374,'remaining_time':2.337351755},
{'learn':[5.464052013],'iteration':85,'passed_time':0.2179131055,'remaining_time':2.315960215},
{'learn':[5.449143727],'iteration':86,'passed_time':0.2187608747,'remaining_time':2.295731937},
{'learn':[5.438255432],'iteration':87,'passed_time':0.2195826617,'remaining_time':2.275674858},
{'learn':[5.425927931],'iteration':88,'passed_time':0.220437413,'remaining_time':2.256387452},
{'learn':[5.412331217],'iteration':89,'passed_time':0.2212222489,'remaining_time':2.236802739},
{'learn':[5.400691499],'iteration':90,'passed_time':0.2222991416,'remaining_time':2.220548568},
{'learn':[5.391618744],'iteration':91,'passed_time':0.2232656064,'remaining_time':2.203534463},
{'learn':[5.380766572],'iteration':92,'passed_time':0.2241733165,'remaining_time':2.186292452},
{'learn':[5.372207183],'iteration':93,'passed_time':0.2249796667,'remaining_time':2.168421043},
{'learn':[5.362918837],'iteration':94,'passed_time':0.2258805886,'remaining_time':2.151809818},
{'learn':[5.348292324],'iteration':95,'passed_time':0.2267121377,'remaining_time':2.13487263},
{'learn':[5.339772295],'iteration':96,'passed_time':0.2275364606,'remaining_time':2.118200247},
{'learn':[5.331515983],'iteration':97,'passed_time':0.2283834736,'remaining_time':2.102060134},
{'learn':[5.323861644],'iteration':98,'passed_time':0.2292207837,'remaining_time':2.086140667},
{'learn':[5.313277281],'iteration':99,'passed_time':0.2300360339,'remaining_time':2.070324305},
{'learn':[5.30685627],'iteration':100,'passed_time':0.2309004867,'remaining_time':2.055242946},
{'learn':[5.29652059],'iteration':101,'passed_time':0.2317025565,'remaining_time':2.039891135},
{'learn':[5.288350766],'iteration':102,'passed_time':0.2325671691,'remaining_time':2.025366511},
{'learn':[5.27993346],'iteration':103,'passed_time':0.233379421,'remaining_time':2.010653473},
{'learn':[5.271789139],'iteration':104,'passed_time':0.2342121716,'remaining_time':1.996379939},
{'learn':[5.262684686],'iteration':105,'passed_time':0.235042256,'remaining_time':1.982337517},
{'learn':[5.251619772],'iteration':106,'passed_time':0.2358507451,'remaining_time':1.968361826},
{'learn':[5.241012171],'iteration':107,'passed_time':0.2367603222,'remaining_time':1.955464883},
{'learn':[5.232684032],'iteration':108,'passed_time':0.2377316583,'remaining_time':1.94329273},
{'learn':[5.224267141],'iteration':109,'passed_time':0.238613161,'remaining_time':1.930597394},
{'learn':[5.216324968],'iteration':110,'passed_time':0.2395629938,'remaining_time':1.918662176},
{'learn':[5.211102527],'iteration':111,'passed_time':0.2402932585,'remaining_time':1.905182264},
{'learn':[5.206364257],'iteration':112,'passed_time':0.2410744501,'remaining_time':1.892327764},
{'learn':[5.196937641],'iteration':113,'passed_time':0.2418525498,'remaining_time':1.879661045},
{'learn':[5.190746047],'iteration':114,'passed_time':0.2426187931,'remaining_time':1.867109842},
{'learn':[5.181885213],'iteration':115,'passed_time':0.2434790744,'remaining_time':1.855478463},
{'learn':[5.178293568],'iteration':116,'passed_time':0.244062333,'remaining_time':1.841940513},
{'learn':[5.170991438],'iteration':117,'passed_time':0.2448183789,'remaining_time':1.829913646},
{'learn':[5.166257212],'iteration':118,'passed_time':0.245630153,'remaining_time':1.81848878},
{'learn':[5.161421246],'iteration':119,'passed_time':0.2463556659,'remaining_time':1.806608217},
{'learn':[5.158223542],'iteration':120,'passed_time':0.2470689198,'remaining_time':1.794822979},
{'learn':[5.15470988],'iteration':121,'passed_time':0.2476839792,'remaining_time':1.782512571},
{'learn':[5.146388143],'iteration':122,'passed_time':0.2484703512,'remaining_time':1.771613805},
{'learn':[5.139529364],'iteration':123,'passed_time':0.2492244807,'remaining_time':1.760650364},
{'learn':[5.134276023],'iteration':124,'passed_time':0.249934764,'remaining_time':1.749543348},
{'learn':[5.128536065],'iteration':125,'passed_time':0.2507014138,'remaining_time':1.738992347},
{'learn':[5.123300353],'iteration':126,'passed_time':0.2514115803,'remaining_time':1.728207162},
{'learn':[5.116200518],'iteration':127,'passed_time':0.2524941294,'remaining_time':1.720116257},
{'learn':[5.108728704],'iteration':128,'passed_time':0.2537061277,'remaining_time':1.71300804},
{'learn':[5.104075866],'iteration':129,'passed_time':0.2544288199,'remaining_time':1.702715948},
{'learn':[5.100317606],'iteration':130,'passed_time':0.2551699558,'remaining_time':1.692692302},
{'learn':[5.095814182],'iteration':131,'passed_time':0.2559067018,'remaining_time':1.682780433},
{'learn':[5.092146915],'iteration':132,'passed_time':0.2566703376,'remaining_time':1.673181825},
{'learn':[5.085258329],'iteration':133,'passed_time':0.2574261143,'remaining_time':1.663664291},
{'learn':[5.079219421],'iteration':134,'passed_time':0.2581163418,'remaining_time':1.65385656},
{'learn':[5.076476829],'iteration':135,'passed_time':0.2588835837,'remaining_time':1.644672179},
{'learn':[5.072133867],'iteration':136,'passed_time':0.2595827614,'remaining_time':1.635181921},
{'learn':[5.067031564],'iteration':137,'passed_time':0.2602938767,'remaining_time':1.625893636},
{'learn':[5.061358312],'iteration':138,'passed_time':0.2609955711,'remaining_time':1.616670408},
{'learn':[5.056759124],'iteration':139,'passed_time':0.2617344222,'remaining_time':1.607797165},
{'learn':[5.050254],'iteration':140,'passed_time':0.2624618177,'remaining_time':1.598969513},
{'learn':[5.048376474],'iteration':141,'passed_time':0.2629305524,'remaining_time':1.588693056},
{'learn':[5.042603751],'iteration':142,'passed_time':0.2636385558,'remaining_time':1.579987708},
{'learn':[5.037477349],'iteration':143,'passed_time':0.2643679414,'remaining_time':1.571520541},
{'learn':[5.03230489],'iteration':144,'passed_time':0.2650519557,'remaining_time':1.562892566},
{'learn':[5.025976187],'iteration':145,'passed_time':0.265760168,'remaining_time':1.554514956},
{'learn':[5.01952451],'iteration':146,'passed_time':0.2667787119,'remaining_time':1.548042458},
{'learn':[5.017569424],'iteration':147,'passed_time':0.2678874762,'remaining_time':1.542163039},
{'learn':[5.008962367],'iteration':148,'passed_time':0.2687799392,'remaining_time':1.53511227},
{'learn':[5.003880266],'iteration':149,'passed_time':0.2695682907,'remaining_time':1.527553647},
{'learn':[4.996387564],'iteration':150,'passed_time':0.2703428694,'remaining_time':1.520007259},
{'learn':[4.993361683],'iteration':151,'passed_time':0.2711378353,'remaining_time':1.512663713},
{'learn':[4.99005752],'iteration':152,'passed_time':0.271880034,'remaining_time':1.505113652},
{'learn':[4.986908764],'iteration':153,'passed_time':0.2726409537,'remaining_time':1.49775485},
{'learn':[4.985207175],'iteration':154,'passed_time':0.2733229754,'remaining_time':1.490051059},
{'learn':[4.979003494],'iteration':155,'passed_time':0.2741495395,'remaining_time':1.483219303},
{'learn':[4.973142217],'iteration':156,'passed_time':0.2749205559,'remaining_time':1.476165787},
{'learn':[4.967056696],'iteration':157,'passed_time':0.2756131537,'remaining_time':1.468773895},
{'learn':[4.961460696],'iteration':158,'passed_time':0.2763472103,'remaining_time':1.461685559},
{'learn':[4.954240363],'iteration':159,'passed_time':0.2770862201,'remaining_time':1.454702656},
{'learn':[4.952320707],'iteration':160,'passed_time':0.2775470211,'remaining_time':1.44634752},
{'learn':[4.948337777],'iteration':161,'passed_time':0.2782881175,'remaining_time':1.439539768},
{'learn':[4.943228639],'iteration':162,'passed_time':0.2790052373,'remaining_time':1.432683335},
{'learn':[4.938545759],'iteration':163,'passed_time':0.2797799111,'remaining_time':1.426195156},
{'learn':[4.935330572],'iteration':164,'passed_time':0.2805292767,'remaining_time':1.419648158},
{'learn':[4.932051543],'iteration':165,'passed_time':0.2814175387,'remaining_time':1.413868839},
{'learn':[4.928964153],'iteration':166,'passed_time':0.282365239,'remaining_time':1.408444575},
{'learn':[4.922860227],'iteration':167,'passed_time':0.2831653098,'remaining_time':1.402342487},
{'learn':[4.917668772],'iteration':168,'passed_time':0.2839127294,'remaining_time':1.396044249},
{'learn':[4.910365386],'iteration':169,'passed_time':0.2847342613,'remaining_time':1.390173158},
{'learn':[4.906457206],'iteration':170,'passed_time':0.2854846999,'remaining_time':1.384016469},
{'learn':[4.901996508],'iteration':171,'passed_time':0.2862026859,'remaining_time':1.377766418},
{'learn':[4.896816173],'iteration':172,'passed_time':0.2869773241,'remaining_time':1.371851139},
{'learn':[4.891123132],'iteration':173,'passed_time':0.2878723084,'remaining_time':1.366566245},
{'learn':[4.887630202],'iteration':174,'passed_time':0.2887876667,'remaining_time':1.361427572},
{'learn':[4.885259712],'iteration':175,'passed_time':0.2895987473,'remaining_time':1.355848681},
{'learn':[4.880659728],'iteration':176,'passed_time':0.2903385981,'remaining_time':1.349992465},
{'learn':[4.877299723],'iteration':177,'passed_time':0.2910968677,'remaining_time':1.344278793},
{'learn':[4.874038772],'iteration':178,'passed_time':0.2918187966,'remaining_time':1.33845381},
{'learn':[4.86943698],'iteration':179,'passed_time':0.2926260867,'remaining_time':1.333074395},
{'learn':[4.861268711],'iteration':180,'passed_time':0.2934324551,'remaining_time':1.32774133},
{'learn':[4.858673056],'iteration':181,'passed_time':0.2941887684,'remaining_time':1.322233036},
{'learn':[4.854036207],'iteration':182,'passed_time':0.2949479315,'remaining_time':1.316789399},
{'learn':[4.85130244],'iteration':183,'passed_time':0.2958812847,'remaining_time':1.312169176},
{'learn':[4.847510084],'iteration':184,'passed_time':0.2968868397,'remaining_time':1.307906888},
{'learn':[4.845691673],'iteration':185,'passed_time':0.2979241004,'remaining_time':1.303818375},
{'learn':[4.842058646],'iteration':186,'passed_time':0.2988046522,'remaining_time':1.299081188},
{'learn':[4.838623675],'iteration':187,'passed_time':0.2995843254,'remaining_time':1.29394932},
{'learn':[4.834602161],'iteration':188,'passed_time':0.300389237,'remaining_time':1.288971805},
{'learn':[4.830858976],'iteration':189,'passed_time':0.3011530661,'remaining_time':1.283863071},
{'learn':[4.827590511],'iteration':190,'passed_time':0.3019828902,'remaining_time':1.279079362},
{'learn':[4.822246226],'iteration':191,'passed_time':0.3028733631,'remaining_time':1.27459207},
{'learn':[4.816686395],'iteration':192,'passed_time':0.3037364989,'remaining_time':1.270027744},
{'learn':[4.814797121],'iteration':193,'passed_time':0.3044645972,'remaining_time':1.264940543},
{'learn':[4.811639392],'iteration':194,'passed_time':0.3052734496,'r"
    },
    "Multimodal-Emotion-Recognition-using-Speech-Cues-and-Facial-Expressions": {
        "description": null,
        "readme": "
================================================
File: README.md
================================================
# Multimodal Emotion Recognition System

Recognizing and understanding emotions is crucial in human-computer interaction, as it can greatly enhance decision-making and judgment. This project proposes a comprehensive emotion recognition system that focuses on analyzing candidates' expressions during behavioral interviews.

## Table of Contents
- [Introduction](#introduction)
- [Features](#features)
- [Usage](#usage)
- [Technologies Used](#technologies-used)


## Introduction
The Multimodal Emotion Recognition System aims to enhance the hiring process by analyzing candidates' emotions during behavioral interviews. It utilizes both textual data and facial images captured during interviews to analyze underlying sentiments. The system incorporates advanced deep learning techniques such as Bi-directional Long Short-Term Memory (Bi-LSTM) for textual content and Convolutional Neural Networks (CNNs) for facial expressions.

## Features
- Analyzes facial expressions and textual data from speech cues for emotion recognition.
- Utilizes Bi-LSTM and CNNs for accurate emotion analysis.
- Provides real-time analysis to interviewers through a user-friendly web interface.


## Usage
- Access the web interface by opening the provided URL. (multimodal-emotion-detection.azurewebsites.net)
- Capture candidate facial images and speech cues.
- The system will analyze emotions and provide real-time insights.



## Technologies Used
- Streamlit
- Docker
- CI/CD Pipeline
- Microsoft Azure


  ## Application can be accessed via
- https://multimodal-emotion-detection.azurewebsites.net/


================================================
File: DockerFile
================================================
FROM python:3.8
COPY . /app
WORKDIR /app
RUN apt-get update && apt-get install -y --no-install-recommends \
    libsm6 \
    libxext6 \
    ffmpeg \
    libgl1-mesa-glx \
    portaudio19-dev \
    gcc 
RUN apt-get install -y libasound2-dev libpulse-dev
RUN apt-get install -y portaudio19-dev && pip install pyaudio
RUN pip install -r requirements.txt
EXPOSE 80
ENTRYPOINT [ 'streamlit', 'run' ]
CMD [ 'app.py' ]

================================================
File: LICENSE
================================================
MIT License

Copyright (c) 2023 Parthiban Ravichandran

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the 'Software'), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


================================================
File: app.py
================================================
import streamlit as st
from src.predict_pipeline import Prediction_NLP, Prediction_CV
from streamlit_webrtc import webrtc_streamer, VideoTransformerBase, RTCConfiguration, WebRtcMode
from twilio.rest import Client
from streamlit_lottie import st_lottie
import requests
import json
import os
from dotenv import load_dotenv

# Load environment variables from the 'twilio.env' file
load_dotenv(dotenv_path='twilio.env')

prediction_nlp = Prediction_NLP()
prediction_cv = Prediction_CV()

account_sid = os.environ['TWILIO_ACCOUNT_SID']
auth_token = os.environ['TWILIO_AUTH_TOKEN']
client = Client(account_sid, auth_token)

token = client.tokens.create()


#RTC_CONFIGURATION = RTCConfiguration({'iceServers': [{'urls': ['stun:stun.l.google.com:19302']}]})
RTC_CONFIGURATION = RTCConfiguration({'iceServers': token.ice_servers})
 

class MyVideoTransformer(VideoTransformerBase):
    def transform(self, frame):
        # Perform your image processing here
        img = frame.to_ndarray(format='bgr24')
        processed_frame = prediction_cv.image_prediction(img)
        return processed_frame

## Setting up animation
def load_mic(path:str):
    with open(path, 'r') as p:
          return json.load(p)
    
load_mic=load_mic('./mic.json')    


def load_face(path:str):
    with open(path, 'r') as p:
          return json.load(p)
    
load_face=load_face('./emotion.json')    



# Set page config to a clean and minimal style with wide layout
st.set_page_config(
        layout='wide',
        page_title='Multimodal Speech and Facial Emotion Detection',
        page_icon='😃'
    )


def run_streamlit_app():
    activity = ['Home', 'Working']
    choice = st.sidebar.selectbox('Select Activity', activity)
    st.sidebar.markdown(
    '''
    - **Email**: [rparthiban729@gmail.com](mailto:rparthiban729@gmail.com)  
    - **LinkedIn**: [Parthiban Ravichandran](https://www.linkedin.com/in/parthiban-ravichandran/)
    - **GitHub**: [Parthiban-R-3997](https://github.com/Parthiban-R-3997)
    ''',
    unsafe_allow_html=True
)


    if choice == 'Home':
            
            # Set title and description with altered text size and color
            st.markdown(
                '''
                <div style='display: flex; flex-direction: column; align-items: center; justify-content: center;'>
                    <h1 style='font-size: 30px; color: blue; text-align: center;'>Multimodal emotion recognition using Speech cues 🎙️ and Facial Expressions 😃</h1>
                </div>
                ''',unsafe_allow_html=True
            )
            # Adding gaps 
            st.write('')
            st.write('')
            
            html_temp_home1 = '''<div style='background-color:#e85530;padding:10px'>
                                                <h5 style='color:white;text-align:center;'>
                                                This web application uses speech cues from which it transcribes text and also uses facial expressions to predict emotions.</h5>
                                                </div>
                                                </br>'''
            st.markdown(html_temp_home1, unsafe_allow_html=True)
            
            # Adding gaps 
            st.write('')
            st.write('')
            st.write('')
            st.write('')
            st.write('')
            st.write('')
            st.write('')
            st.write('')
            

            st.markdown('''
            <p style='font-size: 30px; line-height: 1.4; font-weight: bold; color: #eb4034;text-align: center;'>
            The application has two functionalities
            </p>''', unsafe_allow_html=True)

            st.write('')
            st.write('')
            st.write('')
            st.write('')
            st.write('')

            
            col1, col2 = st.columns(2)
            with col1:
             st_lottie(load_mic)
             st.write('')
             st.write('')
             st.markdown('''
                <ul style='font-size: 25px; line-height: 1.2;font-weight: bold; color: #7611fa;'>
                    Detects text from speech cues and predicts emotions using Bi-LSTM 
                </ul>''', unsafe_allow_html=True)
            with col2:
             st_lottie(load_face)
             st.write('')
             st.write('')
             st.markdown('''
                <ul style='font-size: 25px; line-height: 1.2;font-weight: bold; color: #eb0250;'>
                    Detects real-time facial emotion recognition using Mediapipe and OpenCV 
                </ul>''', unsafe_allow_html=True)

        

    elif choice == 'Working':  

                # Set title and description with altered text size and color
                st.markdown(
                '''
                <div style='display: flex; flex-direction: column; align-items: center; justify-content: center;'>
                    <h1 style='font-size: 30px; color: blue; text-align: center;'>Predicting emotions using NLP 🎙️ and CV techniques 😃</h1>
                </div>
                ''',unsafe_allow_html=True
               )  
                        
                # Create a column layout with wider columns
                col1, col2 = st.columns(2)

                # Set the CSS property for the width of the columns
                col1.markdown(
                    f'<style>div.row-widget:nth-child(1) div[role='main'] .element-container {{ width: 600px; }}</style>',
                    unsafe_allow_html=True
                )
                col2.markdown(
                    f'<style>div.row-widget:nth-child(2) div[role='main'] .element-container {{ width: 600px; }}</style>',
                    unsafe_allow_html=True
                )

                # Create a microphone button in the left column for audio processing
                with col1:
                    st.write('')
                    st.write('')
                    st.write('')
                    st.write('')
                    prediction_nlp.AudioRecorderApp()

                # Create a camera button in the right column for video processing
                with col2:
                    st.write('')
                    st.write('')
                    st.write('')
                    st.write('')
                    st.markdown('<h5 style='text-align: center; color: green; font-size: 20px;'>Start Video Capture 📸</h5>', unsafe_allow_html=True)
                    # Start the video stream capture
                    webrtc_streamer(
                        key='example',
                        mode=WebRtcMode.SENDRECV,
                        rtc_configuration=RTC_CONFIGURATION,
                        video_processor_factory=MyVideoTransformer
                    )

    else:
            pass

if __name__ == '__main__':
    run_streamlit_app()


================================================
File: emotion.json
================================================
{'v':'5.5.6','fr':30,'ip':0,'op':161,'w':1080,'h':1080,'nm':'Face Scan','ddd':0,'assets':[],'layers':[{'ddd':0,'ind':1,'ty':4,'nm':'Shape Layer 10','sr':1,'ks':{'o':{'a':1,'k':[{'i':{'x':[0.833],'y':[0.833]},'o':{'x':[0.167],'y':[0.167]},'t':101,'s':[56]},{'i':{'x':[0.833],'y':[0.833]},'o':{'x':[0.167],'y':[0.167]},'t':120,'s':[100]},{'t':126,'s':[0]}],'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':1,'k':[{'i':{'x':0.833,'y':0.833},'o':{'x':0.167,'y':0.167},'t':40,'s':[539,728,0],'to':[-0.333,-22.667,0],'ti':[0.333,51.667,0]},{'i':{'x':0.833,'y':0.833},'o':{'x':0.167,'y':0.167},'t':50,'s':[537,592,0],'to':[-0.333,-51.667,0],'ti':[0,7.333,0]},{'i':{'x':0.833,'y':0.833},'o':{'x':0.167,'y':0.167},'t':67,'s':[537,418,0],'to':[0,-7.333,0],'ti':[0,23,0]},{'i':{'x':0.833,'y':0.833},'o':{'x':0.167,'y':0.167},'t':84,'s':[537,548,0],'to':[0,-23,0],'ti':[0,-29.833,0]},{'i':{'x':0.833,'y':0.833},'o':{'x':0.167,'y':0.167},'t':101,'s':[537,280,0],'to':[0,29.833,0],'ti':[0,-74.5,0]},{'t':120,'s':[537,727,0]}],'ix':2},'a':{'a':0,'k':[-5,188,0],'ix':1},'s':{'a':1,'k':[{'i':{'x':[0.833,0.833,0.833],'y':[0.833,0.833,0.833]},'o':{'x':[0.167,0.167,0.167],'y':[0.167,0.167,0.167]},'t':40,'s':[100,100,100]},{'i':{'x':[0.833,0.833,0.833],'y':[0.833,0.833,0.833]},'o':{'x':[0.167,0.167,0.167],'y':[0.167,0.167,0.167]},'t':50,'s':[91,91,100]},{'i':{'x':[0.833,0.833,0.833],'y':[0.833,0.833,0.833]},'o':{'x':[0.167,0.167,0.167],'y':[0.167,0.167,0.167]},'t':67,'s':[100,100,100]},{'i':{'x':[0.833,0.833,0.833],'y':[0.833,0.833,0.833]},'o':{'x':[0.167,0.167,0.167],'y':[0.167,0.167,0.167]},'t':84,'s':[91,91,100]},{'t':101,'s':[100,100,100]}],'ix':6}},'ao':0,'shapes':[{'ty':'gr','it':[{'ty':'rc','d':1,'s':{'a':0,'k':[466.844,25.008],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'r':{'a':0,'k':41,'ix':4},'nm':'Rectangle Path 1','mn':'ADBE Vector Shape - Rect','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[-5.523,187.012],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Rectangle 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'tm','s':{'a':0,'k':0,'ix':1},'e':{'a':1,'k':[{'i':{'x':[0.833],'y':[0.833]},'o':{'x':[0.167],'y':[0.167]},'t':30,'s':[0]},{'t':40,'s':[100]}],'ix':2},'o':{'a':0,'k':0,'ix':3},'m':1,'ix':2,'nm':'Trim Paths 1','mn':'ADBE Vector Filter - Trim','hd':false}],'ip':0,'op':300,'st':0,'bm':0},{'ddd':0,'ind':2,'ty':4,'nm':'Shape Layer 7','sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[540,506,0],'ix':2},'a':{'a':0,'k':[0,0,0],'ix':1},'s':{'a':1,'k':[{'i':{'x':[0.717,0.717,0.833],'y':[0.992,0.992,-8.921]},'o':{'x':[0.06,0.06,0.167],'y':[0.639,0.639,20]},'t':18,'s':[0,0,100]},{'i':{'x':[0.9,0.9,0.833],'y':[0.697,0.697,10.167]},'o':{'x':[0.746,0.746,0.167],'y':[-0.056,-0.056,5.952]},'t':25.5,'s':[124.17,124.17,100]},{'i':{'x':[0.9,0.9,0.833],'y':[1,1,1]},'o':{'x':[0,0,0],'y':[0,0,0]},'t':30,'s':[94.957,94.957,100]},{'i':{'x':[0.855,0.855,0.855],'y':[1,1,1]},'o':{'x':[0,0,0],'y':[0,0,0]},'t':40,'s':[94.957,94.957,100]},{'i':{'x':[0.833,0.833,0.833],'y':[1,1,1]},'o':{'x':[0.167,0.167,0.167],'y':[0,0,0]},'t':50,'s':[83.957,83.957,100]},{'i':{'x':[0.833,0.833,0.833],'y':[1,1,1]},'o':{'x':[0.167,0.167,0.167],'y':[0,0,0]},'t':67.001,'s':[95,95,100]},{'i':{'x':[0.833,0.833,0.833],'y':[1,1,1]},'o':{'x':[0.167,0.167,0.167],'y':[0,0,0]},'t':83.999,'s':[83.957,83.957,100]},{'i':{'x':[0.833,0.833,0.833],'y':[1,1,1]},'o':{'x':[0.167,0.167,0.167],'y':[0,0,0]},'t':101,'s':[95,95,100]},{'i':{'x':[0.833,0.833,0.833],'y':[1,1,1]},'o':{'x':[0.167,0.167,0.167],'y':[0,0,0]},'t':142,'s':[95,95,100]},{'t':149,'s':[0,0,100]}],'ix':6}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[-0.75,0],[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0.75,0],[0,0],[0,0],[0,0],[0,0]],'v':[[-291.25,-293.75],[-291.25,-165],[-275,-165],[-274.75,-276.25],[-162.25,-277],[-162.25,-293.5]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 2','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[-223.793,223.023],'ix':2},'a':{'a':0,'k':[-223.564,-224.502],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':270.399,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 4','np':4,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[-0.75,0],[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0.75,0],[0,0],[0,0],[0,0],[0,0]],'v':[[-291.25,-293.75],[-291.25,-165],[-275,-165],[-274.75,-276.25],[-162.25,-277],[-162.25,-293.5]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 2','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[224.207,222.023],'ix':2},'a':{'a':0,'k':[-223.564,-224.502],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':180.303,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 3','np':4,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[-0.75,0],[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0.75,0],[0,0],[0,0],[0,0],[0,0]],'v':[[-291.25,-293.75],[-291.25,-165],[-275,-165],[-274.75,-276.25],[-162.25,-277],[-162.25,-293.5]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 2','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[223.707,-225.477],'ix':2},'a':{'a':0,'k':[-223.564,-224.502],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':90.225,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 2','np':4,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[-0.75,0],[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0.75,0],[0,0],[0,0],[0,0],[0,0]],'v':[[-291.25,-293.75],[-291.25,-165],[-275,-165],[-274.75,-276.25],[-162.25,-277],[-162.25,-293.5]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 2','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':4,'cix':2,'bm':0,'ix':4,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':300,'st':0,'bm':0},{'ddd':0,'ind':3,'ty':4,'nm':'Shape Layer 6','sr':1,'ks':{'o':{'a':1,'k':[{'i':{'x':[0.833],'y':[0.833]},'o':{'x':[0.167],'y':[0.167]},'t':101,'s':[1]},{'i':{'x':[0.833],'y':[0.833]},'o':{'x':[0.167],'y':[0.167]},'t':126,'s':[100]},{'i':{'x':[0.833],'y':[0.833]},'o':{'x':[0.167],'y':[0.167]},'t':142,'s':[100]},{'t':149,'s':[0]}],'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[540,540,0],'ix':2},'a':{'a':0,'k':[0,0,0],'ix':1},'s':{'a':0,'k':[100,100,100],'ix':6}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0]],'o':[[0,0],[0,0]],'v':[[-70,-41.5],[9.5,-133]],'c':false},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'st','c':{'a':0,'k':[1,1,1,1],'ix':3},'o':{'a':0,'k':100,'ix':4},'w':{'a':0,'k':3,'ix':5},'lc':1,'lj':1,'ml':4,'bm':0,'nm':'Stroke 1','mn':'ADBE Vector Graphic - Stroke','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 4','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[89,-41.5],[10,66],[140.5,109],[11.5,202]],'c':false},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'st','c':{'a':0,'k':[1,1,1,1],'ix':3},'o':{'a':0,'k':100,'ix':4},'w':{'a':0,'k':3,'ix':5},'lc':1,'lj':1,'ml':4,'bm':0,'nm':'Stroke 1','mn':'ADBE Vector Graphic - Stroke','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 3','np':3,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0],[0,0]],'v':[[202,-46.5],[89.5,-42],[194,-190],[10,-133.5],[90.5,-243]],'c':false},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'st','c':{'a':0,'k':[1,1,1,1],'ix':3},'o':{'a':0,'k':100,'ix':4},'w':{'a':0,'k':3,'ix':5},'lc':1,'lj':1,'ml':4,'bm':0,'nm':'Stroke 1','mn':'ADBE Vector Graphic - Stroke','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 2','np':3,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],'v':[[-73,-243],[10,-132],[89,-42],[139,110],[210,-50],[192.5,-190.5],[90.5,-243.5],[-72,-244],[-175,-185.5],[-191,-50],[-123.5,105.5],[8.5,202.5],[9,65],[-123,106],[-70,-42.5],[8.5,65.5],[10,-133.5],[-174.5,-185],[-70,-42.75],[-190.5,-50]],'c':false},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'st','c':{'a':0,'k':[1,1,1,1],'ix':3},'o':{'a':0,'k':100,'ix':4},'w':{'a':0,'k':3,'ix':5},'lc':1,'lj':1,'ml':4,'bm':0,'nm':'Stroke 1','mn':'ADBE Vector Graphic - Stroke','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':4,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'st','c':{'a':0,'k':[1,1,1,1],'ix':3},'o':{'a':0,'k':100,'ix':4},'w':{'a':0,'k':3,'ix':5},'lc':1,'lj':1,'ml':4,'bm':0,'nm':'Stroke 1','mn':'ADBE Vector Graphic - Stroke','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[8.866,202.856],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 13','np':3,'cix':2,'bm':0,'ix':5,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[143.114,105.97],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 12','np':3,'cix':2,'bm':0,'ix':6,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[8.376,66.204],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 11','np':3,'cix':2,'bm':0,'ix':7,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[-122.845,106.69],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 10','np':3,'cix':2,'bm':0,'ix':8,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[-191.739,-46.798],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 9','np':3,'cix':2,'bm':0,'ix':9,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[-69.821,-41.808],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 8','np':3,'cix':2,'bm':0,'ix':10,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[88.776,-41.562],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 7','np':3,'cix':2,'bm':0,'ix':11,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[211.163,-47.374],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 6','np':3,'cix':2,'bm':0,'ix':12,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[193.011,-187.747],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 5','np':3,'cix':2,'bm':0,'ix':13,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[92.198,-243.386],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 4','np':3,'cix':2,'bm':0,'ix':14,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[9.522,-133.731],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 3','np':3,'cix':2,'bm':0,'ix':15,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[-72.014,-242.744],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 2','np':3,'cix':2,'bm':0,'ix':16,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'d':1,'ty':'el','s':{'a':0,'k':[23.469,23.469],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'nm':'Ellipse Path 1','mn':'ADBE Vector Shape - Ellipse','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[-174.176,-187.343],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Ellipse 1','np':3,'cix':2,'bm':0,'ix':17,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':300,'st':0,'bm':0},{'ddd':0,'ind':4,'ty':4,'nm':'Shape Layer 5','parent':9,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[0,-6,0],'ix':2},'a':{'a':0,'k':[0,0,0],'ix':1},'s':{'a':0,'k':[100,100,100],'ix':6}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[113.5,-14.5],[0,0],[-9.5,-1.5],[-22.75,3.5],[-51.75,0.5],[-16,-7.75],[-1,-28.5],[-13.75,-15.5],[-1.75,-4.75],[0,0],[1,13],[9.25,15.25],[1.25,2.5],[0.25,29.75],[7,3.5]],'o':[[-101,24.5],[0,0],[29.25,2.75],[22.5,-6.5],[51.75,-0.5],[37.25,14.5],[2.25,31],[13.75,15.5],[1.75,4.75],[0,0],[1.25,-11.25],[-13.25,-8.75],[-1.25,-2.5],[-3.5,-28],[-7,-3.5]],'v':[[38.5,-420],[-114.5,-400.5],[-104.25,-398.75],[-0.75,-405.5],[99.5,-415.75],[182.25,-403.25],[221.75,-329],[251.25,-270.25],[268.5,-235.75],[271.25,-188.75],[272.25,-229.75],[257.75,-271],[232,-310.5],[227.5,-362],[178.5,-414.5]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.13333333333333333,0.3411764705882353,0.49411764705882355,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 2','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[81,-3],[0,0],[64.5,44],[20.5,-37.5],[-15.5,-64],[1.5,-8.5],[-42,-78],[-10,2],[0,0],[-44.75,62.5],[-2,8],[-24.75,-10.75],[-19.75,-4.25],[-13,-27.75],[-6.25,-38.75],[-34.25,7.75],[-2,-9.5],[-4.5,30],[59,79.5],[0,0]],'o':[[-78.5,6.5],[0,0],[-66.5,-27],[-20.5,37.5],[11.5,65],[0,11.5],[11.5,-26.5],[10,-2],[0,0],[42.5,-44.5],[11.25,10.5],[22.5,12],[19.75,7],[10,15],[9.25,-30.75],[36.75,4],[10.75,-16.25],[10,-26],[-12.5,-10.5],[0,0]],'v':[[137,-494.5],[19.5,-471.5],[-119.5,-481],[-259,-426.5],[-272,-297.5],[-266.5,-234],[-236.5,-73],[-202.5,-108.5],[-196,-108.5],[-157.5,-212],[-107.75,-284.75],[-27.5,-226.5],[44.5,-195],[147.75,-142.25],[187.25,-45.75],[244.5,-109],[287.25,-59.25],[336.5,-156],[323,-334],[265.5,-395]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.043137254902,0.176470588235,0.305882352941,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':300,'st':0,'bm':0},{'ddd':0,'ind':5,'ty':4,'nm':'Shape Layer 8','parent':9,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[0,-6,0],'ix':2},'a':{'a':0,'k':[0,0,0],'ix':1},'s':{'a':0,'k':[100,100,100],'ix':6}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[3.5,65.5],[0,0],[0,0],[42,22.5],[13,-3.5],[2,-0.5],[0,0],[17.5,10.5],[82.5,-86],[-7,-12.5],[0,0]],'o':[[0,0],[-3,-55.5],[0,0],[0,0],[-42,-22.5],[-13,3.5],[-2,0.5],[0,0],[-17.5,-10.5],[-66.5,93],[7,12.5],[0,0]],'v':[[328,-153],[371,-265.5],[306.5,-341],[262.5,-389.5],[202,-490],[104.5,-506],[54.5,-489],[-24.5,-453],[-114,-480.5],[-276.5,-451],[-261,-258.5],[-248,-218.5]],'c':false},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'st','c':{'a':0,'k':[0.043137254902,0.176470588235,0.305882352941,1],'ix':3},'o':{'a':0,'k':100,'ix':4},'w':{'a':0,'k':3,'ix':5},'lc':1,'lj':1,'ml':4,'bm':0,'nm':'Stroke 1','mn':'ADBE Vector Graphic - Stroke','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':300,'st':0,'bm':0},{'ddd':0,'ind':6,'ty':4,'nm':'Shape Layer 4','parent':9,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[0,-6,0],'ix':2},'a':{'a':0,'k':[0,0,0],'ix':1},'s':{'a':0,'k':[100,100,100],'ix':6}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[-7.5,-16.5],[-7.75,7.25],[-26.25,29.75],[-31,-12.75],[-42.25,-21.75],[0,0],[0,0],[21,21],[55,22.5]],'o':[[0,0],[0,0],[0,0],[7.5,-24],[7,-3],[24.25,47.25],[33.75,5],[43,23],[0,0],[0,0],[-21,-21],[-55,-22.5]],'v':[[-108,-284.5],[-162.5,-238.5],[-206,-150.5],[-196,-111.5],[-145.25,-184.75],[-92,-235.75],[-4.25,-180.25],[103,-144.5],[187.125,-38],[190,-51.5],[141,-155.5],[-0.5,-213]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.898039215686,0.470588235294,0.360784313725,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 2','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[24,42],[12.5,-9],[11,-34],[5.5,-45],[-35.5,-13.5],[0,0],[-65,-49.5],[-38,36],[-14.5,47.5],[-35.5,54],[9.5,37.5],[6,-1],[11,-53.5],[34.5,21.5],[48.5,8.5]],'o':[[-31.5,33.5],[-10,10.5],[-14.5,1.5],[-5,47],[32,10],[0,0],[65,49.5],[38,-36],[6.25,1.75],[10.5,-22.5],[-13,-53],[-15,6.5],[-24.5,-46],[-36,-18],[-48.5,-17]],'v':[[-92,-235],[-144.5,-184.5],[-196.5,-109.5],[-239,-52.5],[-182.5,56.5],[-169,60.5],[-72,194.5],[116,180.5],[196,58],[272.5,19],[286,-64],[236.5,-107.5],[187,-38],[103,-145],[-4,-180.5]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.972549019608,0.63137254902,0.478431372549,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':300,'st':0,'bm':0},{'ddd':0,'ind':7,'ty':4,'nm':'Shape Layer 3','parent':9,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[0,-6,0],'ix':2},'a':{'a':0,'k':[0,0,0],'ix':1},'s':{'a':0,'k':[100,100,100],'ix':6}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[108.368,45.154],[0,0],[-139.811,55.924],[0,0]],'o':[[-1.5,-0.625],[0,0],[2.5,-1],[0,0]],'v':[[-98,173.5],[-102,209],[120.5,216],[117,179.5]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.898039215686,0.470588235294,0.360784313725,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':300,'st':0,'bm':0},{'ddd':0,'ind':8,'ty':4,'nm':'Shape Layer 2','parent':9,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[0,-6,0],'ix':2},'a':{'a':0,'k':[0,0,0],'ix':1},'s':{'a':0,'k':[100,100,100],'ix':6}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-4.5,-17.5],[10.5,-17.5],[4,-12.5],[-25,-14.5],[-22,6.5],[-3.5,10],[3,5.5],[6.5,25.5]],'o':[[4.5,17.5],[-10.5,17.5],[-12.436,38.863],[68.465,39.71],[61.175,-18.074],[6.012,-17.178],[-27.421,-50.273],[-6.5,-25.5]],'v':[[-99,170.5],[-117.5,254.5],[-142,306.5],[-95.5,392],[70.5,407],[150.5,334],[142.5,271.5],[117,180]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.972549019608,0.63137254902,0.478431372549,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':300,'st':0,'bm':0},{'ddd':0,'ind':9,'ty':4,'nm':'Shape Layer 1','sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[536,1110,0],'ix':2},'a':{'a':0,'k':[-4,564,0],'ix':1},'s':{'a':1,'k':[{'i':{'x':[0.52,0.52,0.833],'y':[0.979,0.979,-11.037]},'o':{'x':[0.12,0.12,0.167],'y':[0.234,0.234,16.807]},'t':0,'s':[0,0,100]},{'i':{'x':[0.94,0.94,0.833],'y':[0.799,0.799,1.14]},'o':{'x':[1,1,0.167],'y':[-0.099,-0.099,4.63]},'t':13,'s':[120,120,100]},{'i':{'x':[0.833,0.833,0.833],'y':[1,1,1]},'o':{'x':[0,0,0],'y':[0,0,0]},'t':18,'s':[100,100,100]},{'i':{'x':[0.52,0.52,0.833],'y':[1,1,1]},'o':{'x':[0.167,0.167,0.167],'y':[0,0,0]},'t':142,'s':[100,100,100]},{'i':{'x':[1,1,1],'y':[1,1,1]},'o':{'x':[1,1,0.167],'y':[0,0,0]},'t':155,'s':[120,120,100]},{'t':161,'s':[0,0,100]}],'ix':6}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[243,-10],[0,0],[-3,42],[6,1]],'o':[[-243,10],[0,0],[16.887,-236.417],[-6,-1]],'v':[[-165,271],[-387,544],[400,563],[245,280]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.3333333333333333,0.5176470588235295,0.6745098039215687,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 2','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[298,-18],[0,0],[9,18],[0,0]],'o':[[-288.481,17.425],[0,0],[-104.615,-209.231],[0,0]],'v':[[-194,274],[-548,532],[554,533],[305,288]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.3333333333333333,0.5176470588235295,0.6745098039215687,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':300,'st':0,'bm':0},{'ddd':0,'ind':10,'ty':4,'nm':'Shape Layer 9','sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[540,512,0],'ix':2},'a':{'a':0,'k':[0,0,0],'ix':1},'s':{'a':0,'k':[100,107.269,100],'ix':6}},'ao':0,'shapes':[{'ty':'gr','it':[{'ty':'rc','d':1,'s':{'a':0,'k':[1106.719,1170.695],'ix':2},'p':{'a':0,'k':[0,0],'ix':3},'r':{'a':0,'k':0,'ix':4},'nm':'Rectangle Path 1','mn':'ADBE Vector Shape - Rect','hd':false},{'ty':'st','c':{'a':0,'k':[0.043137254902,0.176470588235,0.305882352941,1],'ix':3},'o':{'a':0,'k':100,'ix':4},'w':{'a':0,'k':3,'ix':5},'lc':1,'lj':1,'ml':4,'bm':0,'nm':'Stroke 1','mn':'ADBE Vector Graphic - Stroke','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[3.359,27.348],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[99.355,87.503],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Rectangle 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':300,'st':0,'bm':0}],'markers':[]}

================================================
File: mic.json
================================================
{'v':'5.7.8','fr':30,'ip':0,'op':180,'w':875,'h':897,'nm':'11684809','ddd':0,'assets':[],'layers':[{'ddd':0,'ind':1,'ty':4,'nm':'Shape Layer 4','parent':7,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':-11,'ix':10},'p':{'a':0,'k':[117.437,-144.896,0],'ix':2,'l':2},'a':{'a':0,'k':[89.011,-148.153,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':90,'s':[{'i':[[8.625,-1.125],[0,0],[-0.842,-3.75],[-8.923,1.584],[0.555,2.066]],'o':[[-18.525,2.416],[0,0],[-3.416,-15.278],[13.768,-2.444],[-1.477,-5.497]],'v':[[89.75,-161],[68.875,-144.058],[69.61,-138.281],[89.405,-160.989],[110.894,-145.738]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':100,'s':[{'i':[[8.625,-1.125],[0,0],[-2,-3.375],[-8.649,2.706],[0.049,2.139]],'o':[[-18.525,2.416],[0,0],[2,3.375],[8.116,-2.539],[-0.125,-5.5]],'v':[[89.75,-161],[69.571,-142.431],[71.061,-137.12],[96.739,-135.064],[110.886,-144.948]],'c':true}]},{'t':110,'s':[{'i':[[8.625,-1.125],[0,0],[-0.842,-3.75],[-8.923,1.584],[0.555,2.066]],'o':[[-18.525,2.416],[0,0],[-3.416,-15.278],[13.768,-2.444],[-1.477,-5.497]],'v':[[89.75,-161],[68.875,-144.058],[69.61,-138.281],[89.405,-160.989],[110.894,-145.738]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.89019613827,0.364705882353,0.403921598547,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':90,'op':110,'st':58,'bm':0},{'ddd':0,'ind':2,'ty':4,'nm':'Shape Layer 3','parent':7,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':-11,'ix':10},'p':{'a':0,'k':[65.227,-132.668,0],'ix':2,'l':2},'a':{'a':0,'k':[89.011,-148.153,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':90,'s':[{'i':[[8.625,-1.125],[0,0],[-2,-3.375],[-8.923,1.584],[0.049,2.139]],'o':[[-18.525,2.416],[0,0],[-6.718,-17.208],[13.768,-2.444],[-0.125,-5.5]],'v':[[89.75,-161],[73.25,-142.75],[75.25,-137],[89.405,-160.989],[104.5,-146.75]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':100,'s':[{'i':[[8.625,-1.125],[0,0],[-2,-3.375],[-8.25,3.75],[0.049,2.139]],'o':[[-18.525,2.416],[0,0],[2,3.375],[7.596,-3.453],[-0.125,-5.5]],'v':[[89.75,-161],[73.25,-142.75],[75.25,-137],[96.625,-135.5],[104.5,-146.75]],'c':true}]},{'t':110,'s':[{'i':[[8.625,-1.125],[0,0],[-2,-3.375],[-8.923,1.584],[0.049,2.139]],'o':[[-18.525,2.416],[0,0],[-6.718,-17.208],[13.768,-2.444],[-0.125,-5.5]],'v':[[89.75,-161],[73.25,-142.75],[75.25,-137],[89.405,-160.989],[104.5,-146.75]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.89019613827,0.364705882353,0.403921598547,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':90,'op':110,'st':58,'bm':0},{'ddd':0,'ind':3,'ty':4,'nm':'Shape Layer 2','parent':7,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':-11,'ix':10},'p':{'a':0,'k':[117.437,-144.896,0],'ix':2,'l':2},'a':{'a':0,'k':[89.011,-148.153,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':32,'s':[{'i':[[8.625,-1.125],[0,0],[-0.842,-3.75],[-8.923,1.584],[0.555,2.066]],'o':[[-18.525,2.416],[0,0],[-3.416,-15.278],[13.768,-2.444],[-1.477,-5.497]],'v':[[89.75,-161],[68.875,-144.058],[69.61,-138.281],[89.405,-160.989],[110.894,-145.738]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':42,'s':[{'i':[[8.625,-1.125],[0,0],[-2,-3.375],[-8.649,2.706],[0.049,2.139]],'o':[[-18.525,2.416],[0,0],[2,3.375],[8.116,-2.539],[-0.125,-5.5]],'v':[[89.75,-161],[69.571,-142.431],[71.061,-137.12],[96.739,-135.064],[110.886,-144.948]],'c':true}]},{'t':52,'s':[{'i':[[8.625,-1.125],[0,0],[-0.842,-3.75],[-8.923,1.584],[0.555,2.066]],'o':[[-18.525,2.416],[0,0],[-3.416,-15.278],[13.768,-2.444],[-1.477,-5.497]],'v':[[89.75,-161],[68.875,-144.058],[69.61,-138.281],[89.405,-160.989],[110.894,-145.738]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.89019613827,0.364705882353,0.403921598547,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':32,'op':52,'st':0,'bm':0},{'ddd':0,'ind':4,'ty':4,'nm':'Shape Layer 1','parent':7,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':-11,'ix':10},'p':{'a':0,'k':[65.227,-132.668,0],'ix':2,'l':2},'a':{'a':0,'k':[89.011,-148.153,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':32,'s':[{'i':[[8.625,-1.125],[0,0],[-2,-3.375],[-8.923,1.584],[0.049,2.139]],'o':[[-18.525,2.416],[0,0],[-6.718,-17.208],[13.768,-2.444],[-0.125,-5.5]],'v':[[89.75,-161],[73.25,-142.75],[75.25,-137],[89.405,-160.989],[104.5,-146.75]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':42,'s':[{'i':[[8.625,-1.125],[0,0],[-2,-3.375],[-8.25,3.75],[0.049,2.139]],'o':[[-18.525,2.416],[0,0],[2,3.375],[7.596,-3.453],[-0.125,-5.5]],'v':[[89.75,-161],[73.25,-142.75],[75.25,-137],[96.625,-135.5],[104.5,-146.75]],'c':true}]},{'t':52,'s':[{'i':[[8.625,-1.125],[0,0],[-2,-3.375],[-8.923,1.584],[0.049,2.139]],'o':[[-18.525,2.416],[0,0],[-6.718,-17.208],[13.768,-2.444],[-0.125,-5.5]],'v':[[89.75,-161],[73.25,-142.75],[75.25,-137],[89.405,-160.989],[104.5,-146.75]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.89019613827,0.364705882353,0.403921598547,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':32,'op':52,'st':0,'bm':0},{'ddd':0,'ind':5,'ty':4,'nm':'table','sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[421.118,563.107,0],'ix':2,'l':2},'a':{'a':0,'k':[0.118,140.107,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0],[0,0]],'v':[[-153.824,-0.216],[-263.183,150.592],[-260.673,156.964],[-256.522,160.131],[-140.245,-0.216]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.015686275437,0.1254902035,0.223529413342,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-279.758,108.526],[-267.747,139.011],[-166.784,-0.216],[-200.903,-0.216]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.015686275437,0.1254902035,0.223529413342,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-43.808,153.063],[-43.808,170.694],[80.593,170.694],[80.593,154.98]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.039215687662,0.203921571374,0.345098048449,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-263.538,170.694],[80.593,170.694],[80.593,154.98],[-263.538,149.678]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.011764706112,0.109803922474,0.203921571374,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],'v':[[-40.256,162.126],[-104.22,-0.216],[-317.872,-0.216],[-322.049,1.188],[-260.673,156.964],[-253.908,162.126],[-253.908,162.125],[-253.908,162.126]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.011764706112,0.109803922474,0.203921571374,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[424.941,183.156],[121.808,183.156],[121.808,215.559],[424.941,215.559]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.498039215803,0.352941185236,0.466666668653,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[354.5,420.647],[361.359,271.951],[299.046,271.951],[305.905,420.647]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.105882354081,0.078431375325,0.188235297799,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-231.347,420.647],[-224.488,271.951],[-286.8,271.951],[-279.942,420.647]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.105882354081,0.078431375325,0.188235297799,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-422.827,420.647],[-415.968,271.951],[-424.706,271.951],[-424.706,420.647]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.227450981736,0.164705887437,0.305882364511,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':3,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[424.941,231.76],[-424.706,231.76],[-424.706,271.951],[424.941,271.951]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.105882354081,0.078431375325,0.188235297799,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[424.941,170.694],[-424.706,170.694],[-424.706,231.76],[424.941,231.76]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.623529434204,0.498039215803,0.572549045086,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 4','np':2,'cix':2,'bm':0,'ix':4,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':4,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0.847,12.897],[0,14.5],[-0.026,28.328],[0.003,-3.594],[-3.331,-43.759],[8.155,-19.031],[11.029,-2.17],[2.949,0.174],[0,0],[-5.941,3.07],[0.279,18.135]],'o':[[-0.951,-14.475],[0.001,-28.328],[0.003,-3.589],[-0.04,43.858],[1.507,19.801],[-4.315,10.069],[-2.943,0.579],[0,0],[6.544,0.36],[17.429,-9.007],[-0.199,-12.933]],'v':[[-386.471,293.29],[-387.467,249.802],[-387.39,164.819],[-392.967,164.819],[-391.793,296.905],[-392.925,357.412],[-415.858,377.549],[-424.706,378.08],[-424.706,383.638],[-405.661,380.052],[-383.12,331.965]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.250980407,0.541176497936,0.800000011921,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-10.745,17.566],[1.872,-3.06],[-0.246,-27.489],[8.075,-30.993],[11.752,-10.233],[11.38,5.82],[3.895,7.016],[2.058,14.66],[1.433,16.588],[11.881,33.126],[-1.216,-3.39],[-3.112,-36.035],[-2.589,-16.954],[-8.492,-12.2],[-10.963,-0.223],[-7.417,9.069],[0.242,30.07],[-0.251,21.401]],'o':[[1.878,-3.07],[-14.864,24.3],[0.284,31.692],[-3.911,15.013],[-9.099,7.922],[-6.93,-3.544],[-7.305,-13.157],[-2.316,-16.495],[-3.01,-34.833],[-1.203,-3.354],[12.297,34.288],[1.475,17.08],[2.178,14.266],[6.176,8.873],[12.668,0.258],[19.986,-24.437],[-0.172,-21.401],[0.237,-20.186]],'v':[[-249.691,154.091],[-254.507,151.276],[-268.222,231.972],[-272.026,329.399],[-295.523,368.249],[-324.763,374.09],[-343.232,359.334],[-353.927,312.671],[-359.03,262.975],[-377.332,160.028],[-382.71,161.51],[-364.171,268.033],[-358.57,319.154],[-346.513,364.625],[-314.386,383.107],[-282.63,362.914],[-262.247,276.335],[-262.726,212.105]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.250980407,0.541176497936,0.800000011921,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 4','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':6,'ty':4,'nm':'mouth','parent':7,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[102.233,-91.193,0],'ix':2,'l':2},'a':{'a':0,'k':[102.233,-91.193,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'t':0,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':5,'s':[{'i':[[0.598,0.155],[6.106,-0.306],[0.048,-0.294],[-2.339,0.075],[0.523,8.665]],'o':[[-0.335,0.367],[-0.296,0.015],[1.757,0.758],[3.507,-0.112],[-2.742,5.562]],'v':[[111.434,-88.054],[103.015,-86.516],[102.77,-86.075],[107.897,-85.519],[115.858,-95.052]],'c':true}],'h':1},{'t':10,'s':[{'i':[[2.86,-3.032],[0.848,-3.474],[0.048,-0.294],[-2.33,0.213],[0.523,8.665]],'o':[[-2.454,2.601],[-0.07,0.288],[1.757,0.758],[9.671,-0.884],[-4.626,1.453]],'v':[[106.58,-87.176],[101.11,-78.088],[100.939,-77.212],[107.012,-76.305],[118.896,-96.007]],'c':true}],'h':1},{'t':15,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':20,'s':[{'i':[[0.598,0.155],[6.106,-0.306],[0.048,-0.294],[-2.339,0.075],[0.523,8.665]],'o':[[-0.335,0.367],[-0.296,0.015],[1.757,0.758],[3.507,-0.112],[-2.742,5.562]],'v':[[111.434,-88.054],[103.015,-86.516],[102.77,-86.075],[107.897,-85.519],[115.858,-95.052]],'c':true}],'h':1},{'t':25,'s':[{'i':[[2.86,-3.032],[0.848,-3.474],[0.048,-0.294],[-2.33,0.213],[0.523,8.665]],'o':[[-2.454,2.601],[-0.07,0.288],[1.757,0.758],[9.671,-0.884],[-4.626,1.453]],'v':[[106.58,-87.176],[101.11,-78.088],[100.939,-77.212],[107.012,-76.305],[118.896,-96.007]],'c':true}],'h':1},{'t':30,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':40,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':45,'s':[{'i':[[0.598,0.155],[6.106,-0.306],[0.048,-0.294],[-2.339,0.075],[0.523,8.665]],'o':[[-0.335,0.367],[-0.296,0.015],[1.757,0.758],[3.507,-0.112],[-2.742,5.562]],'v':[[111.434,-88.054],[103.015,-86.516],[102.77,-86.075],[107.897,-85.519],[115.858,-95.052]],'c':true}],'h':1},{'t':50,'s':[{'i':[[2.86,-3.032],[0.848,-3.474],[0.048,-0.294],[-2.33,0.213],[0.523,8.665]],'o':[[-2.454,2.601],[-0.07,0.288],[1.757,0.758],[9.671,-0.884],[-4.626,1.453]],'v':[[106.58,-87.176],[101.11,-78.088],[100.939,-77.212],[107.012,-76.305],[118.896,-96.007]],'c':true}],'h':1},{'t':55,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':60,'s':[{'i':[[0.598,0.155],[6.106,-0.306],[0.048,-0.294],[-2.339,0.075],[0.523,8.665]],'o':[[-0.335,0.367],[-0.296,0.015],[1.757,0.758],[3.507,-0.112],[-2.742,5.562]],'v':[[111.434,-88.054],[103.015,-86.516],[102.77,-86.075],[107.897,-85.519],[115.858,-95.052]],'c':true}],'h':1},{'t':65,'s':[{'i':[[2.86,-3.032],[0.848,-3.474],[0.048,-0.294],[-2.33,0.213],[0.523,8.665]],'o':[[-2.454,2.601],[-0.07,0.288],[1.757,0.758],[9.671,-0.884],[-4.626,1.453]],'v':[[106.58,-87.176],[101.11,-78.088],[100.939,-77.212],[107.012,-76.305],[118.896,-96.007]],'c':true}],'h':1},{'t':70,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':75,'s':[{'i':[[0.598,0.155],[6.106,-0.306],[0.048,-0.294],[-2.339,0.075],[0.523,8.665]],'o':[[-0.335,0.367],[-0.296,0.015],[1.757,0.758],[3.507,-0.112],[-2.742,5.562]],'v':[[111.434,-88.054],[103.015,-86.516],[102.77,-86.075],[107.897,-85.519],[115.858,-95.052]],'c':true}],'h':1},{'t':80,'s':[{'i':[[2.86,-3.032],[0.848,-3.474],[0.048,-0.294],[-2.33,0.213],[0.523,8.665]],'o':[[-2.454,2.601],[-0.07,0.288],[1.757,0.758],[9.671,-0.884],[-4.626,1.453]],'v':[[106.58,-87.176],[101.11,-78.088],[100.939,-77.212],[107.012,-76.305],[118.896,-96.007]],'c':true}],'h':1},{'t':85,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':90,'s':[{'i':[[0.598,0.155],[6.106,-0.306],[0.048,-0.294],[-2.339,0.075],[0.523,8.665]],'o':[[-0.335,0.367],[-0.296,0.015],[1.757,0.758],[3.507,-0.112],[-2.742,5.562]],'v':[[111.434,-88.054],[103.015,-86.516],[102.77,-86.075],[107.897,-85.519],[115.858,-95.052]],'c':true}],'h':1},{'t':95,'s':[{'i':[[2.86,-3.032],[0.848,-3.474],[0.048,-0.294],[-2.33,0.213],[0.523,8.665]],'o':[[-2.454,2.601],[-0.07,0.288],[1.757,0.758],[9.671,-0.884],[-4.626,1.453]],'v':[[106.58,-87.176],[101.11,-78.088],[100.939,-77.212],[107.012,-76.305],[118.896,-96.007]],'c':true}],'h':1},{'t':100,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':110,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':115,'s':[{'i':[[0.598,0.155],[6.106,-0.306],[0.048,-0.294],[-2.339,0.075],[0.523,8.665]],'o':[[-0.335,0.367],[-0.296,0.015],[1.757,0.758],[3.507,-0.112],[-2.742,5.562]],'v':[[111.434,-88.054],[103.015,-86.516],[102.77,-86.075],[107.897,-85.519],[115.858,-95.052]],'c':true}],'h':1},{'t':120,'s':[{'i':[[2.86,-3.032],[0.848,-3.474],[0.048,-0.294],[-2.33,0.213],[0.523,8.665]],'o':[[-2.454,2.601],[-0.07,0.288],[1.757,0.758],[9.671,-0.884],[-4.626,1.453]],'v':[[106.58,-87.176],[101.11,-78.088],[100.939,-77.212],[107.012,-76.305],[118.896,-96.007]],'c':true}],'h':1},{'t':125,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':130,'s':[{'i':[[0.598,0.155],[6.106,-0.306],[0.048,-0.294],[-2.339,0.075],[0.523,8.665]],'o':[[-0.335,0.367],[-0.296,0.015],[1.757,0.758],[3.507,-0.112],[-2.742,5.562]],'v':[[111.434,-88.054],[103.015,-86.516],[102.77,-86.075],[107.897,-85.519],[115.858,-95.052]],'c':true}],'h':1},{'t':135,'s':[{'i':[[2.86,-3.032],[0.848,-3.474],[0.048,-0.294],[-2.33,0.213],[0.523,8.665]],'o':[[-2.454,2.601],[-0.07,0.288],[1.757,0.758],[9.671,-0.884],[-4.626,1.453]],'v':[[106.58,-87.176],[101.11,-78.088],[100.939,-77.212],[107.012,-76.305],[118.896,-96.007]],'c':true}],'h':1},{'t':140,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':145,'s':[{'i':[[0.598,0.155],[6.106,-0.306],[0.048,-0.294],[-2.339,0.075],[0.523,8.665]],'o':[[-0.335,0.367],[-0.296,0.015],[1.757,0.758],[3.507,-0.112],[-2.742,5.562]],'v':[[111.434,-88.054],[103.015,-86.516],[102.77,-86.075],[107.897,-85.519],[115.858,-95.052]],'c':true}],'h':1},{'t':150,'s':[{'i':[[2.86,-3.032],[0.848,-3.474],[0.048,-0.294],[-2.33,0.213],[0.523,8.665]],'o':[[-2.454,2.601],[-0.07,0.288],[1.757,0.758],[9.671,-0.884],[-4.626,1.453]],'v':[[106.58,-87.176],[101.11,-78.088],[100.939,-77.212],[107.012,-76.305],[118.896,-96.007]],'c':true}],'h':1},{'t':155,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1},{'t':160,'s':[{'i':[[0.598,0.155],[6.106,-0.306],[0.048,-0.294],[-2.339,0.075],[0.523,8.665]],'o':[[-0.335,0.367],[-0.296,0.015],[1.757,0.758],[3.507,-0.112],[-2.742,5.562]],'v':[[111.434,-88.054],[103.015,-86.516],[102.77,-86.075],[107.897,-85.519],[115.858,-95.052]],'c':true}],'h':1},{'t':165,'s':[{'i':[[2.86,-3.032],[0.848,-3.474],[0.048,-0.294],[-2.33,0.213],[0.523,8.665]],'o':[[-2.454,2.601],[-0.07,0.288],[1.757,0.758],[9.671,-0.884],[-4.626,1.453]],'v':[[106.58,-87.176],[101.11,-78.088],[100.939,-77.212],[107.012,-76.305],[118.896,-96.007]],'c':true}],'h':1},{'t':170,'s':[{'i':[[3.069,-0.973],[0.848,-3.474],[0.048,-0.294],[-2.321,0.297],[-1.52,2.092]],'o':[[-3.409,1.081],[-0.07,0.288],[1.991,-0.133],[9.418,-1.205],[-4.428,-1.521]],'v':[[104.089,-98.74],[97.005,-93.986],[96.788,-92.483],[103.679,-93.787],[116.485,-99.758]],'c':true}],'h':1}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.976470589638,0.329411774874,0.411764711142,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'t':0,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':5,'s':[{'i':[[-2.129,-0.841],[-0.255,-1.36],[11.66,-0.77],[2.104,2.815],[0.155,1.419],[-0.266,1.101],[-2.128,0.24]],'o':[[1.118,0.442],[0.19,1.014],[-1.036,-0.113],[-1.161,-1.553],[-0.11,-1.011],[0.415,-1.543],[0.855,-0.096]],'v':[[112.518,-99.644],[115.379,-97.07],[107.775,-85.391],[101.114,-87.532],[99.932,-91.819],[100.475,-96.381],[106.105,-99.682]],'c':true}],'h':1},{'t':10,'s':[{'i':[[-0.418,-0.378],[-0.413,-1.848],[11.637,-1.064],[3.647,5.144],[1.583,2.231],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[2.048,9.161],[-6.885,0.63],[-1.582,-2.232],[-0.596,-0.841],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[118.214,-101.021],[107.012,-76.305],[92.549,-85.119],[87.803,-91.814],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':15,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':20,'s':[{'i':[[-2.129,-0.841],[-0.255,-1.36],[11.66,-0.77],[2.104,2.815],[0.155,1.419],[-0.266,1.101],[-2.128,0.24]],'o':[[1.118,0.442],[0.19,1.014],[-1.036,-0.113],[-1.161,-1.553],[-0.11,-1.011],[0.415,-1.543],[0.855,-0.096]],'v':[[112.518,-99.644],[115.379,-97.07],[107.775,-85.391],[101.114,-87.532],[99.932,-91.819],[100.475,-96.381],[106.105,-99.682]],'c':true}],'h':1},{'t':25,'s':[{'i':[[-0.418,-0.378],[-0.413,-1.848],[11.637,-1.064],[3.647,5.144],[1.583,2.231],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[2.048,9.161],[-6.885,0.63],[-1.582,-2.232],[-0.596,-0.841],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[118.214,-101.021],[107.012,-76.305],[92.549,-85.119],[87.803,-91.814],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':30,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':40,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':45,'s':[{'i':[[-2.129,-0.841],[-0.255,-1.36],[11.66,-0.77],[2.104,2.815],[0.155,1.419],[-0.266,1.101],[-2.128,0.24]],'o':[[1.118,0.442],[0.19,1.014],[-1.036,-0.113],[-1.161,-1.553],[-0.11,-1.011],[0.415,-1.543],[0.855,-0.096]],'v':[[112.518,-99.644],[115.379,-97.07],[107.775,-85.391],[101.114,-87.532],[99.932,-91.819],[100.475,-96.381],[106.105,-99.682]],'c':true}],'h':1},{'t':50,'s':[{'i':[[-0.418,-0.378],[-0.413,-1.848],[11.637,-1.064],[3.647,5.144],[1.583,2.231],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[2.048,9.161],[-6.885,0.63],[-1.582,-2.232],[-0.596,-0.841],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[118.214,-101.021],[107.012,-76.305],[92.549,-85.119],[87.803,-91.814],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':55,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':60,'s':[{'i':[[-2.129,-0.841],[-0.255,-1.36],[11.66,-0.77],[2.104,2.815],[0.155,1.419],[-0.266,1.101],[-2.128,0.24]],'o':[[1.118,0.442],[0.19,1.014],[-1.036,-0.113],[-1.161,-1.553],[-0.11,-1.011],[0.415,-1.543],[0.855,-0.096]],'v':[[112.518,-99.644],[115.379,-97.07],[107.775,-85.391],[101.114,-87.532],[99.932,-91.819],[100.475,-96.381],[106.105,-99.682]],'c':true}],'h':1},{'t':65,'s':[{'i':[[-0.418,-0.378],[-0.413,-1.848],[11.637,-1.064],[3.647,5.144],[1.583,2.231],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[2.048,9.161],[-6.885,0.63],[-1.582,-2.232],[-0.596,-0.841],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[118.214,-101.021],[107.012,-76.305],[92.549,-85.119],[87.803,-91.814],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':70,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':75,'s':[{'i':[[-2.129,-0.841],[-0.255,-1.36],[11.66,-0.77],[2.104,2.815],[0.155,1.419],[-0.266,1.101],[-2.128,0.24]],'o':[[1.118,0.442],[0.19,1.014],[-1.036,-0.113],[-1.161,-1.553],[-0.11,-1.011],[0.415,-1.543],[0.855,-0.096]],'v':[[112.518,-99.644],[115.379,-97.07],[107.775,-85.391],[101.114,-87.532],[99.932,-91.819],[100.475,-96.381],[106.105,-99.682]],'c':true}],'h':1},{'t':80,'s':[{'i':[[-0.418,-0.378],[-0.413,-1.848],[11.637,-1.064],[3.647,5.144],[1.583,2.231],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[2.048,9.161],[-6.885,0.63],[-1.582,-2.232],[-0.596,-0.841],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[118.214,-101.021],[107.012,-76.305],[92.549,-85.119],[87.803,-91.814],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':85,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':90,'s':[{'i':[[-2.129,-0.841],[-0.255,-1.36],[11.66,-0.77],[2.104,2.815],[0.155,1.419],[-0.266,1.101],[-2.128,0.24]],'o':[[1.118,0.442],[0.19,1.014],[-1.036,-0.113],[-1.161,-1.553],[-0.11,-1.011],[0.415,-1.543],[0.855,-0.096]],'v':[[112.518,-99.644],[115.379,-97.07],[107.775,-85.391],[101.114,-87.532],[99.932,-91.819],[100.475,-96.381],[106.105,-99.682]],'c':true}],'h':1},{'t':95,'s':[{'i':[[-0.418,-0.378],[-0.413,-1.848],[11.637,-1.064],[3.647,5.144],[1.583,2.231],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[2.048,9.161],[-6.885,0.63],[-1.582,-2.232],[-0.596,-0.841],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[118.214,-101.021],[107.012,-76.305],[92.549,-85.119],[87.803,-91.814],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':100,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':110,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':115,'s':[{'i':[[-2.129,-0.841],[-0.255,-1.36],[11.66,-0.77],[2.104,2.815],[0.155,1.419],[-0.266,1.101],[-2.128,0.24]],'o':[[1.118,0.442],[0.19,1.014],[-1.036,-0.113],[-1.161,-1.553],[-0.11,-1.011],[0.415,-1.543],[0.855,-0.096]],'v':[[112.518,-99.644],[115.379,-97.07],[107.775,-85.391],[101.114,-87.532],[99.932,-91.819],[100.475,-96.381],[106.105,-99.682]],'c':true}],'h':1},{'t':120,'s':[{'i':[[-0.418,-0.378],[-0.413,-1.848],[11.637,-1.064],[3.647,5.144],[1.583,2.231],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[2.048,9.161],[-6.885,0.63],[-1.582,-2.232],[-0.596,-0.841],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[118.214,-101.021],[107.012,-76.305],[92.549,-85.119],[87.803,-91.814],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':125,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':130,'s':[{'i':[[-2.129,-0.841],[-0.255,-1.36],[11.66,-0.77],[2.104,2.815],[0.155,1.419],[-0.266,1.101],[-2.128,0.24]],'o':[[1.118,0.442],[0.19,1.014],[-1.036,-0.113],[-1.161,-1.553],[-0.11,-1.011],[0.415,-1.543],[0.855,-0.096]],'v':[[112.518,-99.644],[115.379,-97.07],[107.775,-85.391],[101.114,-87.532],[99.932,-91.819],[100.475,-96.381],[106.105,-99.682]],'c':true}],'h':1},{'t':135,'s':[{'i':[[-0.418,-0.378],[-0.413,-1.848],[11.637,-1.064],[3.647,5.144],[1.583,2.231],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[2.048,9.161],[-6.885,0.63],[-1.582,-2.232],[-0.596,-0.841],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[118.214,-101.021],[107.012,-76.305],[92.549,-85.119],[87.803,-91.814],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':140,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':145,'s':[{'i':[[-2.129,-0.841],[-0.255,-1.36],[11.66,-0.77],[2.104,2.815],[0.155,1.419],[-0.266,1.101],[-2.128,0.24]],'o':[[1.118,0.442],[0.19,1.014],[-1.036,-0.113],[-1.161,-1.553],[-0.11,-1.011],[0.415,-1.543],[0.855,-0.096]],'v':[[112.518,-99.644],[115.379,-97.07],[107.775,-85.391],[101.114,-87.532],[99.932,-91.819],[100.475,-96.381],[106.105,-99.682]],'c':true}],'h':1},{'t':150,'s':[{'i':[[-0.418,-0.378],[-0.413,-1.848],[11.637,-1.064],[3.647,5.144],[1.583,2.231],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[2.048,9.161],[-6.885,0.63],[-1.582,-2.232],[-0.596,-0.841],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[118.214,-101.021],[107.012,-76.305],[92.549,-85.119],[87.803,-91.814],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':155,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':160,'s':[{'i':[[-2.129,-0.841],[-0.255,-1.36],[11.66,-0.77],[2.104,2.815],[0.155,1.419],[-0.266,1.101],[-2.128,0.24]],'o':[[1.118,0.442],[0.19,1.014],[-1.036,-0.113],[-1.161,-1.553],[-0.11,-1.011],[0.415,-1.543],[0.855,-0.096]],'v':[[112.518,-99.644],[115.379,-97.07],[107.775,-85.391],[101.114,-87.532],[99.932,-91.819],[100.475,-96.381],[106.105,-99.682]],'c':true}],'h':1},{'t':165,'s':[{'i':[[-0.418,-0.378],[-0.413,-1.848],[11.637,-1.064],[3.647,5.144],[1.583,2.231],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[2.048,9.161],[-6.885,0.63],[-1.582,-2.232],[-0.596,-0.841],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[118.214,-101.021],[107.012,-76.305],[92.549,-85.119],[87.803,-91.814],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1},{'t':170,'s':[{'i':[[-0.418,-0.378],[-0.468,-1.835],[11.637,-1.064],[0.812,1.075],[0.826,0.777],[-1.866,0.677],[-6.757,2.488]],'o':[[1.405,1.269],[0.322,1.26],[-6.885,0.63],[-0.397,-0.321],[-0.208,-0.509],[6.697,-2.43],[0.807,-0.297]],'v':[[115.913,-106.11],[117.486,-102.565],[103.679,-93.787],[89.102,-90.218],[86.346,-92.526],[86.105,-96.004],[106.517,-103.069]],'c':true}],'h':1}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.733333349228,0.176470592618,0.309803932905,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 5','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 8','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':7,'ty':4,'nm':'head','parent':10,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':1,'k':[{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':0,'s':[9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.298],'y':[0]},'t':20,'s':[-3]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':64,'s':[-3]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':84,'s':[9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':90,'s':[9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.297],'y':[0]},'t':110,'s':[1]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':150,'s':[1]},{'t':170,'s':[9]}],'ix':10},'p':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':0,'s':[143.299,-71.902,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':10,'s':[143.51,-70.396,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':0.667},'o':{'x':0.333,'y':0.333},'t':20,'s':[143.299,-71.902,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':64,'s':[143.299,-71.902,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':74,'s':[143.51,-70.396,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':0.667},'o':{'x':0.333,'y':0.333},'t':84,'s':[143.299,-71.902,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':90,'s':[143.299,-71.902,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':100,'s':[143.308,-70.902,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':0.667},'o':{'x':0.333,'y':0.333},'t':110,'s':[143.299,-71.902,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':150,'s':[143.299,-71.902,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':160,'s':[143.308,-70.902,0],'to':[0,0,0],'ti':[0,0,0]},{'t':170,'s':[143.299,-71.902,0]}],'ix':2,'l':2},'a':{'a':0,'k':[143.299,-71.902,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[1.087,0.428],[2.105,-1.691],[7.443,-0.124],[1.885,-0.695],[1.322,-0.923],[6.43,0.498],[2.657,-2.972],[2.513,-1.262],[3.571,-0.047],[2.263,1.198],[1.165,1.768],[-0.407,5.078],[-4.058,5.166],[-1.975,-3],[-6.333,4.868],[-0.563,-3.035],[-8.365,4.802],[-0.034,-2.641],[-11.307,0.402],[1.061,-2.661],[-8.108,0.606],[-2.609,-1.455],[-4.651,-4.884],[0.222,-6.641],[0.954,-1.47],[0.272,-0.009],[0.144,0.338],[3.237,2.212],[3.707,0.418],[3.798,1.44]],'o':[[-1.695,-0.668],[-5.803,4.663],[-2.008,0.033],[-1.512,0.558],[-5.289,3.691],[-2.487,3.115],[-1.874,2.096],[-3.191,1.603],[-2.56,0.034],[-1.871,-0.991],[-2.866,-4.351],[0.524,-6.54],[0.398,3.57],[2.095,-7.708],[0.563,3.035],[7.434,-6.146],[0.034,2.641],[10.49,-4.238],[-1.061,2.661],[7.211,-3.755],[1.247,2.715],[5.77,3.216],[4.54,4.767],[-0.059,1.752],[-0.148,0.228],[-0.367,0.013],[-1.45,-3.405],[-3.116,-2.13],[-4.036,-0.454],[-1.449,-0.549]],'v':[[112.159,-194.388],[106.852,-193.482],[86.228,-186.029],[80.264,-185.437],[76.162,-182.907],[57.859,-177.919],[50.141,-168.786],[43.782,-163.325],[33.307,-161.596],[25.799,-162.755],[21.386,-167.229],[18.004,-183.627],[25.011,-201.732],[28.639,-191.69],[41.746,-211.247],[43.436,-202.142],[67.191,-218.602],[67.294,-210.68],[100.324,-217.711],[97.142,-209.729],[120.44,-216.362],[127.069,-210.567],[143.305,-200.451],[149.25,-183.213],[148.002,-178.174],[147.38,-177.698],[146.64,-178.419],[140.662,-188.522],[127.676,-189.913],[115.859,-192.756]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.419607847929,0.078431375325,0.227450981736,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-1.687,-15.896],[9.76,-1.035],[1.687,15.896],[-9.759,1.036]],'o':[[1.687,15.896],[-9.76,1.036],[-1.687,-15.896],[9.76,-1.035]],'v':[[201.422,-149.543],[186.804,-118.887],[166.079,-145.793],[180.697,-176.449]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.262745112181,0.23137255013,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-2.034,-19.172],[11.771,-1.249],[2.034,19.172],[-11.771,1.249]],'o':[[2.034,19.172],[-11.771,1.249],[-2.034,-19.172],[11.771,-1.249]],'v':[[200.705,-149.977],[183.075,-113.002],[158.078,-145.455],[175.708,-182.43]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.074509806931,0.0941176489,0.223529413342,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-2.034,-19.172],[11.771,-1.249],[2.034,19.172],[-11.771,1.249]],'o':[[2.034,19.172],[-11.771,1.249],[-2.034,-19.172],[11.771,-1.249]],'v':[[192.671,-150.066],[175.041,-113.091],[150.044,-145.543],[167.674,-182.519]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.066666670144,0.078431375325,0.203921571374,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[2.191,-3.92],[-0.305,-0.384],[-0.254,-0.07],[-3.351,0.902],[3.225,4.752],[2.881,-0.8]],'o':[[-0.239,0.428],[0.164,0.206],[3.346,0.918],[2.228,-0.6],[-2.24,-3.301],[-4.106,1.14]],'v':[[68.431,-218.098],[68.313,-216.721],[68.996,-216.351],[79.156,-217.823],[96.246,-225.493],[80.184,-225.303]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-2.152,-10.649],[-0.546,-3.54],[-3.469,1.226],[-0.414,0.48],[0.008,0.875],[1.956,8.351],[3.106,6.625],[7.416,6.484],[9.998,1.04],[14.959,-4.694],[8.322,-6.329],[0.728,-10.95],[-0.354,-0.844],[-2.07,0.84],[-3.712,3.702],[-5.483,3],[-16.733,-6.782],[-4.511,-3.581],[-3.828,-4.389],[-1.859,-4.228]],'o':[[0.71,3.515],[3.67,-0.272],[0.598,-0.211],[0.571,-0.663],[-0.078,-8.594],[-1.66,-7.088],[-4.161,-8.876],[-7.585,-6.631],[-15.389,-1.6],[-9.972,3.129],[-8.218,6.25],[-0.061,0.914],[0.863,2.061],[4.93,-2.002],[4.423,-4.411],[15.843,-8.669],[5.324,2.158],[4.472,3.55],[3.036,3.481],[4.369,9.933]],'v':[[164.426,-149.934],[166.301,-139.346],[177.073,-141.606],[178.705,-142.54],[179.319,-145.031],[175.032,-170.926],[168.443,-191.47],[150.609,-217.103],[123.387,-230.226],[78.527,-227.205],[50.791,-212.913],[33.52,-189.14],[33.791,-186.432],[39.552,-184.626],[51.634,-197.604],[66.561,-208.834],[118.976,-212.084],[134.415,-203.681],[147.882,-192.868],[154.913,-180.991]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.066666670144,0.078431375325,0.203921571374,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[1.248,0.63],[1.946,0.759],[7.492,-1.432],[-9.672,-3.508],[-1.413,0.224],[-4.314,-0.314],[-3.246,-0.345],[-2.347,1.519],[-0.051,0.58]],'o':[[-1.795,-0.907],[-6.751,-2.634],[-5.285,1.01],[1.274,0.462],[4.22,-0.669],[3.268,0.238],[3.246,0.345],[0.628,-0.407],[0.091,-1.035]],'v':[[132.325,-167.887],[126.784,-170.462],[104.12,-172.197],[97.657,-162.883],[101.913,-162.854],[114.763,-163.916],[124.389,-162.517],[133.652,-163.914],[134.857,-165.419]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[2.123,-4.719],[0.446,-1.423],[-0.645,-0.812],[-0.573,-0.094],[-1.552,1.515],[-1.625,1.436],[-2.661,1.056],[-0.421,0.862],[3.432,-1.182]],'o':[[-0.612,1.36],[-0.31,0.989],[0.361,0.455],[2.14,0.35],[1.552,-1.515],[2.145,-1.896],[0.891,-0.354],[3.195,-6.542],[-4.865,1.676]],'v':[[48.822,-148.869],[47.317,-144.66],[47.373,-141.68],[48.89,-140.907],[54.69,-143.285],[59.074,-148.086],[66.615,-152.099],[68.894,-153.74],[60.044,-158.899]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-4.074,8.367],[-2.314,1.189],[-2.859,-1.138],[-1.634,-2.227],[4.743,-7.7],[2.412,-1.182],[3.626,0.193],[0.924,0.397],[0.606,0.852]],'o':[[1.012,-2.077],[2.618,-1.345],[2.859,1.138],[5.577,7.603],[-1.263,2.051],[-3.063,1.5],[-1.03,-0.055],[-1.069,-0.459],[-6.043,-8.503]],'v':[[162.828,-148.293],[167.455,-153.676],[176.475,-153.755],[183.199,-148.364],[182.924,-123.289],[177.664,-118.036],[167.11,-116.817],[164.091,-117.336],[161.673,-119.491]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,0.674509823322,0.541176497936,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 4','np':2,'cix':2,'bm':0,'ix':4,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0.703,1.096],[1.373,9.878],[1.81,5.076],[3.001,2.328],[9.814,-0.801],[15.108,-0.745],[6.845,-5.455],[0.486,-3.484],[-1.139,-6.645],[1.398,3.763],[-0.139,3.231],[-9.855,11.003],[-31.286,-17.732],[-3.965,-3.979],[-3.143,-6.581],[2.329,-19.534],[4.016,-9.277],[7.431,-4.785],[-0.737,7.464],[3.456,7.188]],'o':[[-5.418,-8.451],[-0.742,-5.338],[-1.276,-3.578],[-7.78,-6.035],[-15.077,1.231],[-7.995,0.395],[-2.751,2.192],[-0.932,6.678],[-2.755,-2.919],[-1.126,-3.031],[0.636,-14.81],[25.281,-28.228],[4.887,2.77],[5.148,5.165],[8.478,17.752],[-1.197,10.039],[-3.518,8.128],[2.599,-7.027],[0.766,-7.754],[-0.561,-1.166]],'v':[[164.413,-139.386],[148.696,-164.413],[147.791,-180.473],[140.672,-189.169],[113.27,-198.242],[70.27,-184.594],[46.72,-182.039],[42.546,-172.632],[42.86,-152.488],[35.884,-162.198],[34.777,-171.769],[51.504,-211.933],[155.515,-222.983],[169.025,-212.996],[181.195,-194.941],[190.67,-137.481],[182.767,-108.31],[165.899,-89.782],[168.874,-112.782],[166.321,-135.998]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.239215686917,0.074509806931,0.207843139768,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 5','np':2,'cix':2,'bm':0,'ix':5,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-0.474,-3.633],[-0.029,-0.134],[-3.434,-0.703],[-2.271,0.034],[-0.214,-0.08],[3.188,1.19],[2.151,1.915],[0.051,0.475],[-0.255,0.405],[-0.099,5.873],[5.524,1.995],[0.023,-5.154],[2.073,-3.522]],'o':[[0.018,0.135],[0.826,3.779],[2.241,0.459],[1.007,-0.015],[-3.188,-1.19],[-2.699,-1.007],[-0.357,-0.318],[-0.051,-0.476],[3.132,-4.969],[0.099,-5.873],[0.14,4.946],[-0.018,4.087],[-1.599,2.717]],'v':[[72.593,-112.575],[72.663,-112.172],[84.003,-105.849],[90.731,-105.334],[96.713,-106.998],[87.149,-110.567],[79.533,-114.536],[78.768,-115.709],[79.241,-117.034],[85.171,-133.39],[76.625,-147.511],[81.18,-134.336],[77.374,-122.833]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.890196084976,0.364705890417,0.403921574354,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 6','np':2,'cix':2,'bm':0,'ix':6,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[1.752,-0.726],[3.392,-0.774],[1.949,0.014],[0.118,0.658],[-6.092,1.104],[-1.86,-8.389]],'o':[[-3.178,1.316],[-1.899,0.434],[-0.167,-0.628],[-1.596,-8.907],[5.868,-1.063],[-1.409,1.445]],'v':[[75.372,-124.315],[65.535,-121.065],[59.733,-120.35],[59.298,-122.275],[67.441,-140.401],[81.153,-127.24]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[2.11,2.467],[1.856,0.613],[3.386,-2.091],[-13.365,-1.219],[-2.341,0.534],[-3.178,1.316],[-0.134,2.953]],'o':[[-1.203,-1.406],[-3.958,-1.308],[-6.967,4.303],[2.394,0.218],[3.392,-0.774],[2.449,-1.014],[0.147,-3.232]],'v':[[77.102,-140.134],[72.521,-143.395],[59.805,-141.355],[58.376,-120.397],[65.535,-121.065],[75.372,-124.315],[82.138,-129.326]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-2.376,0.268],[-4.292,1.077],[-2.241,1.024],[0.186,0.643],[7.568,-2.187],[-1.954,-8.373]],'o':[[4.31,-0.487],[2.403,-0.603],[-0.115,-0.641],[-2.512,-8.693],[-7.289,2.107],[2.332,0.544]],'v':[[110.838,-132.186],[123.774,-134.422],[130.816,-136.802],[130.377,-138.728],[112.126,-150.507],[102.74,-131.768]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-1.229,3.273],[-1.841,1.505],[-4.928,-0.089],[14.822,-8.013],[2.961,-0.743],[4.31,-0.487],[1.598,2.537]],'o':[[0.701,-1.866],[3.927,-3.21],[10.14,0.183],[-2.655,1.436],[-4.292,1.077],[-3.321,0.375],[-1.749,-2.778]],'v':[[101.111,-145.256],[104.802,-150.513],[120.468,-155.312],[132.359,-137.548],[123.774,-134.422],[110.838,-132.186],[100.584,-133.099]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 7','np':2,'cix':2,'bm':0,'ix':7,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-1.477,-5.438],[-1.009,-4.509],[-0.256,-13.412],[8.153,-7.522],[9.927,-2.566],[7.693,36.255],[2.22,18.063],[-5.346,10.19],[-11.169,5.207],[-7.923,0.662],[-11.306,-6.971],[-5.613,-12.038]],'o':[[1.212,4.463],[2.946,13.166],[0.224,11.74],[-7.536,6.952],[-33.159,8.571],[-3.78,-17.811],[-1.41,-11.472],[5.824,-11.101],[7.192,-3.353],[13.236,-1.107],[11.306,6.971],[2.38,5.103]],'v':[[166.238,-166.142],[169.478,-152.643],[174.349,-113.074],[156.814,-81.35],[129.545,-67.812],[53.682,-104.71],[42.209,-158.829],[48.717,-192.368],[73.726,-214.491],[96.566,-220.771],[134.631,-211.493],[160.618,-182.028]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,0.674509823322,0.541176497936,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 9','np':2,'cix':2,'bm':0,'ix':8,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-4.142,-17.321],[-11.754,2.811],[4.142,17.321],[11.754,-2.811]],'o':[[4.142,17.321],[11.754,-2.811],[-4.142,-17.321],[-11.754,2.811]],'v':[[43.353,-121.889],[72.136,-95.615],[85.918,-132.068],[57.135,-158.341]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.066666670144,0.078431375325,0.203921571374,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-4.142,-17.321],[-11.754,2.811],[4.142,17.321],[11.754,-2.811]],'o':[[4.142,17.321],[11.754,-2.811],[-4.142,-17.321],[-11.754,2.811]],'v':[[37.702,-120.771],[66.485,-94.498],[80.268,-130.95],[51.485,-157.224]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.074509806931,0.0941176489,0.223529413342,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-3.434,-14.361],[-9.745,2.331],[3.434,14.361],[9.745,-2.331]],'o':[[3.434,14.361],[9.745,-2.33],[-3.434,-14.361],[-9.745,2.331]],'v':[[35.078,-118.539],[58.941,-96.756],[70.368,-126.978],[46.505,-148.761]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.262745112181,0.23137255013,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 10','np':3,'cix':2,'bm':0,'ix':9,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':8,'ty':4,'nm':'l hand','parent':10,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':1,'k':[{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':0,'s':[-8]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':20,'s':[9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':22,'s':[9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':32,'s':[6]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':42,'s':[9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':52,'s':[6]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.321],'y':[0]},'t':62,'s':[9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':64,'s':[9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':84,'s':[-8]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':90,'s':[-8]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.297],'y':[0]},'t':110,'s':[16]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':150,'s':[16]},{'t':170,'s':[-8]}],'ix':10},'p':{'a':0,'k':[173.305,-57.981,0],'ix':2,'l':2},'a':{'a':0,'k':[173.305,-57.981,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':0,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':20,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':22,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':32,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':42,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':52,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':62,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':64,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':84,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.833,'y':0.754},'o':{'x':0.333,'y':0},'t':90,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.167,'y':0.246},'t':100,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':110,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.833,'y':0.754},'o':{'x':0.333,'y':0},'t':150,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.167,'y':0.246},'t':160,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'t':170,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.177,0.335],[5.496,2.056],[5.117,11.386],[-9.928,14.321],[-3.983,6.261],[0.913,-0.154],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[0.177,-0.334],[-5.369,-2.367],[-11.691,-4.373],[-8.201,-18.249],[1.721,-2.482],[-1.35,-0.107],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[192.987,38.923],[176.694,32.27],[146.644,11.734],[164.594,-42.891],[175.688,-57.846],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.57647061348,0.470588237047,0.86274510622,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':0,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':20,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':22,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':32,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':42,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':52,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':62,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':64,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':84,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.833,'y':0.754},'o':{'x':0.333,'y':0},'t':90,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.167,'y':0.246},'t':100,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':110,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.833,'y':0.754},'o':{'x':0.333,'y':0},'t':150,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.167,'y':0.246},'t':160,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]},{'t':170,'s':[{'i':[[-11.752,-1.97],[-6.788,-5.043],[-1.619,3.054],[-0.563,18.186],[6.199,8.514],[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[1.821,-6.803]],'o':[[8.343,1.398],[1.669,-3.029],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621],[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-1.545,6.853],[11.814,-2.147]],'v':[[164.428,39.146],[187.524,49.055],[192.458,39.929],[209.973,-12.325],[201.344,-42.207],[187.379,-55.264],[172.215,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[128.986,41.323]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.717647075653,0.592156887054,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':0,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[3.199,-3.376],[16.784,-15.877],[11.159,-1.844],[12.344,-0.431],[2.884,-1.623],[1.588,-1.871],[5.428,-6.396],[0.012,-0.014],[-2.358,0.742],[-6.419,6.934],[1.033,-4.924],[-1.882,1.062],[-4.667,6.28],[0.493,-6.101],[-1.759,1.165],[-2.932,5.06],[-2.428,-4.819],[-5.564,3.334],[-19.054,13.191],[-3.715,3.435],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-15.942,16.825],[-8.376,7.923],[-12.171,2.012],[-3.307,0.115],[-2.139,1.204],[-5.428,6.396],[-0.012,0.014],[-1.591,1.893],[8.824,-2.777],[-3.093,3.97],[-0.444,2.115],[6.813,-3.846],[-3.581,4.968],[-0.17,2.103],[4.874,-3.229],[-1.435,5.201],[1.087,2.158],[19.782,-11.852],[4.569,-3.163],[4.095,-3.786],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[101.482,100.237],[52.379,149.303],[25.878,167.69],[-12.214,169.016],[-21.856,170.908],[-27.218,175.894],[-43.503,195.084],[-43.538,195.126],[-40.807,199.045],[-18.488,182.04],[-24.769,195.624],[-21.061,198.288],[-3.576,182.884],[-9.813,199.922],[-5.899,202.18],[6.035,189.535],[7.596,205.281],[71.919,167.782],[130.196,130.205],[137.689,124.514],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.344,-42.207]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':20,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[4.048,-2.29],[20.701,-10.259],[11.209,1.508],[11.927,3.207],[3.233,-0.707],[2.067,-1.324],[7.065,-4.524],[0.015,-0.01],[-2.472,0.018],[-8.17,4.747],[2.431,-4.405],[-2.111,0.464],[-6.303,4.637],[2.26,-5.689],[-2.023,0.598],[-4.286,3.978],[-0.909,-5.319],[-6.297,1.556],[-22.084,7.025],[-4.565,3.358],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-20.174,11.412],[-10.331,5.12],[-12.226,-1.644],[-3.196,-0.859],[-2.398,0.524],[-7.065,4.524],[-0.015,0.01],[-2.076,1.343],[9.25,-0.069],[-4.121,2.889],[-1.044,1.892],[7.641,-1.679],[-4.88,3.7],[-0.779,1.96],[5.606,-1.659],[-2.897,4.552],[0.407,2.382],[22.387,-5.533],[5.296,-1.685],[4.493,-3.305],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[103.179,93.834],[41.849,126.35],[11.122,136.161],[-25.684,126.262],[-35.458,125.245],[-42.046,128.44],[-63.241,142.013],[-63.287,142.043],[-61.824,146.59],[-35.501,136.875],[-45.488,148.021],[-42.724,151.654],[-21.492,142.054],[-32.449,156.515],[-29.369,159.82],[-14.252,151.229],[-17.376,166.742],[55.114,149.746],[121.846,130.902],[137.106,124.075],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.344,-42.207]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':22,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[4.048,-2.29],[20.701,-10.259],[11.209,1.508],[11.927,3.207],[3.233,-0.707],[2.067,-1.324],[7.065,-4.524],[0.015,-0.01],[-2.472,0.018],[-8.17,4.747],[2.431,-4.405],[-2.111,0.464],[-6.303,4.637],[2.26,-5.689],[-2.023,0.598],[-4.286,3.978],[-0.909,-5.319],[-6.297,1.556],[-22.084,7.025],[-4.565,3.358],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-20.174,11.412],[-10.331,5.12],[-12.226,-1.644],[-3.196,-0.859],[-2.398,0.524],[-7.065,4.524],[-0.015,0.01],[-2.076,1.343],[9.25,-0.069],[-4.121,2.889],[-1.044,1.892],[7.641,-1.679],[-4.88,3.7],[-0.779,1.96],[5.606,-1.659],[-2.897,4.552],[0.407,2.382],[22.387,-5.533],[5.296,-1.685],[4.493,-3.305],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[103.179,93.834],[41.849,126.35],[11.122,136.161],[-25.684,126.262],[-35.458,125.245],[-42.046,128.44],[-63.241,142.013],[-63.287,142.043],[-61.824,146.59],[-35.501,136.875],[-45.488,148.021],[-42.724,151.654],[-21.492,142.054],[-32.449,156.515],[-29.369,159.82],[-14.252,151.229],[-17.376,166.742],[55.114,149.746],[121.846,130.902],[137.106,124.075],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.344,-42.207]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':32,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[4.048,-2.29],[21.247,-9.074],[13.139,-1.886],[12.35,0.129],[2.954,-1.491],[1.671,-1.798],[5.712,-6.144],[0.012,-0.014],[-2.39,0.635],[-6.726,6.636],[1.255,-4.872],[-1.928,0.976],[-4.946,6.063],[0.769,-6.073],[-1.809,1.084],[-3.158,4.922],[-2.207,-4.924],[-36.114,3.542],[-22.084,7.025],[-4.565,3.358],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-20.174,11.412],[-9.884,4.221],[-12.211,1.753],[-3.309,-0.034],[-2.191,1.106],[-5.712,6.144],[-0.012,0.013],[-1.675,1.819],[8.94,-2.375],[-3.27,3.826],[-0.539,2.093],[6.98,-3.533],[-3.802,4.801],[-0.265,2.093],[5.015,-3.005],[-1.669,5.131],[0.988,2.205],[22.951,-2.251],[5.296,-1.685],[4.493,-3.305],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[120.802,74.77],[116.637,83.732],[105.625,92.248],[51.117,119.523],[17.136,127.014],[-20.64,129.103],[-30.358,130.558],[-35.94,135.296],[-53.077,153.729],[-53.114,153.769],[-50.562,157.808],[-27.497,141.83],[-34.386,155.117],[-30.803,157.945],[-12.639,143.349],[-19.64,160.087],[-15.832,162.519],[-3.338,150.427],[-2.492,166.229],[61.9,143.505],[124.292,129.316],[139.553,122.489],[150.688,110],[192.458,39.929],[209.973,-12.325],[201.345,-42.207]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':42,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[4.048,-2.29],[20.701,-10.259],[11.209,1.508],[11.927,3.207],[3.233,-0.707],[2.067,-1.324],[7.065,-4.524],[0.015,-0.01],[-2.472,0.018],[-8.17,4.747],[2.431,-4.405],[-2.111,0.464],[-6.303,4.637],[2.26,-5.689],[-2.023,0.598],[-4.286,3.978],[-0.909,-5.319],[-6.297,1.556],[-22.084,7.025],[-4.565,3.358],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-20.174,11.412],[-10.331,5.12],[-12.226,-1.644],[-3.196,-0.859],[-2.398,0.524],[-7.065,4.524],[-0.015,0.01],[-2.076,1.343],[9.25,-0.069],[-4.121,2.889],[-1.044,1.892],[7.641,-1.679],[-4.88,3.7],[-0.779,1.96],[5.606,-1.659],[-2.897,4.552],[0.407,2.382],[22.387,-5.533],[5.296,-1.685],[4.493,-3.305],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[103.179,93.834],[41.849,126.35],[11.122,136.161],[-25.684,126.262],[-35.458,125.245],[-42.046,128.44],[-63.241,142.013],[-63.287,142.043],[-61.824,146.59],[-35.501,136.875],[-45.488,148.021],[-42.724,151.654],[-21.492,142.054],[-32.449,156.515],[-29.369,159.82],[-14.252,151.229],[-17.376,166.742],[55.114,149.746],[121.846,130.902],[137.106,124.075],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.344,-42.207]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':52,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[4.048,-2.29],[21.247,-9.074],[13.139,-1.886],[12.35,0.129],[2.954,-1.491],[1.671,-1.798],[5.712,-6.144],[0.012,-0.014],[-2.39,0.635],[-6.726,6.636],[1.255,-4.872],[-1.928,0.976],[-4.946,6.063],[0.769,-6.073],[-1.809,1.084],[-3.158,4.922],[-2.207,-4.924],[-36.114,3.542],[-22.084,7.025],[-4.565,3.358],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-20.174,11.412],[-9.884,4.221],[-12.211,1.753],[-3.309,-0.034],[-2.191,1.106],[-5.712,6.144],[-0.012,0.013],[-1.675,1.819],[8.94,-2.375],[-3.27,3.826],[-0.539,2.093],[6.98,-3.533],[-3.802,4.801],[-0.265,2.093],[5.015,-3.005],[-1.669,5.131],[0.988,2.205],[22.951,-2.251],[5.296,-1.685],[4.493,-3.305],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[120.802,74.77],[116.637,83.732],[105.625,92.248],[51.117,119.523],[17.136,127.014],[-20.64,129.103],[-30.358,130.558],[-35.94,135.296],[-53.077,153.729],[-53.114,153.769],[-50.562,157.808],[-27.497,141.83],[-34.386,155.117],[-30.803,157.945],[-12.639,143.349],[-19.64,160.087],[-15.832,162.519],[-3.338,150.427],[-2.492,166.229],[61.9,143.505],[124.292,129.316],[139.553,122.489],[150.688,110],[192.458,39.929],[209.973,-12.325],[201.345,-42.207]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':62,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[4.048,-2.29],[20.701,-10.259],[11.209,1.508],[11.927,3.207],[3.233,-0.707],[2.067,-1.324],[7.065,-4.524],[0.015,-0.01],[-2.472,0.018],[-8.17,4.747],[2.431,-4.405],[-2.111,0.464],[-6.303,4.637],[2.26,-5.689],[-2.023,0.598],[-4.286,3.978],[-0.909,-5.319],[-6.297,1.556],[-22.084,7.025],[-4.565,3.358],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-20.174,11.412],[-10.331,5.12],[-12.226,-1.644],[-3.196,-0.859],[-2.398,0.524],[-7.065,4.524],[-0.015,0.01],[-2.076,1.343],[9.25,-0.069],[-4.121,2.889],[-1.044,1.892],[7.641,-1.679],[-4.88,3.7],[-0.779,1.96],[5.606,-1.659],[-2.897,4.552],[0.407,2.382],[22.387,-5.533],[5.296,-1.685],[4.493,-3.305],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[103.179,93.834],[41.849,126.35],[11.122,136.161],[-25.684,126.262],[-35.458,125.245],[-42.046,128.44],[-63.241,142.013],[-63.287,142.043],[-61.824,146.59],[-35.501,136.875],[-45.488,148.021],[-42.724,151.654],[-21.492,142.054],[-32.449,156.515],[-29.369,159.82],[-14.252,151.229],[-17.376,166.742],[55.114,149.746],[121.846,130.902],[137.106,124.075],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.344,-42.207]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':64,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[4.048,-2.29],[20.701,-10.259],[11.209,1.508],[11.927,3.207],[3.233,-0.707],[2.067,-1.324],[7.065,-4.524],[0.015,-0.01],[-2.472,0.018],[-8.17,4.747],[2.431,-4.405],[-2.111,0.464],[-6.303,4.637],[2.26,-5.689],[-2.023,0.598],[-4.286,3.978],[-0.909,-5.319],[-6.297,1.556],[-22.084,7.025],[-4.565,3.358],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-20.174,11.412],[-10.331,5.12],[-12.226,-1.644],[-3.196,-0.859],[-2.398,0.524],[-7.065,4.524],[-0.015,0.01],[-2.076,1.343],[9.25,-0.069],[-4.121,2.889],[-1.044,1.892],[7.641,-1.679],[-4.88,3.7],[-0.779,1.96],[5.606,-1.659],[-2.897,4.552],[0.407,2.382],[22.387,-5.533],[5.296,-1.685],[4.493,-3.305],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[103.179,93.834],[41.849,126.35],[11.122,136.161],[-25.684,126.262],[-35.458,125.245],[-42.046,128.44],[-63.241,142.013],[-63.287,142.043],[-61.824,146.59],[-35.501,136.875],[-45.488,148.021],[-42.724,151.654],[-21.492,142.054],[-32.449,156.515],[-29.369,159.82],[-14.252,151.229],[-17.376,166.742],[55.114,149.746],[121.846,130.902],[137.106,124.075],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.344,-42.207]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':84,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[3.199,-3.376],[16.784,-15.877],[11.159,-1.844],[12.344,-0.431],[2.884,-1.623],[1.588,-1.871],[5.428,-6.396],[0.012,-0.014],[-2.358,0.742],[-6.419,6.934],[1.033,-4.924],[-1.882,1.062],[-4.667,6.28],[0.493,-6.101],[-1.759,1.165],[-2.932,5.06],[-2.428,-4.819],[-5.564,3.334],[-19.054,13.191],[-3.715,3.435],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-15.942,16.825],[-8.376,7.923],[-12.171,2.012],[-3.307,0.115],[-2.139,1.204],[-5.428,6.396],[-0.012,0.014],[-1.591,1.893],[8.824,-2.777],[-3.093,3.97],[-0.444,2.115],[6.813,-3.846],[-3.581,4.968],[-0.17,2.103],[4.874,-3.229],[-1.435,5.201],[1.087,2.158],[19.782,-11.852],[4.569,-3.163],[4.095,-3.786],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[101.482,100.237],[52.379,149.303],[25.878,167.69],[-12.214,169.016],[-21.856,170.908],[-27.218,175.894],[-43.503,195.084],[-43.538,195.126],[-40.807,199.045],[-18.488,182.04],[-24.769,195.624],[-21.061,198.288],[-3.576,182.884],[-9.813,199.922],[-5.899,202.18],[6.035,189.535],[7.596,205.281],[71.919,167.782],[130.196,130.205],[137.689,124.514],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.344,-42.207]],'c':true}]},{'i':{'x':0.833,'y':0.754},'o':{'x':0.333,'y':0},'t':90,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[3.199,-3.376],[16.784,-15.877],[11.159,-1.844],[12.344,-0.431],[2.884,-1.623],[1.588,-1.871],[5.428,-6.396],[0.012,-0.014],[-2.358,0.742],[-6.419,6.934],[1.033,-4.924],[-1.882,1.062],[-4.667,6.28],[0.493,-6.101],[-1.759,1.165],[-2.932,5.06],[-2.428,-4.819],[-5.564,3.334],[-19.054,13.191],[-3.715,3.435],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-15.942,16.825],[-8.376,7.923],[-12.171,2.012],[-3.307,0.115],[-2.139,1.204],[-5.428,6.396],[-0.012,0.014],[-1.591,1.893],[8.824,-2.777],[-3.093,3.97],[-0.444,2.115],[6.813,-3.846],[-3.581,4.968],[-0.17,2.103],[4.874,-3.229],[-1.435,5.201],[1.087,2.158],[19.782,-11.852],[4.569,-3.163],[4.095,-3.786],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[101.482,100.237],[52.379,149.303],[25.878,167.69],[-12.214,169.016],[-21.856,170.908],[-27.218,175.894],[-43.503,195.084],[-43.538,195.126],[-40.807,199.045],[-18.488,182.04],[-24.769,195.624],[-21.061,198.288],[-3.576,182.884],[-9.813,199.922],[-5.899,202.18],[6.035,189.535],[7.596,205.281],[71.919,167.782],[130.196,130.205],[137.689,124.514],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.344,-42.207]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.167,'y':0.246},'t':100,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[12.503,-1.276],[20.977,-2.811],[9.373,3.994],[9.523,5.501],[3.024,0.261],[2.179,-0.514],[7.447,-1.758],[0.016,-0.004],[-2.166,-0.607],[-8.475,1.655],[3.363,-2.829],[-1.975,-0.168],[-6.812,2.037],[3.575,-3.875],[-1.936,-0.041],[-4.865,2.03],[0.701,-4.382],[-5.941,-0.367],[-21.822,0.693],[-3.715,3.435],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-20.614,3.397],[-10.468,1.403],[-10.223,-4.356],[-2.551,-1.474],[-2.243,-0.193],[-7.447,1.758],[-0.016,0.004],[-2.192,0.527],[8.104,2.27],[-4.414,1.22],[-1.445,1.215],[7.15,0.608],[-5.305,1.664],[-1.232,1.335],[5.366,0.113],[-3.812,2.827],[-0.314,1.962],[21.122,1.304],[24.713,1.544],[4.095,-3.786],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[88.895,97.66],[26.192,105.628],[-3.422,105.57],[-32.685,90.087],[-40.941,86.837],[-47.598,87.677],[-69.938,92.951],[-69.987,92.963],[-69.987,96.882],[-44.249,95.909],[-56.112,102.104],[-54.718,105.635],[-33.462,103.473],[-47.104,112.012],[-45.342,115.368],[-29.714,112.457],[-36.806,123.786],[31.328,128.727],[95.387,133.161],[137.689,124.514],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.345,-42.207]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':110,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[15.56,7.469],[20.703,10.255],[5.591,9.832],[4.674,11.433],[2.52,2.144],[2.305,0.843],[7.879,2.88],[0.017,0.006],[-1.512,-1.956],[-8.726,-3.624],[4.978,-0.734],[-1.648,-1.399],[-7.507,-2.206],[5.895,-1.648],[-1.702,-1.247],[-5.762,-1.001],[3.681,-3.945],[-5.053,-4.067],[-19.942,-11.806],[-3.715,3.435],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-20.896,-10.03],[-10.331,-5.118],[-6.098,-10.723],[-1.252,-3.063],[-1.869,-1.59],[-7.879,-2.88],[-0.017,-0.006],[-2.326,-0.838],[5.658,7.318],[-4.795,-1.529],[-2.138,0.315],[5.965,5.062],[-5.9,-1.641],[-2.032,0.568],[4.716,3.456],[-5.377,0.453],[-1.648,1.766],[17.964,14.461],[40.766,24.134],[4.095,-3.786],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[89.489,93.572],[26.467,64.474],[0.047,45.969],[-14.374,10.688],[-19.485,2.296],[-26.018,-1.011],[-49.656,-9.652],[-49.708,-9.671],[-52.44,-5.752],[-28.764,9.306],[-43.683,8.113],[-44.899,12.513],[-24.398,23.59],[-42.542,23.632],[-43.306,28.085],[-27.313,34.908],[-41.548,41.82],[15.887,89.2],[74.17,128.371],[137.689,124.514],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.344,-42.207]],'c':true}]},{'i':{'x':0.833,'y':0.754},'o':{'x':0.333,'y':0},'t':150,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[15.56,7.469],[20.703,10.255],[5.591,9.832],[4.674,11.433],[2.52,2.144],[2.305,0.843],[7.879,2.88],[0.017,0.006],[-1.512,-1.956],[-8.726,-3.624],[4.978,-0.734],[-1.648,-1.399],[-7.507,-2.206],[5.895,-1.648],[-1.702,-1.247],[-5.762,-1.001],[3.681,-3.945],[-5.053,-4.067],[-19.942,-11.806],[-3.715,3.435],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-20.896,-10.03],[-10.331,-5.118],[-6.098,-10.723],[-1.252,-3.063],[-1.869,-1.59],[-7.879,-2.88],[-0.017,-0.006],[-2.326,-0.838],[5.658,7.318],[-4.795,-1.529],[-2.138,0.315],[5.965,5.062],[-5.9,-1.641],[-2.032,0.568],[4.716,3.456],[-5.377,0.453],[-1.648,1.766],[17.964,14.461],[40.766,24.134],[4.095,-3.786],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[89.489,93.572],[26.467,64.474],[0.047,45.969],[-14.374,10.688],[-19.485,2.296],[-26.018,-1.011],[-49.656,-9.652],[-49.708,-9.671],[-52.44,-5.752],[-28.764,9.306],[-43.683,8.113],[-44.899,12.513],[-24.398,23.59],[-42.542,23.632],[-43.306,28.085],[-27.313,34.908],[-41.548,41.82],[15.887,89.2],[74.17,128.371],[137.689,124.514],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.344,-42.207]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.167,'y':0.246},'t':160,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[12.503,-1.276],[20.977,-2.811],[9.373,3.994],[9.523,5.501],[3.024,0.261],[2.179,-0.514],[7.447,-1.758],[0.016,-0.004],[-2.166,-0.607],[-8.475,1.655],[3.363,-2.829],[-1.975,-0.168],[-6.812,2.037],[3.575,-3.875],[-1.936,-0.041],[-4.865,2.03],[0.701,-4.382],[-5.941,-0.367],[-21.822,0.693],[-3.715,3.435],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-20.614,3.397],[-10.468,1.403],[-10.223,-4.356],[-2.551,-1.474],[-2.243,-0.193],[-7.447,1.758],[-0.016,0.004],[-2.192,0.527],[8.104,2.27],[-4.414,1.22],[-1.445,1.215],[7.15,0.608],[-5.305,1.664],[-1.232,1.335],[5.366,0.113],[-3.812,2.827],[-0.314,1.962],[21.122,1.304],[24.713,1.544],[4.095,-3.786],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[88.895,97.66],[26.192,105.628],[-3.422,105.57],[-32.685,90.087],[-40.941,86.837],[-47.598,87.677],[-69.938,92.951],[-69.987,92.963],[-69.987,96.882],[-44.249,95.909],[-56.112,102.104],[-54.718,105.635],[-33.462,103.473],[-47.104,112.012],[-45.342,115.368],[-29.714,112.457],[-36.806,123.786],[31.328,128.727],[95.387,133.161],[137.689,124.514],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.345,-42.207]],'c':true}]},{'t':170,'s':[{'i':[[6.387,2.598],[3.613,-0.609],[2.201,-2.775],[4.572,-9.942],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[3.199,-3.376],[16.784,-15.877],[11.159,-1.844],[12.344,-0.431],[2.884,-1.623],[1.588,-1.871],[5.428,-6.396],[0.012,-0.014],[-2.358,0.742],[-6.419,6.934],[1.033,-4.924],[-1.882,1.062],[-4.667,6.28],[0.493,-6.101],[-1.759,1.165],[-2.932,5.06],[-2.428,-4.819],[-5.564,3.334],[-19.054,13.191],[-3.715,3.435],[-3.248,4.569],[-13.135,24.776],[-0.563,18.186],[6.199,8.514]],'o':[[-3.316,-1.349],[-3.493,0.589],[-6.747,8.507],[-6.633,14.424],[-4.218,18.709],[-1.068,3.116],[-2.786,3.789],[-15.942,16.825],[-8.376,7.923],[-12.171,2.012],[-3.307,0.115],[-2.139,1.204],[-5.428,6.396],[-0.012,0.014],[-1.591,1.893],[8.824,-2.777],[-3.093,3.97],[-0.444,2.115],[6.813,-3.846],[-3.581,4.968],[-0.17,2.103],[4.874,-3.229],[-1.435,5.201],[1.087,2.158],[19.782,-11.852],[4.569,-3.163],[4.095,-3.786],[16.293,-22.917],[8.753,-16.509],[0.323,-10.443],[-3.364,-4.621]],'v':[[187.379,-55.264],[172.214,-57.8],[162.282,-50.307],[146.99,-24.513],[134.084,20.845],[118.356,76.356],[114.191,85.318],[101.482,100.237],[52.379,149.303],[25.878,167.69],[-12.214,169.016],[-21.856,170.908],[-27.218,175.894],[-43.503,195.084],[-43.538,195.126],[-40.807,199.045],[-18.488,182.04],[-24.769,195.624],[-21.061,198.288],[-3.576,182.884],[-9.813,199.922],[-5.899,202.18],[6.035,189.535],[7.596,205.281],[71.919,167.782],[130.196,130.205],[137.689,124.514],[148.242,111.586],[192.458,39.929],[209.973,-12.325],[201.344,-42.207]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,0.674509823322,0.541176497936,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':9,'ty':4,'nm':'mike','sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[224.095,438.13,0],'ix':2,'l':2},'a':{'a':0,'k':[-186.905,15.13,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-0.26,-3.132],[-0.488,-0.611],[-4.667,-6.489],[-4.855,-1.948],[-2.561,3.981],[1.2,4.579],[8.083,2.696],[4.588,-1.052]],'o':[[0.065,0.779],[4.988,6.245],[3.055,4.247],[4.393,1.763],[2.561,-3.981],[-2.16,-8.243],[-4.474,-1.492],[-2.347,0.538]],'v':[[-19.539,-77.22],[-18.51,-75.152],[-1.051,-58.82],[8.812,-46.97],[21.085,-51.54],[22.613,-65.249],[5.85,-83.152],[-8.096,-83.751]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.133333340287,0.152941182256,0.345098048449,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[7.833,12.086],[9.239,-5.359],[1.29,-2.356],[-4.974,-7.674],[3.725,-6.804],[-3.372,1.956]],'o':[[-7.833,-12.086],[-2.376,1.378],[7.101,1.256],[5.818,8.978],[4.083,0.722],[9.239,-5.359]],'v':[[-24.49,-39.164],[-55.4,-51.346],[-60.806,-45.233],[-41.428,-31.73],[-38.476,-5.844],[-27.034,-7.578]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[5.148,-3.153],[6.523,10.651],[-5.148,3.153],[-6.523,-10.651]],'o':[[-5.148,3.153],[-6.524,-10.651],[5.148,-3.153],[6.523,10.651]],'v':[[-60.454,7.591],[-81.587,-5.985],[-84.078,-30.98],[-62.945,-17.403]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0.731,1.804],[1.003,1.638],[0.928,1.071],[1.66,-1.017],[0,0],[-0.733,-1.805],[-1.002,-1.635],[-0.927,-1.072],[-1.661,1.018],[0,0]],'o':[[-0.532,-1.314],[-1.003,-1.638],[-1.275,-1.471],[0,0],[-1.661,1.018],[0.533,1.313],[1.002,1.636],[1.275,1.473],[0,0],[1.66,-1.017]],'v':[[-22.559,-48.163],[-24.828,-52.613],[-27.762,-56.657],[-32.87,-57.4],[-74.778,-31.732],[-76.435,-26.84],[-74.167,-22.394],[-71.237,-18.352],[-66.126,-17.606],[-24.218,-43.275]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.137254908681,0.35686275363,0.654901981354,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 4','np':2,'cix':2,'bm':0,'ix':4,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[6.28,10.253],[5.256,-2.377],[0,0],[0,0],[-6.524,-10.651],[-5.148,3.153],[0,0],[0,0],[0,0]],'o':[[-6.28,-10.253],[0,0],[0,0],[-5.148,3.153],[6.523,10.651],[0,0],[0,0],[0,0],[4.506,-3.602]],'v':[[-7.802,-51.177],[-28.329,-65.043],[-28.365,-65.103],[-84.078,-30.98],[-81.587,-5.985],[-60.454,7.591],[-5.312,-26.183],[-4.742,-26.532],[-4.778,-26.592]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.086274512112,0.254901975393,0.482352942228,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 5','np':2,'cix':2,'bm':0,'ix':5,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[7.36,-4.508],[9.328,15.23],[-7.36,4.508],[-14.676,-25.06]],'o':[[-7.36,4.508],[-9.328,-15.23],[7.361,-4.508],[16.955,28.951]],'v':[[3.573,-19.741],[-26.644,-39.154],[-30.207,-74.893],[27.381,-73.904]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 6','np':2,'cix':2,'bm':0,'ix':6,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':6,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[22.016,0],[0,-12.303],[0,0]],'o':[[-22.016,0],[0,0],[0,-12.303]],'v':[[-366.07,148.417],[-405.932,170.694],[-326.207,170.694]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.058823529631,0.258823543787,0.450980395079,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-1.014,-4.641],[4.641,-1.014],[1.015,4.641],[-4.641,1.014]],'o':[[1.014,4.641],[-4.641,1.014],[-1.014,-4.641],[4.641,-1.014]],'v':[[-91.705,-57.554],[-98.272,-47.313],[-108.513,-53.88],[-101.946,-64.121]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.450980395079,0.635294139385,0.86274510622,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-2.63,-12.03],[12.03,-2.63],[2.63,12.03],[-12.03,2.63]],'o':[[2.629,12.03],[-12.03,2.629],[-2.629,-12.03],[12.03,-2.629]],'v':[[-78.327,-60.478],[-95.348,-33.935],[-121.891,-50.956],[-104.87,-77.499]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.058823529631,0.258823543787,0.450980395079,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,-4.751],[4.751,0],[0,4.751],[-4.751,0]],'o':[[0,4.751],[-4.751,0],[0,-4.751],[4.751,0]],'v':[[-308.306,-118.137],[-316.908,-109.535],[-325.511,-118.137],[-316.908,-126.74]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.450980395079,0.635294139385,0.86274510622,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,-12.314],[12.314,0],[0,12.314],[-12.314,0]],'o':[[0,12.314],[-12.314,0],[0,-12.314],[12.314,0]],'v':[[-294.612,-118.137],[-316.908,-95.841],[-339.204,-118.137],[-316.908,-140.433]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.058823529631,0.258823543787,0.450980395079,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 4','np':2,'cix':2,'bm':0,'ix':4,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,-4.751],[4.751,0],[0,4.751],[-4.751,0]],'o':[[0,4.751],[-4.751,0],[0,-4.751],[4.751,0]],'v':[[-357.467,99.219],[-366.07,107.822],[-374.672,99.219],[-366.07,90.617]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.450980395079,0.635294139385,0.86274510622,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,-12.314],[12.314,0],[0,12.314],[-12.314,0]],'o':[[0,12.314],[-12.314,0],[0,-12.314],[12.314,0]],'v':[[-343.773,99.219],[-366.07,121.516],[-388.366,99.219],[-366.07,76.923]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.058823529631,0.258823543787,0.450980395079,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 5','np':2,'cix':2,'bm':0,'ix':5,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-354.882,159.556],[-377.258,159.556],[-377.258,99.75],[-354.882,99.75]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 6','np':2,'cix':2,'bm':0,'ix':6,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-102.011,-47.978],[-97.733,-63.688],[-48.778,-50.358],[-53.055,-34.649]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 7','np':2,'cix':2,'bm':0,'ix':7,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-322.049,-103.62],[-319.231,-113.973],[-103.228,-55.16],[-106.047,-44.806]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-317.434,-120.571],[-314.615,-130.924],[-98.612,-72.111],[-101.431,-61.757]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 8','np':2,'cix':2,'bm':0,'ix':8,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-354.199,108.928],[-364.651,106.499],[-313.982,-111.558],[-303.53,-109.129]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-371.311,104.951],[-381.763,102.523],[-331.094,-115.534],[-320.642,-113.106]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.098039217293,0.109803922474,0.266666680574,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 9','np':2,'cix':2,'bm':0,'ix':9,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':9,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':10,'ty':4,'nm':'body','sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':1,'k':[{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':0,'s':[2]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.298],'y':[0]},'t':20,'s':[-5]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':64,'s':[-5]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':84,'s':[2]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':90,'s':[2]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.297],'y':[0]},'t':110,'s':[-1]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':150,'s':[-1]},{'t':170,'s':[2]}],'ix':10},'p':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':0,'s':[618.511,658.323,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':10,'s':[618.511,662.573,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':20,'s':[618.511,658.323,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':64,'s':[618.511,658.323,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':74,'s':[618.511,662.573,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':0.667},'o':{'x':0.333,'y':0.333},'t':84,'s':[618.511,658.323,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':90,'s':[618.511,658.323,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':100,'s':[618.511,660.198,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':0.667},'o':{'x':0.333,'y':0.333},'t':110,'s':[618.511,658.323,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':150,'s':[618.511,658.323,0],'to':[0,0,0],'ti':[0,0,0]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':160,'s':[618.511,660.198,0],'to':[0,0,0],'ti':[0,0,0]},{'t':170,'s':[618.511,658.323,0]}],'ix':2,'l':2},'a':{'a':0,'k':[197.511,235.323,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-4.82,1.246],[-5.049,2.663],[2.621,10.837],[1.887,0.751],[4.021,-1.805],[5.766,-0.696],[0.215,-0.342],[-0.13,-0.383],[0,0]],'o':[[5.538,-1.431],[-1.653,-11.026],[-0.478,-1.973],[-4.351,-1.724],[-5.111,2.295],[-0.401,0.048],[-0.216,0.342],[0,0],[4.803,-0.426]],'v':[[128.421,-58.379],[144.494,-64.402],[138.109,-97.224],[135.024,-102.191],[120.322,-100.051],[105.854,-96.017],[104.783,-95.546],[104.822,-94.374],[113.938,-55.861]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.890196084976,0.364705890417,0.403921574354,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0.114,1.02],[3.744,15.482],[1.887,0.751],[4.021,-1.805],[5.766,-0.696],[0.215,-0.342],[-0.13,-0.383],[0,0],[-7.47,4.752],[-0.464,1.23]],'o':[[-1.762,-15.83],[-0.477,-1.973],[-4.351,-1.724],[-5.111,2.295],[-0.401,0.048],[-0.216,0.342],[0,0],[8.848,0.326],[1.109,-0.706],[0.362,-0.96]],'v':[[146.38,-50.193],[138.109,-97.224],[135.024,-102.191],[120.322,-100.051],[105.854,-96.017],[104.783,-95.546],[104.822,-94.374],[118.277,-37.532],[143.523,-44.381],[146.235,-47.147]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,0.674509823322,0.541176497936,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-1.148,3.229],[1.533,0.135],[8.82,-0.899],[5.19,-0.555],[0.565,-2.756],[-4.389,-4.815],[-1.793,-0.569],[-6.565,4.433],[-4.323,7.001]],'o':[[-1.826,-0.091],[-9.107,-0.804],[-4.617,0.471],[-1.03,2.034],[-1.226,5.985],[1.32,1.448],[7.405,2.35],[6.564,-4.433],[1.779,-2.882]],'v':[[157.235,-59.78],[152.148,-60.091],[124.637,-60.121],[109.726,-58.717],[107.366,-51.576],[109.585,-31.3],[114.468,-28.434],[136.606,-32.594],[152.631,-50.617]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,0.674509823322,0.541176497936,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[3.674,-19.895],[-9.014,-9.075],[3.373,18.442],[-0.396,12.773],[1.645,24.483],[3.375,12.085],[0.497,-0.655],[-0.187,-4.448],[2.012,-36.916]],'o':[[12.682,1.535],[-9.466,-16.182],[-2.299,-12.57],[0.761,-24.526],[-0.66,-9.824],[-0.621,0.531],[-2.692,3.545],[1.557,36.933],[-1.061,19.454]],'v':[[72.099,135.468],[106.017,151.648],[83.55,100.417],[82.362,62.179],[81.034,-11.393],[77.747,-48.947],[76.039,-47.197],[73.552,-34.361],[78.383,75.714]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.57647061348,0.470588237047,0.86274510622,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[1.021,18.187],[1.867,31.425],[8.275,26.383],[2.166,2.027],[1.197,0.6],[6.361,-10.106],[5.084,-19.324],[5.653,-8.819],[10.132,2.66],[-17.172,7.279],[20.714,-17.485],[-11.303,-10.618],[-11.553,-7.044],[-7.423,4.066]],'o':[[-1.768,-31.492],[-1.65,-27.601],[-0.888,-2.831],[-0.929,-0.869],[-9.148,5.466],[-10.644,16.911],[-2.665,10.13],[-5.653,8.819],[15.915,9.725],[-1.892,27.041],[14.931,4.19],[9.862,9.264],[7.217,4.4],[-1.021,-18.187]],'v':[[197.308,128.7],[195.326,35.17],[182.629,-46.588],[178.547,-54.381],[175.323,-56.556],[151.942,-33.003],[128.167,21.774],[117.891,51.315],[91.475,64.17],[145.203,68.142],[109.362,138.736],[153.554,150.759],[176.183,183.873],[200.371,183.262]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.470588237047,0.313725501299,0.768627464771,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-1.65,-27.601],[-1.768,-31.492],[-1.995,-35.543],[17.97,0.772],[20.495,3.059],[-5.598,6.874],[-2.53,46.408],[1.557,36.933],[-2.692,3.546],[-2.197,1.198],[-13.367,1.363],[-9.107,-0.804],[-6.043,-5.654],[-0.888,-2.831]],'o':[[1.867,31.425],[1.995,35.543],[-14.345,10.851],[-21.064,-0.905],[-4.615,-0.689],[30.443,-37.38],[2.012,-36.916],[-0.187,-4.448],[1.513,-1.993],[11.885,-6.483],[8.82,-0.899],[7.746,0.684],[2.166,2.027],[8.275,26.383]],'v':[[195.326,35.17],[197.308,128.7],[203.293,235.329],[152.309,249.394],[91.216,237.247],[40.15,211.329],[78.383,75.714],[73.552,-34.361],[76.039,-47.197],[81.954,-51.724],[124.637,-60.121],[152.148,-60.091],[178.547,-54.381],[182.629,-46.588]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.717647075653,0.592156887054,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 4','np':2,'cix':2,'bm':0,'ix':4,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':4,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':11,'ty':4,'nm':'Shape Layer 5','td':1,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[445.5,706,0],'ix':2,'l':2},'a':{'a':0,'k':[8,257.5,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[384.5,120.5],[-368.5,120.5],[-358.5,394.5],[384.5,394.5]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.89019613827,0.364705882353,0.403921598547,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':12,'ty':4,'nm':'l leg','tt':1,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[609.173,629.815,0],'ix':2,'l':2},'a':{'a':0,'k':[188.173,206.815,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':121,'s':[{'i':[[-4.495,42.379],[9.86,23.672],[14.807,-2.845],[6.689,-0.654],[3.576,-4.136],[0.816,-4.956],[4.521,-5.161],[-5.634,-2.368],[-3.812,-6.383],[4.839,-5.644],[4.04,-1.392],[17.303,7.469],[1.989,-6.166],[6.633,-2.22],[6.994,-0.077],[-2.981,-14.849],[4.566,-12.482],[3.28,-4.629],[0,0],[-0.471,15.885],[-7.62,4.293],[-8.376,1.127]],'o':[[2.704,-25.5],[-15.038,-1.106],[-6.739,1.295],[-4.602,0.45],[-3.239,3.747],[-1.114,6.763],[7.9,0.995],[6.854,2.88],[3.812,6.383],[-2.781,3.243],[-17.823,6.14],[5.656,2.867],[-2.147,6.657],[-6.633,2.22],[8.924,12.237],[2.616,13.031],[-1.967,5.377],[13.008,0],[0.184,-15.892],[0.257,-8.674],[7.147,-4.022],[34.678,-4.665]],'v':[[200.653,276.777],[189.689,201.441],[144.664,204.078],[124.612,208.17],[108.612,210.798],[108.175,231.076],[99.568,249.487],[121.278,253.426],[138.548,266.934],[137.862,287.804],[126.976,294.273],[71.754,292.137],[77.955,308.86],[62.996,322.467],[42.24,324.862],[59.721,366.418],[58.389,405.763],[50.807,455.147],[78.664,455.147],[79.342,372.985],[83.519,332.435],[118.215,330.263]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.167,'y':0},'t':141,'s':[{'i':[[-4.495,42.379],[9.86,23.672],[14.807,-2.845],[6.689,-0.654],[3.576,-4.136],[0.816,-4.956],[4.521,-5.161],[-5.634,-2.368],[-3.812,-6.383],[4.839,-5.644],[4.04,-1.392],[17.303,7.469],[2.965,-5.761],[6.906,-1.112],[6.914,1.061],[-0.527,-15.137],[6.535,-11.573],[3.989,-4.033],[0,0],[-3.048,15.597],[-8.218,2.992],[-8.376,1.127]],'o':[[2.704,-25.5],[-15.038,-1.106],[-6.739,1.295],[-4.602,0.45],[-3.239,3.747],[-1.114,6.763],[7.9,0.995],[6.854,2.88],[3.812,6.383],[-2.781,3.243],[-17.823,6.14],[5.656,2.867],[-3.201,6.219],[-6.906,1.112],[6.815,13.525],[0.462,13.283],[-2.815,4.986],[12.835,2.115],[2.766,-15.65],[1.664,-8.517],[7.706,-2.806],[34.678,-4.665]],'v':[[200.653,276.777],[189.689,201.441],[144.664,204.078],[124.612,208.17],[108.612,210.798],[108.175,231.076],[99.568,249.487],[121.278,253.426],[138.548,266.934],[137.862,287.804],[126.976,294.273],[71.754,292.137],[70.65,315.857],[53.677,326.85],[32.808,325.838],[43.299,369.684],[35.588,408.289],[20.192,462.16],[47.679,466.69],[61.591,379.354],[72.307,340.023],[118.215,330.263]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':150,'s':[{'i':[[-4.495,42.379],[9.86,23.672],[14.807,-2.845],[6.689,-0.654],[3.576,-4.136],[0.816,-4.956],[4.521,-5.161],[-5.634,-2.368],[-3.812,-6.383],[4.839,-5.644],[4.04,-1.392],[17.303,7.469],[2.965,-5.761],[6.906,-1.112],[6.914,1.061],[-0.527,-15.137],[6.535,-11.573],[3.989,-4.033],[0,0],[-3.048,15.597],[-8.218,2.992],[-8.376,1.127]],'o':[[2.704,-25.5],[-15.038,-1.106],[-6.739,1.295],[-4.602,0.45],[-3.239,3.747],[-1.114,6.763],[7.9,0.995],[6.854,2.88],[3.812,6.383],[-2.781,3.243],[-17.823,6.14],[5.656,2.867],[-3.201,6.219],[-6.906,1.112],[6.815,13.525],[0.462,13.283],[-2.815,4.986],[12.835,2.115],[2.766,-15.65],[1.664,-8.517],[7.706,-2.806],[34.678,-4.665]],'v':[[200.653,276.777],[189.689,201.441],[144.664,204.078],[124.612,208.17],[108.612,210.798],[108.175,231.076],[99.568,249.487],[121.278,253.426],[138.548,266.934],[137.862,287.804],[126.976,294.273],[71.754,292.137],[70.65,315.857],[53.677,326.85],[32.808,325.838],[43.299,369.684],[35.588,408.289],[20.192,462.16],[47.679,466.69],[61.591,379.354],[72.307,340.023],[118.215,330.263]],'c':true}]},{'t':170,'s':[{'i':[[-4.495,42.379],[9.86,23.672],[14.807,-2.845],[6.689,-0.654],[3.576,-4.136],[0.816,-4.956],[4.521,-5.161],[-5.634,-2.368],[-3.812,-6.383],[4.839,-5.644],[4.04,-1.392],[17.303,7.469],[1.989,-6.166],[6.633,-2.22],[6.994,-0.077],[-2.981,-14.849],[4.566,-12.482],[3.28,-4.629],[0,0],[-0.471,15.885],[-7.62,4.293],[-8.376,1.127]],'o':[[2.704,-25.5],[-15.038,-1.106],[-6.739,1.295],[-4.602,0.45],[-3.239,3.747],[-1.114,6.763],[7.9,0.995],[6.854,2.88],[3.812,6.383],[-2.781,3.243],[-17.823,6.14],[5.656,2.867],[-2.147,6.657],[-6.633,2.22],[8.924,12.237],[2.616,13.031],[-1.967,5.377],[13.008,0],[0.184,-15.892],[0.257,-8.674],[7.147,-4.022],[34.678,-4.665]],'v':[[200.653,276.777],[189.689,201.441],[144.664,204.078],[124.612,208.17],[108.612,210.798],[108.175,231.076],[99.568,249.487],[121.278,253.426],[138.548,266.934],[137.862,287.804],[126.976,294.273],[71.754,292.137],[77.955,308.86],[62.996,322.467],[42.24,324.862],[59.721,366.418],[58.389,405.763],[50.807,455.147],[78.664,455.147],[79.342,372.985],[83.519,332.435],[118.215,330.263]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.039215687662,0.121568627656,0.301960796118,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':121,'s':[{'i':[[-0.466,-0.201],[0.488,0.164]],'o':[[-0.45,-0.228],[0.462,0.211]],'v':[[71.754,292.137],[70.353,291.539]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.167,'y':0},'t':141,'s':[{'i':[[-0.466,-0.201],[0.488,0.164]],'o':[[-0.45,-0.228],[0.462,0.211]],'v':[[71.754,292.137],[70.353,291.539]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':150,'s':[{'i':[[-0.466,-0.201],[0.488,0.164]],'o':[[-0.45,-0.228],[0.462,0.211]],'v':[[71.754,292.137],[70.353,291.539]],'c':true}]},{'t':170,'s':[{'i':[[-0.466,-0.201],[0.488,0.164]],'o':[[-0.45,-0.228],[0.462,0.211]],'v':[[71.754,292.137],[70.353,291.539]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.039215687662,0.121568627656,0.301960796118,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':121,'s':[{'i':[[-4.64,-25.119],[-0.276,-1.588],[0,0],[-0.471,15.885],[-7.62,4.293],[-8.376,1.127],[-4.495,42.379],[9.86,23.672],[14.807,-2.845],[6.689,-0.654],[3.576,-4.136],[0.816,-4.956],[5.897,-5.47],[7.738,-3.634],[16.043,-12.004],[2.717,-5.127],[-3.219,-10.897]],'o':[[0.293,1.585],[0,0],[0.184,-15.892],[0.257,-8.674],[7.147,-4.022],[34.678,-4.665],[2.704,-25.5],[-15.038,-1.106],[-6.739,1.295],[-4.603,0.45],[-3.239,3.747],[-1.302,7.909],[-6.268,5.814],[-18.136,8.519],[-4.646,3.477],[-5.32,10.04],[7.239,24.509]],'v':[[35.813,451.384],[36.652,456.147],[78.664,455.147],[79.342,372.985],[83.519,332.435],[118.215,330.263],[200.653,276.777],[189.689,201.441],[144.664,204.078],[124.612,208.17],[108.612,210.798],[108.175,231.076],[97.15,252.002],[75.085,264.854],[23.639,295.745],[11.601,308.116],[12.963,341.266]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.167,'y':0},'t':141,'s':[{'i':[[-0.495,-25.539],[-0.014,-1.612],[0,0],[-3.048,15.597],[-8.218,2.993],[-8.376,1.127],[-4.495,42.379],[9.86,23.672],[14.807,-2.845],[6.689,-0.654],[3.576,-4.136],[0.816,-4.956],[5.897,-5.47],[7.738,-3.634],[16.469,-11.413],[3.515,-4.617],[-1.404,-11.275]],'o':[[0.031,1.612],[0,0],[2.766,-15.65],[1.664,-8.517],[7.706,-2.806],[34.678,-4.665],[2.704,-25.5],[-15.038,-1.106],[-6.739,1.295],[-4.603,0.45],[-3.239,3.747],[-1.302,7.909],[-6.268,5.814],[-18.136,8.519],[-6.139,4.255],[-6.882,9.041],[3.157,25.359]],'v':[[5.739,455.209],[5.793,460.045],[47.679,466.69],[61.591,379.354],[72.307,340.023],[118.215,330.263],[200.653,276.777],[189.689,201.441],[144.664,204.078],[124.612,208.17],[108.612,210.798],[108.175,231.076],[97.15,252.002],[75.085,264.854],[20.639,292.745],[5.301,304.333],[1.254,337.263]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':150,'s':[{'i':[[-0.495,-25.539],[-0.014,-1.612],[0,0],[-3.048,15.597],[-8.218,2.993],[-8.376,1.127],[-4.495,42.379],[9.86,23.672],[14.807,-2.845],[6.689,-0.654],[3.576,-4.136],[0.816,-4.956],[5.897,-5.47],[7.738,-3.634],[16.469,-11.413],[3.515,-4.617],[-1.404,-11.275]],'o':[[0.031,1.612],[0,0],[2.766,-15.65],[1.664,-8.517],[7.706,-2.806],[34.678,-4.665],[2.704,-25.5],[-15.038,-1.106],[-6.739,1.295],[-4.603,0.45],[-3.239,3.747],[-1.302,7.909],[-6.268,5.814],[-18.136,8.519],[-6.139,4.255],[-6.882,9.041],[3.157,25.359]],'v':[[5.739,455.209],[5.793,460.045],[47.679,466.69],[61.591,379.354],[72.307,340.023],[118.215,330.263],[200.653,276.777],[189.689,201.441],[144.664,204.078],[124.612,208.17],[108.612,210.798],[108.175,231.076],[97.15,252.002],[75.085,264.854],[20.639,292.745],[5.301,304.333],[1.254,337.263]],'c':true}]},{'t':170,'s':[{'i':[[-4.64,-25.119],[-0.276,-1.588],[0,0],[-0.471,15.885],[-7.62,4.293],[-8.376,1.127],[-4.495,42.379],[9.86,23.672],[14.807,-2.845],[6.689,-0.654],[3.576,-4.136],[0.816,-4.956],[5.897,-5.47],[7.738,-3.634],[16.043,-12.004],[2.717,-5.127],[-3.219,-10.897]],'o':[[0.293,1.585],[0,0],[0.184,-15.892],[0.257,-8.674],[7.147,-4.022],[34.678,-4.665],[2.704,-25.5],[-15.038,-1.106],[-6.739,1.295],[-4.603,0.45],[-3.239,3.747],[-1.302,7.909],[-6.268,5.814],[-18.136,8.519],[-4.646,3.477],[-5.32,10.04],[7.239,24.509]],'v':[[35.813,451.384],[36.652,456.147],[78.664,455.147],[79.342,372.985],[83.519,332.435],[118.215,330.263],[200.653,276.777],[189.689,201.441],[144.664,204.078],[124.612,208.17],[108.612,210.798],[108.175,231.076],[97.15,252.002],[75.085,264.854],[23.639,295.745],[11.601,308.116],[12.963,341.266]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.066666670144,0.192156866193,0.384313732386,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':13,'ty':4,'nm':'Shape Layer 6','td':1,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[445.5,706,0],'ix':2,'l':2},'a':{'a':0,'k':[8,257.5,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[384.5,120.5],[-368.5,120.5],[-358.5,394.5],[384.5,394.5]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.89019613827,0.364705882353,0.403921598547,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Shape 1','np':3,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':14,'ty':4,'nm':'r leg','tt':1,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[537.684,631.601,0],'ix':2,'l':2},'a':{'a':0,'k':[116.684,208.601,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':118,'s':[{'i':[[12.993,6.514],[22.98,-14.528],[-0.124,-0.906],[5.084,-7.216],[30.244,-8.198],[-5.379,-0.311],[-0.692,-5.343],[5.039,-2.277],[21.571,1.534],[-2.692,-18.774],[0.997,-16.034],[0.047,-0.664],[0,0],[2.778,29.438],[-36.046,15.752],[-10.919,9.592],[-1.379,14.468]],'o':[[-20.679,-10.366],[0.313,0.779],[1.198,8.745],[-18.048,25.616],[5.001,2.004],[5.379,0.311],[0.71,5.483],[-19.706,8.906],[15.611,10.77],[2.28,15.903],[-0.041,0.663],[0,0],[-4.073,-25.352],[38.702,-7.043],[13.318,-5.82],[10.919,-9.592],[1.38,-14.468]],'v':[[112.745,196.327],[42.509,213.258],[43.204,215.761],[34.777,240.19],[-40.699,293.039],[-24.685,294.272],[-12.432,302.706],[-22.19,314.676],[-86.078,320.687],[-62.443,370.608],[-58.443,453.154],[-58.582,455.147],[-36.616,455.147],[-50.45,341.287],[74.67,299.963],[110.446,270.098],[131.23,232.949]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.167,'y':0},'t':138,'s':[{'i':[[12.993,6.514],[22.98,-14.528],[-0.124,-0.906],[5.084,-7.216],[30.244,-8.198],[-5.379,-0.311],[-0.692,-5.343],[5.039,-2.277],[21.486,-2.448],[-6.089,-17.962],[-1.961,-15.945],[-0.075,-0.662],[0,0],[8.13,28.429],[-36.046,15.752],[-10.919,9.592],[-1.379,14.468]],'o':[[-20.679,-10.366],[0.313,0.779],[1.198,8.745],[-18.048,25.616],[5.001,2.004],[5.379,0.311],[0.71,5.483],[-19.706,8.906],[17.322,7.725],[5.158,15.215],[0.081,0.66],[0,0],[-8.654,-24.175],[36.754,-14.021],[13.318,-5.82],[10.919,-9.592],[1.38,-14.468]],'v':[[112.745,196.327],[42.509,213.258],[43.204,215.761],[34.777,240.19],[-40.699,293.039],[-24.685,294.272],[-12.432,302.706],[-22.19,314.676],[-87.504,326.054],[-55.114,370.793],[-36.043,451.206],[-35.814,453.191],[-14.221,449.162],[-48.702,339.771],[74.67,299.963],[110.446,270.098],[131.23,232.949]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':150,'s':[{'i':[[12.993,6.514],[22.98,-14.528],[-0.124,-0.906],[5.084,-7.216],[30.244,-8.198],[-5.379,-0.311],[-0.692,-5.343],[5.039,-2.277],[21.486,-2.448],[-6.089,-17.962],[-1.961,-15.945],[-0.075,-0.662],[0,0],[8.13,28.429],[-36.046,15.752],[-10.919,9.592],[-1.379,14.468]],'o':[[-20.679,-10.366],[0.313,0.779],[1.198,8.745],[-18.048,25.616],[5.001,2.004],[5.379,0.311],[0.71,5.483],[-19.706,8.906],[17.322,7.725],[5.158,15.215],[0.081,0.66],[0,0],[-8.654,-24.175],[36.754,-14.021],[13.318,-5.82],[10.919,-9.592],[1.38,-14.468]],'v':[[112.745,196.327],[42.509,213.258],[43.204,215.761],[34.777,240.19],[-40.699,293.039],[-24.685,294.272],[-12.432,302.706],[-22.19,314.676],[-87.504,326.054],[-55.114,370.793],[-36.043,451.206],[-35.814,453.191],[-14.221,449.162],[-48.702,339.771],[74.67,299.963],[110.446,270.098],[131.23,232.949]],'c':true}]},{'t':170,'s':[{'i':[[12.993,6.514],[22.98,-14.528],[-0.124,-0.906],[5.084,-7.216],[30.244,-8.198],[-5.379,-0.311],[-0.692,-5.343],[5.039,-2.277],[21.571,1.534],[-2.692,-18.774],[0.997,-16.034],[0.047,-0.664],[0,0],[2.778,29.438],[-36.046,15.752],[-10.919,9.592],[-1.379,14.468]],'o':[[-20.679,-10.366],[0.313,0.779],[1.198,8.745],[-18.048,25.616],[5.001,2.004],[5.379,0.311],[0.71,5.483],[-19.706,8.906],[15.611,10.77],[2.28,15.903],[-0.041,0.663],[0,0],[-4.073,-25.352],[38.702,-7.043],[13.318,-5.82],[10.919,-9.592],[1.38,-14.468]],'v':[[112.745,196.327],[42.509,213.258],[43.204,215.761],[34.777,240.19],[-40.699,293.039],[-24.685,294.272],[-12.432,302.706],[-22.19,314.676],[-86.078,320.687],[-62.443,370.608],[-58.443,453.154],[-58.582,455.147],[-36.616,455.147],[-50.45,341.287],[74.67,299.963],[110.446,270.098],[131.23,232.949]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.039215687662,0.121568627656,0.301960796118,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':118,'s':[{'i':[[-0.977,-4.034],[0,0],[2.778,29.438],[-36.046,15.752],[-10.919,9.592],[-1.379,14.468],[12.993,6.514],[25.12,-15.687],[33.83,-24.007],[1.464,-2.344],[0.122,-3.454],[-7.044,-29.232]],'o':[[0,0],[-4.073,-25.352],[38.702,-7.043],[13.318,-5.82],[10.919,-9.592],[1.38,-14.468],[-31.865,-15.973],[-35.185,21.972],[-2.253,1.599],[-1.831,2.931],[-1.058,30.05],[0.972,4.035]],'v':[[-80.924,455.147],[-36.616,455.147],[-50.45,341.287],[74.67,299.963],[110.446,270.098],[131.23,232.949],[112.745,196.327],[9.88,234.995],[-93.673,303.984],[-99.699,309.592],[-101.931,319.59],[-88.853,408.544]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.167,'y':0},'t':138,'s':[{'i':[[-1.7,-3.786],[0,0],[8.13,28.429],[-36.046,15.752],[-10.919,9.592],[-1.379,14.468],[12.993,6.514],[25.12,-15.687],[33.83,-24.007],[1.461,-2.345],[-0.514,-3.417],[-12.286,-27.444]],'o':[[0,0],[-8.654,-24.175],[36.754,-14.021],[13.318,-5.82],[10.919,-9.592],[1.38,-14.468],[-31.865,-15.973],[-35.185,21.972],[-2.253,1.599],[-5.551,8.908],[4.471,29.734],[1.696,3.788]],'v':[[-57.777,457.288],[-14.221,449.162],[-48.702,339.771],[74.67,299.963],[110.446,270.098],[131.23,232.949],[112.745,196.327],[9.88,234.995],[-93.673,303.984],[-99.699,309.592],[-103.289,327.883],[-74.119,412.93]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':150,'s':[{'i':[[-1.7,-3.786],[0,0],[8.13,28.429],[-36.046,15.752],[-10.919,9.592],[-1.379,14.468],[12.993,6.514],[25.12,-15.687],[33.83,-24.007],[1.461,-2.345],[-0.514,-3.417],[-12.286,-27.444]],'o':[[0,0],[-8.654,-24.175],[36.754,-14.021],[13.318,-5.82],[10.919,-9.592],[1.38,-14.468],[-31.865,-15.973],[-35.185,21.972],[-2.253,1.599],[-5.551,8.908],[4.471,29.734],[1.696,3.788]],'v':[[-57.777,457.288],[-14.221,449.162],[-48.702,339.771],[74.67,299.963],[110.446,270.098],[131.23,232.949],[112.745,196.327],[9.88,234.995],[-93.673,303.984],[-99.699,309.592],[-103.289,327.883],[-74.119,412.93]],'c':true}]},{'t':170,'s':[{'i':[[-0.977,-4.034],[0,0],[2.778,29.438],[-36.046,15.752],[-10.919,9.592],[-1.379,14.468],[12.993,6.514],[25.12,-15.687],[33.83,-24.007],[1.464,-2.344],[0.122,-3.454],[-7.044,-29.232]],'o':[[0,0],[-4.073,-25.352],[38.702,-7.043],[13.318,-5.82],[10.919,-9.592],[1.38,-14.468],[-31.865,-15.973],[-35.185,21.972],[-2.253,1.599],[-1.831,2.931],[-1.058,30.05],[0.972,4.035]],'v':[[-80.924,455.147],[-36.616,455.147],[-50.45,341.287],[74.67,299.963],[110.446,270.098],[131.23,232.949],[112.745,196.327],[9.88,234.995],[-93.673,303.984],[-99.699,309.592],[-101.931,319.59],[-88.853,408.544]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.066666670144,0.192156866193,0.384313732386,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':15,'ty':4,'nm':'r hand','parent':10,'sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':1,'k':[{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':0,'s':[-9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':20,'s':[15]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':32,'s':[15]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':42,'s':[12]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.3],'y':[0]},'t':52,'s':[15]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':64,'s':[15]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':84,'s':[-9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':90,'s':[-9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.297],'y':[0]},'t':110,'s':[-9]},{'i':{'x':[0.667],'y':[1]},'o':{'x':[0.333],'y':[0]},'t':150,'s':[-9]},{'t':170,'s':[-9]}],'ix':10},'p':{'a':0,'k':[82.346,-51.497,0],'ix':2,'l':2},'a':{'a':0,'k':[82.346,-51.497,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':0,'s':[{'i':[[16.809,4.962],[0,0],[5.135,-5.094],[1.28,-7.559],[10.755,1.438],[-3.055,-8.581],[1.265,-2.395],[3.938,-0.1],[6.435,0.579],[0.266,-1.061],[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186]],'o':[[0,0],[-6.687,2.38],[1.005,8.513],[-1.812,10.699],[8.403,3.515],[0.908,2.551],[-1.84,3.483],[-6.459,0.165],[-0.262,1.061],[7.527,3.945],[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[64.634,-40.101],[68.133,-14.264],[46.087,5.226],[64.341,24.497],[64.545,32.382],[54.133,36.626],[34.773,35.991],[34.009,39.179],[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':20,'s':[{'i':[[16.809,4.962],[0,0],[5.135,-5.094],[1.28,-7.559],[10.755,1.438],[-3.055,-8.581],[1.265,-2.395],[3.938,-0.1],[6.435,0.579],[0.266,-1.061],[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186]],'o':[[0,0],[-6.687,2.38],[1.005,8.513],[-1.812,10.699],[8.403,3.515],[0.908,2.551],[-1.84,3.483],[-6.459,0.165],[-0.262,1.061],[7.527,3.945],[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[64.634,-40.101],[68.133,-14.264],[46.087,5.226],[64.341,24.497],[64.545,32.382],[54.133,36.626],[34.773,35.991],[34.009,39.179],[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':32,'s':[{'i':[[16.809,4.962],[0,0],[5.135,-5.094],[1.28,-7.559],[10.755,1.438],[-3.055,-8.581],[1.265,-2.395],[3.938,-0.1],[6.435,0.579],[0.266,-1.061],[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186]],'o':[[0,0],[-6.687,2.38],[1.005,8.513],[-1.812,10.699],[8.403,3.515],[0.908,2.551],[-1.84,3.483],[-6.459,0.165],[-0.262,1.061],[7.527,3.945],[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[64.634,-40.101],[68.133,-14.264],[46.087,5.226],[64.341,24.497],[64.545,32.382],[54.133,36.626],[34.773,35.991],[34.009,39.179],[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':42,'s':[{'i':[[16.809,4.962],[0,0],[5.135,-5.094],[1.28,-7.559],[10.755,1.438],[-3.055,-8.581],[1.265,-2.395],[3.938,-0.1],[6.435,0.579],[0.266,-1.061],[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186]],'o':[[0,0],[-6.687,2.38],[1.005,8.513],[-1.812,10.699],[8.403,3.515],[0.908,2.551],[-1.84,3.483],[-6.459,0.165],[-0.262,1.061],[7.527,3.945],[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[64.634,-40.101],[68.133,-14.264],[46.087,5.226],[64.341,24.497],[64.545,32.382],[54.133,36.626],[34.773,35.991],[34.009,39.179],[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':52,'s':[{'i':[[16.809,4.962],[0,0],[5.135,-5.094],[1.28,-7.559],[10.755,1.438],[-3.055,-8.581],[1.265,-2.395],[3.938,-0.1],[6.435,0.579],[0.266,-1.061],[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186]],'o':[[0,0],[-6.687,2.38],[1.005,8.513],[-1.812,10.699],[8.403,3.515],[0.908,2.551],[-1.84,3.483],[-6.459,0.165],[-0.262,1.061],[7.527,3.945],[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[64.634,-40.101],[68.133,-14.264],[46.087,5.226],[64.341,24.497],[64.545,32.382],[54.133,36.626],[34.773,35.991],[34.009,39.179],[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':64,'s':[{'i':[[16.809,4.962],[0,0],[5.135,-5.094],[1.28,-7.559],[10.755,1.438],[-3.055,-8.581],[1.265,-2.395],[3.938,-0.1],[6.435,0.579],[0.266,-1.061],[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186]],'o':[[0,0],[-6.687,2.38],[1.005,8.513],[-1.812,10.699],[8.403,3.515],[0.908,2.551],[-1.84,3.483],[-6.459,0.165],[-0.262,1.061],[7.527,3.945],[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[64.634,-40.101],[68.133,-14.264],[46.087,5.226],[64.341,24.497],[64.545,32.382],[54.133,36.626],[34.773,35.991],[34.009,39.179],[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':84,'s':[{'i':[[16.809,4.962],[0,0],[5.135,-5.094],[1.28,-7.559],[10.755,1.438],[-3.055,-8.581],[1.265,-2.395],[3.938,-0.1],[6.435,0.579],[0.266,-1.061],[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186]],'o':[[0,0],[-6.687,2.38],[1.005,8.513],[-1.812,10.699],[8.403,3.515],[0.908,2.551],[-1.84,3.483],[-6.459,0.165],[-0.262,1.061],[7.527,3.945],[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[64.634,-40.101],[68.133,-14.264],[46.087,5.226],[64.341,24.497],[64.545,32.382],[54.133,36.626],[34.773,35.991],[34.009,39.179],[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':90,'s':[{'i':[[16.809,4.962],[0,0],[5.135,-5.094],[1.28,-7.559],[10.755,1.438],[-3.055,-8.581],[1.265,-2.395],[3.938,-0.1],[6.435,0.579],[0.266,-1.061],[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186]],'o':[[0,0],[-6.687,2.38],[1.005,8.513],[-1.812,10.699],[8.403,3.515],[0.908,2.551],[-1.84,3.483],[-6.459,0.165],[-0.262,1.061],[7.527,3.945],[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[64.634,-40.101],[68.133,-14.264],[46.087,5.226],[64.341,24.497],[64.545,32.382],[54.133,36.626],[34.773,35.991],[34.009,39.179],[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':110,'s':[{'i':[[16.809,4.962],[0,0],[5.135,-5.094],[1.28,-7.559],[10.755,1.438],[-3.055,-8.581],[1.265,-2.395],[3.938,-0.1],[6.435,0.579],[0.266,-1.061],[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186]],'o':[[0,0],[-6.687,2.38],[1.005,8.513],[-1.812,10.699],[8.403,3.515],[0.908,2.551],[-1.84,3.483],[-6.459,0.165],[-0.262,1.061],[7.527,3.945],[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[64.634,-40.101],[68.133,-14.264],[46.087,5.226],[64.341,24.497],[64.545,32.382],[54.133,36.626],[34.773,35.991],[34.009,39.179],[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':150,'s':[{'i':[[16.809,4.962],[0,0],[5.135,-5.094],[1.28,-7.559],[10.755,1.438],[-3.055,-8.581],[1.265,-2.395],[3.938,-0.1],[6.435,0.579],[0.266,-1.061],[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186]],'o':[[0,0],[-6.687,2.38],[1.005,8.513],[-1.812,10.699],[8.403,3.515],[0.908,2.551],[-1.84,3.483],[-6.459,0.165],[-0.262,1.061],[7.527,3.945],[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[64.634,-40.101],[68.133,-14.264],[46.087,5.226],[64.341,24.497],[64.545,32.382],[54.133,36.626],[34.773,35.991],[34.009,39.179],[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'t':170,'s':[{'i':[[16.809,4.962],[0,0],[5.135,-5.094],[1.28,-7.559],[10.755,1.438],[-3.055,-8.581],[1.265,-2.395],[3.938,-0.1],[6.435,0.579],[0.266,-1.061],[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186]],'o':[[0,0],[-6.687,2.38],[1.005,8.513],[-1.812,10.699],[8.403,3.515],[0.908,2.551],[-1.84,3.483],[-6.459,0.165],[-0.262,1.061],[7.527,3.945],[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[64.634,-40.101],[68.133,-14.264],[46.087,5.226],[64.341,24.497],[64.545,32.382],[54.133,36.626],[34.773,35.991],[34.009,39.179],[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.57647061348,0.470588237047,0.86274510622,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':0,'s':[{'i':[[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186],[16.809,4.962],[0,0],[6.634,-14.425],[3.453,-15.318],[1.036,-4.128]],'o':[[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186],[0,0],[-14.698,5.232],[-6.633,14.425],[-0.935,4.146],[7.527,3.945]],'v':[[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398],[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[34.009,39.179]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':20,'s':[{'i':[[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186],[16.809,4.962],[0,0],[6.634,-14.425],[3.453,-15.318],[1.036,-4.128]],'o':[[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186],[0,0],[-14.698,5.232],[-6.633,14.425],[-0.935,4.146],[7.527,3.945]],'v':[[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398],[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[34.009,39.179]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':32,'s':[{'i':[[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186],[16.809,4.962],[0,0],[6.634,-14.425],[3.453,-15.318],[1.036,-4.128]],'o':[[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186],[0,0],[-14.698,5.232],[-6.633,14.425],[-0.935,4.146],[7.527,3.945]],'v':[[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398],[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[34.009,39.179]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':42,'s':[{'i':[[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186],[16.809,4.962],[0,0],[6.634,-14.425],[3.453,-15.318],[1.036,-4.128]],'o':[[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186],[0,0],[-14.698,5.232],[-6.633,14.425],[-0.935,4.146],[7.527,3.945]],'v':[[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398],[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[34.009,39.179]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':52,'s':[{'i':[[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186],[16.809,4.962],[0,0],[6.634,-14.425],[3.453,-15.318],[1.036,-4.128]],'o':[[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186],[0,0],[-14.698,5.232],[-6.633,14.425],[-0.935,4.146],[7.527,3.945]],'v':[[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398],[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[34.009,39.179]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':64,'s':[{'i':[[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186],[16.809,4.962],[0,0],[6.634,-14.425],[3.453,-15.318],[1.036,-4.128]],'o':[[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186],[0,0],[-14.698,5.232],[-6.633,14.425],[-0.935,4.146],[7.527,3.945]],'v':[[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398],[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[34.009,39.179]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':84,'s':[{'i':[[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186],[16.809,4.962],[0,0],[6.634,-14.425],[3.453,-15.318],[1.036,-4.128]],'o':[[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186],[0,0],[-14.698,5.232],[-6.633,14.425],[-0.935,4.146],[7.527,3.945]],'v':[[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398],[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[34.009,39.179]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':90,'s':[{'i':[[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186],[16.809,4.962],[0,0],[6.634,-14.425],[3.453,-15.318],[1.036,-4.128]],'o':[[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186],[0,0],[-14.698,5.232],[-6.633,14.425],[-0.935,4.146],[7.527,3.945]],'v':[[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398],[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[34.009,39.179]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':110,'s':[{'i':[[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186],[16.809,4.962],[0,0],[6.634,-14.425],[3.453,-15.318],[1.036,-4.128]],'o':[[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186],[0,0],[-14.698,5.232],[-6.633,14.425],[-0.935,4.146],[7.527,3.945]],'v':[[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398],[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[34.009,39.179]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':150,'s':[{'i':[[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186],[16.809,4.962],[0,0],[6.634,-14.425],[3.453,-15.318],[1.036,-4.128]],'o':[[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186],[0,0],[-14.698,5.232],[-6.633,14.425],[-0.935,4.146],[7.527,3.945]],'v':[[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398],[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[34.009,39.179]],'c':true}]},{'t':170,'s':[{'i':[[-8.312,-1.717],[-10.398,-3.57],[-1.539,2.904],[-0.563,18.186],[16.809,4.962],[0,0],[6.634,-14.425],[3.453,-15.318],[1.036,-4.128]],'o':[[10.851,2.242],[1.585,-2.881],[8.753,-16.509],[0.563,-18.186],[0,0],[-14.698,5.232],[-6.633,14.425],[-0.935,4.146],[7.527,3.945]],'v':[[58.182,47.209],[90.668,54.531],[95.358,45.856],[112.873,-6.398],[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[34.009,39.179]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.717647075653,0.592156887054,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':1,'k':[{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':0,'s':[{'i':[[16.809,4.962],[0,0],[6.633,-14.425],[3.453,-15.318],[6.256,-18.259],[1.347,-3.04],[3.46,-3.108],[18.007,-14.474],[8.969,-7.761],[-2.227,-6.322],[-10.057,4.973],[-20.054,11.614],[-3.736,4.262],[-2.189,5.161],[-13.135,24.776],[-0.563,18.186]],'o':[[0,0],[-14.698,5.232],[-6.633,14.425],[-4.218,18.709],[-1.067,3.116],[-1.905,4.3],[-17.245,15.487],[-9.235,7.423],[-5.115,4.426],[5.898,16.746],[20.672,-10.221],[4.809,-2.785],[3.676,-4.194],[10.979,-25.886],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[21.256,82.283],[16.299,93.063],[7.378,103.75],[-45.516,148.704],[-73.633,170.656],[-79.046,181.518],[-27.527,168.696],[33.585,135.932],[47.019,125.98],[55.206,111.387],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':20,'s':[{'i':[[16.809,4.962],[0,0],[6.633,-14.425],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[4.048,-2.29],[20.701,-10.259],[10.43,-5.648],[-0.808,-6.654],[-10.892,2.692],[-22.084,7.025],[-4.565,3.358],[-3.249,4.569],[-13.135,24.776],[-0.563,18.186]],'o':[[0,0],[-14.698,5.232],[-6.633,14.425],[-4.218,18.709],[-1.067,3.116],[-2.786,3.789],[-20.174,11.412],[-10.617,5.262],[-5.948,3.221],[2.155,17.623],[22.387,-5.533],[5.296,-1.685],[4.493,-3.304],[16.293,-22.917],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[21.256,82.283],[17.091,91.245],[6.079,99.761],[-55.25,132.277],[-87.433,147.664],[-95.057,157.106],[-41.986,155.673],[24.746,136.829],[40.007,130.002],[51.142,117.513],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':32,'s':[{'i':[[16.809,4.962],[0,0],[6.633,-14.425],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[4.048,-2.29],[20.701,-10.259],[10.43,-5.648],[-0.808,-6.654],[-10.892,2.692],[-22.084,7.025],[-4.565,3.358],[-3.249,4.569],[-13.135,24.776],[-0.563,18.186]],'o':[[0,0],[-14.698,5.232],[-6.633,14.425],[-4.218,18.709],[-1.067,3.116],[-2.786,3.789],[-20.174,11.412],[-10.617,5.262],[-5.948,3.221],[2.155,17.623],[22.387,-5.533],[5.296,-1.685],[4.493,-3.304],[16.293,-22.917],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[21.256,82.283],[17.091,91.245],[6.079,99.761],[-55.25,132.277],[-87.433,147.664],[-95.057,157.106],[-41.986,155.673],[24.746,136.829],[40.007,130.002],[51.142,117.513],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':42,'s':[{'i':[[16.809,4.962],[0,0],[6.633,-14.425],[3.453,-15.318],[4.95,-18.655],[1.775,-2.811],[3.876,-2.57],[19.924,-11.697],[10.004,-6.371],[-1.282,-6.579],[-10.674,3.455],[-21.532,8.568],[-4.317,3.672],[-2.918,4.787],[-13.135,24.776],[-0.563,18.186]],'o':[[0,0],[-14.698,5.232],[-6.633,14.425],[-4.218,18.709],[-0.845,3.183],[-2.511,3.977],[-19.317,12.81],[-10.218,5.999],[-5.705,3.633],[3.395,17.426],[21.94,-7.101],[5.164,-2.055],[4.248,-3.614],[14.633,-24.011],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[23.481,86.245],[19.96,95.478],[9.578,104.751],[-49.301,141.52],[-80.316,159.142],[-87.254,169.1],[-34.416,163.92],[30.817,140.408],[45.557,132.519],[55.783,119.274],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':52,'s':[{'i':[[16.809,4.962],[0,0],[6.633,-14.425],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[4.048,-2.29],[20.701,-10.259],[10.43,-5.648],[-0.808,-6.654],[-10.892,2.692],[-22.084,7.025],[-4.565,3.358],[-3.249,4.569],[-13.135,24.776],[-0.563,18.186]],'o':[[0,0],[-14.698,5.232],[-6.633,14.425],[-4.218,18.709],[-1.067,3.116],[-2.786,3.789],[-20.174,11.412],[-10.617,5.262],[-5.948,3.221],[2.155,17.623],[22.387,-5.533],[5.296,-1.685],[4.493,-3.304],[16.293,-22.917],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[21.256,82.283],[17.091,91.245],[6.079,99.761],[-55.25,132.277],[-87.433,147.664],[-95.057,157.106],[-41.986,155.673],[24.746,136.829],[40.007,130.002],[51.142,117.513],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':64,'s':[{'i':[[16.809,4.962],[0,0],[6.633,-14.425],[3.453,-15.318],[6.256,-18.259],[1.969,-2.679],[4.048,-2.29],[20.701,-10.259],[10.43,-5.648],[-0.808,-6.654],[-10.892,2.692],[-22.084,7.025],[-4.565,3.358],[-3.249,4.569],[-13.135,24.776],[-0.563,18.186]],'o':[[0,0],[-14.698,5.232],[-6.633,14.425],[-4.218,18.709],[-1.067,3.116],[-2.786,3.789],[-20.174,11.412],[-10.617,5.262],[-5.948,3.221],[2.155,17.623],[22.387,-5.533],[5.296,-1.685],[4.493,-3.304],[16.293,-22.917],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[21.256,82.283],[17.091,91.245],[6.079,99.761],[-55.25,132.277],[-87.433,147.664],[-95.057,157.106],[-41.986,155.673],[24.746,136.829],[40.007,130.002],[51.142,117.513],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':84,'s':[{'i':[[16.809,4.962],[0,0],[6.633,-14.425],[3.453,-15.318],[6.256,-18.259],[1.347,-3.04],[3.46,-3.108],[18.007,-14.474],[8.969,-7.761],[-2.227,-6.322],[-10.057,4.973],[-20.054,11.614],[-3.736,4.262],[-2.189,5.161],[-13.135,24.776],[-0.563,18.186]],'o':[[0,0],[-14.698,5.232],[-6.633,14.425],[-4.218,18.709],[-1.067,3.116],[-1.905,4.3],[-17.245,15.487],[-9.235,7.423],[-5.115,4.426],[5.898,16.746],[20.672,-10.221],[4.809,-2.785],[3.676,-4.194],[10.979,-25.886],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[21.256,82.283],[16.299,93.063],[7.378,103.75],[-45.516,148.704],[-73.633,170.656],[-79.046,181.518],[-27.527,168.696],[33.585,135.932],[47.019,125.98],[55.206,111.387],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':90,'s':[{'i':[[16.809,4.962],[0,0],[6.633,-14.425],[3.453,-15.318],[6.256,-18.259],[1.347,-3.04],[3.46,-3.108],[18.007,-14.474],[8.969,-7.761],[-2.227,-6.322],[-10.057,4.973],[-20.054,11.614],[-3.736,4.262],[-2.189,5.161],[-13.135,24.776],[-0.563,18.186]],'o':[[0,0],[-14.698,5.232],[-6.633,14.425],[-4.218,18.709],[-1.067,3.116],[-1.905,4.3],[-17.245,15.487],[-9.235,7.423],[-5.115,4.426],[5.898,16.746],[20.672,-10.221],[4.809,-2.785],[3.676,-4.194],[10.979,-25.886],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[21.256,82.283],[16.299,93.063],[7.378,103.75],[-45.516,148.704],[-73.633,170.656],[-79.046,181.518],[-27.527,168.696],[33.585,135.932],[47.019,125.98],[55.206,111.387],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':110,'s':[{'i':[[16.809,4.962],[0,0],[6.633,-14.425],[3.453,-15.318],[6.256,-18.259],[1.347,-3.04],[3.46,-3.108],[18.007,-14.474],[8.969,-7.761],[-2.227,-6.322],[-10.057,4.973],[-20.054,11.614],[-3.736,4.262],[-2.189,5.161],[-13.135,24.776],[-0.563,18.186]],'o':[[0,0],[-14.698,5.232],[-6.633,14.425],[-4.218,18.709],[-1.067,3.116],[-1.905,4.3],[-17.245,15.487],[-9.235,7.423],[-5.115,4.426],[5.898,16.746],[20.672,-10.221],[4.809,-2.785],[3.676,-4.194],[10.979,-25.886],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[21.256,82.283],[16.299,93.063],[7.378,103.75],[-45.516,148.704],[-73.633,170.656],[-79.046,181.518],[-27.527,168.696],[33.585,135.932],[47.019,125.98],[55.206,111.387],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'i':{'x':0.667,'y':1},'o':{'x':0.333,'y':0},'t':150,'s':[{'i':[[16.809,4.962],[0,0],[6.633,-14.425],[3.453,-15.318],[6.256,-18.259],[1.347,-3.04],[3.46,-3.108],[18.007,-14.474],[8.969,-7.761],[-2.227,-6.322],[-10.057,4.973],[-20.054,11.614],[-3.736,4.262],[-2.189,5.161],[-13.135,24.776],[-0.563,18.186]],'o':[[0,0],[-14.698,5.232],[-6.633,14.425],[-4.218,18.709],[-1.067,3.116],[-1.905,4.3],[-17.245,15.487],[-9.235,7.423],[-5.115,4.426],[5.898,16.746],[20.672,-10.221],[4.809,-2.785],[3.676,-4.194],[10.979,-25.886],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[21.256,82.283],[16.299,93.063],[7.378,103.75],[-45.516,148.704],[-73.633,170.656],[-79.046,181.518],[-27.527,168.696],[33.585,135.932],[47.019,125.98],[55.206,111.387],[95.358,45.856],[112.873,-6.398]],'c':true}]},{'t':170,'s':[{'i':[[16.809,4.962],[0,0],[6.633,-14.425],[3.453,-15.318],[6.256,-18.259],[1.347,-3.04],[3.46,-3.108],[18.007,-14.474],[8.969,-7.761],[-2.227,-6.322],[-10.057,4.973],[-20.054,11.614],[-3.736,4.262],[-2.189,5.161],[-13.135,24.776],[-0.563,18.186]],'o':[[0,0],[-14.698,5.232],[-6.633,14.425],[-4.218,18.709],[-1.067,3.116],[-1.905,4.3],[-17.245,15.487],[-9.235,7.423],[-5.115,4.426],[5.898,16.746],[20.672,-10.221],[4.809,-2.785],[3.676,-4.194],[10.979,-25.886],[8.753,-16.509],[0.563,-18.186]],'v':[[87.559,-48.473],[82.408,-51.662],[49.89,-18.587],[36.984,26.772],[21.256,82.283],[16.299,93.063],[7.378,103.75],[-45.516,148.704],[-73.633,170.656],[-79.046,181.518],[-27.527,168.696],[33.585,135.932],[47.019,125.98],[55.206,111.387],[95.358,45.856],[112.873,-6.398]],'c':true}]}],'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.890196084976,0.364705890417,0.403921574354,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':16,'ty':4,'nm':'Layer 2','sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[421,423,0],'ix':2,'l':2},'a':{'a':0,'k':[0,0,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-6.195,1.861],[-16.861,-1.375],[-0.181,-0.034],[0,0],[-69.266,-6.527],[0,0],[0,0]],'o':[[75.522,-22.69],[0.183,0.015],[0,0],[0,0],[0,0],[0,0],[0,-6.469]],'v':[[54.939,317.302],[257.504,310.106],[258.044,310.229],[332.386,72.356],[401.43,-69.371],[271.869,331.388],[44.544,331.388]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.211764708161,0.070588238537,0.203921571374,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[140.501,420.647],[140.501,398.891],[109.612,398.891],[109.612,420.647]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.701960802078,0.57647061348,0.686274528503,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[92.407,398.891],[172.461,398.891],[190.825,381.244],[74.043,381.244]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.149019613862,0.066666670144,0.145098045468,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 3','np':2,'cix':2,'bm':0,'ix':3,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[66.099,381.244],[198.769,381.244],[229.202,363.597],[35.666,363.597]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.149019613862,0.066666670144,0.145098045468,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 4','np':2,'cix':2,'bm':0,'ix':4,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,-8.887],[0,0],[-8.887,0],[0,0],[0,0],[0,0]],'o':[[0,0],[-8.887,0],[0,0],[0,8.887],[0,0],[0,0],[0,0],[0,0]],'v':[[271.869,331.388],[70.663,331.388],[54.572,347.479],[54.572,347.479],[70.663,363.571],[282.596,363.571],[407.046,-64.716],[401.43,-69.371]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.568627476692,0.407843142748,0.560784339905,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 5','np':2,'cix':2,'bm':0,'ix':5,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[-8.887,0],[0,0],[0,0],[0,0],[0,-8.887],[0,0]],'o':[[0,0],[0,0],[0,0],[-8.887,0],[0,0],[0,8.887]],'v':[[-69.172,363.571],[85.426,363.571],[85.426,331.388],[-69.172,331.388],[-85.263,347.479],[-85.263,347.479]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.658823549747,0.541176497936,0.635294139385,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 6','np':2,'cix':2,'bm':0,'ix':6,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[42.673,-5.938],[3.426,-11.46],[0,0],[0,0]],'o':[[0,0],[-11.846,1.648],[0,0],[0,0],[0,0]],'v':[[85.426,310.289],[-44.147,309.814],[-69.172,331.388],[-69.172,331.388],[70.663,331.388]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.305882364511,0.105882354081,0.254901975393,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 7','np':2,'cix':2,'bm':0,'ix':7,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[-93.933,-3.182],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0],[0,0]],'v':[[-44.147,309.814],[94.014,295.324],[257.504,310.106],[132.434,319.34],[-30.441,319.34]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.517647087574,0.20000000298,0.43137255311,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 8','np':2,'cix':2,'bm':0,'ix':8,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[-4.297,0.417],[-31.49,20.263],[4.263,33.43],[24.533,23.105],[-33.636,15.192],[-20.954,20.197]],'o':[[0,0],[0,0],[4.257,-0.676],[37.271,-3.617],[28.34,-18.236],[-4.263,-33.43],[36.707,-3.837],[28.949,-13.076],[0,0]],'v':[[257.504,326.018],[85.426,303.554],[102.957,246.03],[115.782,244.355],[225.263,226.265],[262.481,137.954],[214.288,51.357],[321.891,27.448],[385.987,-26.946]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.341176480055,0.074925027788,0.27290686965,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':40,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 9','np':2,'cix':2,'bm':0,'ix':9,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[10.297,-9.334],[-13.105,-68.33],[0,0],[0,0]],'o':[[0,0],[-10.296,9.335],[0,0],[0,0],[0,0]],'v':[[401.43,-69.371],[190.825,-69.371],[153.605,79.844],[85.426,303.554],[257.504,326.018]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'gf','o':{'a':0,'k':100,'ix':10},'r':1,'bm':0,'g':{'p':3,'k':{'a':0,'k':[0.062,0.502,0.196,0.424,0.531,0.404,0.151,0.339,1,0.306,0.106,0.255],'ix':9}},'s':{'a':0,'k':[447.857,-69],'ix':5},'e':{'a':0,'k':[566.25,-420.441],'ix':6},'t':1,'nm':'Gradient Fill 1','mn':'ADBE Vector Graphic - G-Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 10','np':2,'cix':2,'bm':0,'ix':10,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0},{'ddd':0,'ind':17,'ty':4,'nm':'Layer 1','sr':1,'ks':{'o':{'a':0,'k':100,'ix':11},'r':{'a':0,'k':0,'ix':10},'p':{'a':0,'k':[539.75,140.512,0],'ix':2,'l':2},'a':{'a':0,'k':[118.75,-282.488,0],'ix':1,'l':2},'s':{'a':0,'k':[100,100,100],'ix':6,'l':2}},'ao':0,'shapes':[{'ty':'gr','it':[{'ty':'gr','it':[{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,-7.364],[7.364,0],[0,7.364],[-7.364,0]],'o':[[0,7.364],[-7.364,0],[0,-7.364],[7.364,0]],'v':[[362.197,-387.651],[348.864,-374.318],[335.531,-387.651],[348.864,-400.983]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,-16.211],[31.913,0],[0,31.913],[-10.757,10.485],[0,0]],'o':[[0,31.913],[-31.913,0],[0,-16.211],[0,0],[10.757,10.485]],'v':[[406.64,-387.656],[348.864,-329.88],[291.088,-387.656],[308.523,-429],[389.205,-429]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.913725495338,0.913725495338,0.913725495338,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[424.941,-429],[424.941,-301.094],[262.37,-301.094],[262.37,-429]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.784313738346,0.784313738346,0.784313738346,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[424.941,-275.781],[157.235,-275.781],[157.235,-301.09],[424.941,-301.09]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.913725495338,0.913725495338,0.913725495338,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-64.273,-172.974],[-150.229,-172.974],[-150.229,-304.592],[-64.273,-304.592]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[1,1,1,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 1','np':2,'cix':2,'bm':0,'ix':1,'mn':'ADBE Vector Group','hd':false},{'ty':'gr','it':[{'ind':0,'ty':'sh','ix':1,'ks':{'a':0,'k':{'i':[[0,0],[0,0],[0,0],[0,0]],'o':[[0,0],[0,0],[0,0],[0,0]],'v':[[-27.06,-135.976],[-187.442,-135.976],[-187.442,-341.59],[-27.06,-341.59]],'c':true},'ix':2},'nm':'Path 1','mn':'ADBE Vector Shape - Group','hd':false},{'ty':'fl','c':{'a':0,'k':[0.913725495338,0.913725495338,0.913725495338,1],'ix':4},'o':{'a':0,'k':100,'ix':5},'r':1,'bm':0,'nm':'Fill 1','mn':'ADBE Vector Graphic - Fill','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false},{'ty':'tr','p':{'a':0,'k':[0,0],'ix':2},'a':{'a':0,'k':[0,0],'ix':1},'s':{'a':0,'k':[100,100],'ix':3},'r':{'a':0,'k':0,'ix':6},'o':{'a':0,'k':100,'ix':7},'sk':{'a':0,'k':0,'ix':4},'sa':{'a':0,'k':0,'ix':5},'nm':'Transform'}],'nm':'Group 2','np':2,'cix':2,'bm':0,'ix':2,'mn':'ADBE Vector Group','hd':false}],'ip':0,'op':180,'st':0,'bm':0}],'markers':[]}

================================================
File: packages.txt
================================================
freeglut3-dev
libgtk2.0-dev
libgl1-mesa-glx
tesseract-ocr
libtesseract-dev
tesseract-ocr-all
portaudio19-dev
libespeak1
python3-opencv

================================================
File: requirements.txt
================================================
numpy
pandas
scikit-learn
tensorflow
opencv-python-headless
streamlit
streamlit-webrtc
speechrecognition
mediapipe
nltk
pyaudio
audio-recorder-streamlit
assemblyai
twilio
python-dotenv
streamlit-lottie
path
requests
#-e .

================================================
File: setup.py
================================================
from setuptools import find_packages,setup
from typing import List

HYPEN_E_DOT='-e .'
def get_requirements(file_path:str)->List[str]:
    '''
    this function will return the list of requirements
    '''
    requirements=[]
    with open(file_path) as file_obj:
        requirements=file_obj.readlines()
        requirements=[req.replace('\n','') for req in requirements]

        if HYPEN_E_DOT in requirements:
            requirements.remove(HYPEN_E_DOT)
    
    return requirements

setup(
name='Emotion_Recognition_Using_NLP_CV',
version='0.0.1',
author='Parthiban Ravichandran',
author_email='rparthiban729@gmail.com',
packages=find_packages(),
install_requires=get_requirements('requirements.txt')
)


================================================
File: twilio.env
================================================
import os

# Set your speech key and region
#speech_key = 'eef86f039bdb4ed8a627675d897924e9'
#speech_region = 'eastus'

# Export the environment variables
#os.environ['SPEECH_KEY'] = speech_key
#os.environ['SPEECH_REGION'] = speech_region


## twilio
TWILIO_ACCOUNT_SID=ACd3b01d2afa64dd275e4fa3bb8e06b92c
TWILIO_AUTH_TOKEN=cf396b73e18c0423136260b48c8e5c8f


================================================
File: artifacts/Bi-LSTM.h5
================================================
version https://git-lfs.github.com/spec/v1
oid sha256:b431b8659f28f511259dfb2741321368b5fb5dadc8ae6e0f70c5dd03b4396171
size 97396984


================================================
File: artifacts/CNN_final.h5
================================================
version https://git-lfs.github.com/spec/v1
oid sha256:a08422082a157f5eb49f17ad562eed04219781fc5c6a805a282caa251ab1cc4c
size 78793512


================================================
File: artifacts/test_nlp.csv
================================================
text,label
im feeling rather rotten so im not very ambitious right now,0
im updating my blog because i feel shitty,0
i never make her separate from me because i don t ever want her to feel like i m ashamed with her,0
i left with my bouquet of red and yellow tulips under my arm feeling slightly more optimistic than when i arrived,1
i was feeling a little vain when i did this one,0
i cant walk into a shop anywhere where i do not feel uncomfortable,4
i felt anger when at the end of a telephone call,3
i explain why i clung to a relationship with a boy who was in many ways immature and uncommitted despite the excitement i should have been feeling for getting accepted into the masters program at the university of virginia,1
i like to have the same breathless feeling as a reader eager to see what will happen next,1
i jest i feel grumpy tired and pre menstrual which i probably am but then again its only been a week and im about as fit as a walrus on vacation for the summer,3
i don t feel particularly agitated,4
i feel beautifully emotional knowing that these women of whom i knew just a handful were holding me and my baba on our journey,0
i pay attention it deepens into a feeling of being invaded and helpless,4
i just feel extremely comfortable with the group of people that i dont even need to hide myself,1
i find myself in the odd position of feeling supportive of,2
i was feeling as heartbroken as im sure katniss was,0
i feel a little mellow today,1
i feel like my only role now would be to tear your sails with my pessimism and discontent,0
i feel just bcoz a fight we get mad to each other n u wanna make a publicity n let the world knows about our fight,3
i feel like reds and purples are just so rich and kind of perfect,1
im not sure the feeling of loss will ever go away but it may dull to a sweet feeling of nostalgia at what i shared in this life with my dad and the luck i had to have a dad for years,0
i feel like ive gotten to know many of you through comments and emails and for that im appreciative and glad you are a part of this little space,1
i survey my own posts over the last few years and only feel pleased with vague snippets of a few of them only feel that little bits of them capture what its like to be me or someone like me in dublin in the st century,1
i also tell you in hopes that anyone who is still feeling stigmatized or ashamed of their mental health issues will let go of the stigma let go of the shame,0
i don t feel guilty like i m not going to be able to cook for him,0
i hate it when i feel fearful for absolutely no reason,4
i am feeling outraged it shows everywhere,3
i stole a book from one of my all time favorite authors and now i feel like a rotten person,0
i do feel insecure sometimes but who doesnt,4
i highly recommend visiting on a wednesday if youre able because its less crowded so you get to ask the farmers more questions without feeling rude for holding up a line,3
ive been missing him and feeling so restless at home thinking of him,4
i posted on my facebook page earlier this week ive been feeling a little grumpy and out of sorts the past few days,3
i start to feel emotional,0
i feel so cold a href http irish,3
i feel like i m defective or something for not having baby fever,0
i feel more virtuous than when i eat veggies dipped in hummus,1
i feel very honoured to be included in a magzine which prioritises health and clean living so highly im curious do any of you read magazines concerned with health and clean lifestyles such as the green parent,1
i spent the last two weeks of school feeling miserable,0
im feeling very peaceful about our wedding again now after having,1
i had been talking to coach claudia barcomb and coach ali boe for a long time and they both made me feel very welcomed at union,1
i feel if i completely hated things i d exercise my democratic right speak my mind in what ever ways possible and try to enact a change,3
i feel humiliated embarrassed or foolish i will remember that others have felt the same way because of the same kinds of things and i will be kind and helpful and accepting,0
i feel reassured that i am dealing with my diet in the right way and that all is good,1
i feel i have to agree with her even though i can imagine some rather unpleasant possible cases,0
im in such a happy mood today i feel almost delighted and i havent done anything different today then i normally have it is wonderful,1
im feeling really out of place and irritated,3
i also know that i feel nothing than a friendly affection to them too,1
i feel like i had a rather productive weekend and i cant always say that no matter how much i get done,1
im feeling insecure at the moment,4
i was feeling pretty anxious all day but my first day at work was a very good day and that helped a lot,4
i stood up to you i finally stood up to you and now i feel like im being punished if i could go back and do it again,0
i feel a little nervous i go to the gym,4
i feel like i could go into any situation and become successful because i ve been competing all my life explained schaub in an interview with the a href http bleacherreport,1
i can t stop the anxiety i feel when i m alone when i ve got no distractions,0
im trying to feel out my house style now that im living on my own and have creative carte blanche,1
i have tried to see what it would be like if i liked one of my girl friends but it has never really worked and i can only ever feel an emotional connection to them because they are my friends,0
i had every intention of doing more gardening this morning while it was still cool but i was just feeling so rotten,0
i have a good feeling about this so i am excited,1
i feel like i am just starting to understand the blessings that come from being submissive to the will of the father,0
i think about the things ive said and the stuff i have done it makes me feel disgusted in myself when i should be making you happy and smile which i was far from doing,3
i woke up yesterday monday morning feeling a little depressed,0
i feel so embarrassed,0
i spent wandering around still kinda dazed and not feeling particularly sociable but because id been in hiding for a couple for days and it was getting to be a little unhealthy i made myself go down to the cross and hang out with folks,1
i can honestly say that after each sistahs chat i feel invigorated and blessed,1
i still feel stupid to be in that class this is all cause off pbss fault,0
i feel a little stunned but can t imagine what the folks who were working in the studio up until this morning are feeling,5
i admit im feeling a little bit unloved at this point,0
i feel a bit stressed even though all the things i have going on are fun,3
im feeling pretty anxious,4
i feel shocked and sad at the fact that there are so many sick people,5
i think they have always been proponents of the idea and it is just slightly possible that his feelings for a particularly charming new england girl have brought him around to their way of thinking,1
i feel like a naughty school girl because i am falling behind,2
i am right handed however i play billiards left handed naturally so me trying to play right handed feels weird,5
i can feel that they are kind friendly and can understand my feelings,1
i were to go overseas or cross the border then i become a foreigner and will feel that way but never in my beloved land,2
i feel disgusted in any man in power who talks about electricity being a problem in his area and says even my own house has similar problems,3
i feel transcendant and splendid,1
i finally arrived home a couple of hours later feeling somewhat exhausted dehydrated and even sun burnt,0
i am feeling totally relaxed and comfy,1
i want each of you to feel my gentle embrace,2
i feel privileged in my world,1
i am not a people person but for some fuckin reason people feel that they can come bore me with their fuckin petty garbage,3
i realized my mistake and i m really feeling terrible and thinking that i shouldn t do that,0
i suppose i feel too trusting sometimes,1
i came home waiting for the shower read something which made me upset thats why i feel discontent haha,0
i woke up feeling crappy tired and fighting this feeling all day maybe it is all the pollen the barometric pressure i dont know i know i was off kilter,0
i feel like i am in paradise kissing those sweet lips make me feel like i dive into a magical world of love,1
i am feeling so happy,1
i am running at an approximate minute pace which i feel is quite acceptable,1
i feel so disappointed when my ex girlfriend doesn t call me back,0
i have a feeling that people are using it more than they need to and enjoying the feeling as it flies carefree off the tongue but that is alright with me,1
i am feeling uncertain of the merits of posting to this blog with the frequency or earnestness i had been over the previous year,4
i just plain feel envious of the self confidence they had,3
i was feeling weird the other day and it went away about minutes after i took my metformin,4
when a friend dropped a frog down my neck,3
im feeling angry at someone i do something thoughtful for her and my feelings toward her soften,3
i love neglecting this blog but sometimes i feel for my faithful readers,2
i lay in bed feeling as though i were awaiting an unwelcome visitor nevertheless i told myself i was strong and thought of good things until i felt better,0
i feel my heart is tortured by what i have done,3
i was still feeling weepy and strung out so maggie treated me to ice cream and a movie a href http www,0
i feel needy but comfortable with it i feel vulnerable but secure i feel the urge to cum hard but i get no relief,0
i journaled about my tendency to sometimes overcommit myself which can make me feel exhausted and overwhelmed,0
i started out feeling discouraged this morning,0
i feel agitated with myself that i did not foresee her frustrations earlier leading to the ending of our relationship,4
i grab it from the air its smooth frame feels cold to the touch,3
i was angry at my boyfriend who had promised to come to see me but did not because he spent the evening with his pals,3
i hate that i m sitting here at the hostel writing this and feeling so perfectly fine and than i get home and it s me and my problems and a wall,1
i do exercise i feel energetic and i am able to perform my other tasks in a very good manner,1
i looked at mabel this morning i named my left breast mabel my right one is hazel and i feel this weird mixture of anger and loss valerie wrote less than a month after her diagnosis,4
im feeling pretty disheartened by the whole thing,0
i feel that an input from me will be valued as being less potent than say that of irfan pathan,1
i feel is he generous,2
i even feel a little shaky,4
i am feeling better though i dont sound it,1
i always feel troubled when we re on the road touring living in a van or more recently in the circus buses no place to hang my hat as the song lyric has it,0
i feel our world then was a much more innocent place,1
i feel thoroughly virtuous even if the daily trip to the compost bin isn t the most pleasant experience,1
im not feeling anything suspicious really,4
i was feeling a little sentimental today,0
i feel like i know who most of them are by now and am starting to develop my likes and dislikes though i have not been keen on the snap evictions they have seemed pretty pointless the first one to go returned and the two webmates made absolutely zero impact on me so they won t be missed,1
i feel less whiney since the sun came out here in the sf area,0
made a wonderfull new friend,1
i feel almost embarrassed to mention the single redshank and common sandpiper but there again who would not want to mention the lone wood sandpiper present at the waters edge,0
i know its easy to feel a little envious of me and i cant tell you that you shouldnt,3
i would feel awful if she was here this whole time,0
i feel very mislead by someone that i really really thought i knew and liked very much so,2
i feel like we are doomed us humans,0
i am going to have to check on in just a few minutes but there is this clock up above the screen that keeps ticking down the minutes i have left so am feeling a bit frantic,4
i got the sleep but if i could choose not to be woken up by an alarm i d definitely take that over anything it makes me feel so groggy,0
ive been boring for few weeks and feeling a bit gloomy cause of the rainy days,0
i feel that this information is vital to moving on with your day and you re not complete until you read it,1
im feeling generous today heres one more you may have already seen but is good for a chuckle,2
i will feel awkward about just calling up one of these people out of the blue to hang out or rather to be familiar with them on a deeper level they are not my kith and kin,0
i don t like the feeling i get when someone is even a little bit offended by some offhand remark i ve made,3
i get it crumble but thanks for feeling the need to tell me that im the one who is fucked up,3
i am controlling the growth of this business and every time i post work for a client i feel even more determined to make it a full time business one day,1
i was pregnant with dean i spent the rest of my pregnancy feeling terrified about having another baby,4
i actually feel agitated which led to a terrible day yesterday in which i was unable to concentrate on anything and basically piddled the day away,3
i have an ed i will tell you that i know i shouldn t feel shamed of eating a protein bar for breakfast and the fact that i ate one isn t what makes me shameful it s the fact i didn t make it is what made me hang my head and tuck tail,0
i feel radiant bright accomplished and happy,1
i feel refrigerator magnets that were so popular a few years ago,1
i am feeling very touch deprived with all that has been happening,0
i am feeling apprehensive about it but also wildly excited,4
i was feeling pretty relaxed by the time i boarded the very new looking airbus and headed into the hazy sky en route to honolulu,1
i am a quiet person but what i have to say i feel is important,1
i think i started to feel a little homesick,0
i am feeling eager to start doing some work the man who works there literally says so uhm you guys want to go in back and see if we can find anything to do,1
i feel uncomfortable since i have a smaller rib cage and a bigger chest either i am spilling over the top of the tank or the elastic band support is too tight or too loose,4
im feeling reluctant to exit my freshly cleaned apartment which i stayed up cleaning late last night,4
i feel that i need to know that i can depend on myself before i put myself in the position of supporting someone else and being supported by someone else,2
im feeling rather angsty and listless,0
i try my best to love on them shed some light but i feel deeply compassionate with their problems and hurt even if its someone in the media,2
i was so uncomfortable and feeling weird feelings but wasn t sure if they were contractions since i never really felt contractions with jared until they jacked me up with pitocin,5
i feel gloomy and tired,0
i really like this person feel that the question was really asked out of a sincere place of love and concern about how to move forward in light of what the sexuality study recently a href http www,1
i would force myself to eat my normal routine clean meals a day but then i just started feeling so awful,0
i feel rather privileged to have witnessed the great man in action it really was impossible for a novice like me to work out just which one of the four identical looking riders was he,1
i feel like im at the spa getting a wonderful facial when i use them,1
i feel petty all of a sudden,3
i hope you like this more honest amp raw blog post amp if you are feeling unhappy i hope this makes you feel less alone,0
i feel slightly disgusted as well,3
i was quite surprised with the weather these past few days but im so thankful for that since i still can wear my shorts out without feeling that cold yes no kidding,3
i feel slightly relaxed being a,1
i feel shy to admit that i was struggling to haul a single computer up,4
i just went about my script of would you like mustard or sauce with that and started to feel really startled,4
i enjoy my colleagues i m not feeling very sociable today,1
im feeling and if ive liked being pregnant,2
i then feel your tender touch as you enfold me with his love,2
i lost a few people which i hate because i have a really hard time letting go of people to whom i feel loyal,2
i have had no interest at all to make any effort to meet men and when the chance arrises i then feel burdened with negative thoughts of he ll just be another idiot only after one thing,0
i feel i m being nutritionally supportive of it as well,2
i feel impatient i just post a blog entry and i feel ive gotten some words written and out into the world,3
i am trying my hardest so i can get to a place where i can join you and finally feel like i have something worthwhile to say,1
i have to admit i feel amused when i see the pti jamiat and a whole lot of others in the media try to avoid the suggestion that they are actually protesting the use of sharia in the case of raymond davis s release,1
i feel embarrassed that it got so bad,0
im feeling really bitter about this one,3
i feel brave today heading to amman and beirut by way of istanbul or i feel brave today a href http jessicadickinsongoodman,1
i had a fab christmas and an amazing new year with my family and friends and against all odds i feel very optimistic about,1
i feel like a loser everyone says they lost but i dont i know exactly where i am i just hate being here oh,0
i feel defeated but others i feel refreshed,0
i was feeling particularly vulnerable in a specific area so i began to talking to my friends and interestingly enough there was an incredible understanding of my struggle,4
i go onto the officer down memorial page and reflect on my feelings about that wonderful officer which seems to make me feel a little better,1
im with a group of people i still feel isolated and on the outside looking in,0
i feel blessed to know this family,2
i feel terrified because my landlord has not changed our locks yet,4
i am loosing out but i feel like i have have so much to share with many and if anything that is not unfortunate if anything it makes me grateful,0
i don t like eating meals that feel too virtuous,1
i left feeling pretty thrilled for the opportunity to at least throw my name in the hat,1
i feel kinda weird when andrea tries to talk to me about chris,4
i loved about ellie is that she didnt feel insulted by all the rude douche baggy things lothaire said to her because according to ellie insults only hurt when they come from somebody you respect damn straight,3
i feel was pretty triumphant,1
im enjoying my solitary confinement at home i rarely feel lonely,0
i am being over dramatic but i do feel very strongly for her and i am resolved to speak with her next chance i get,1
i really dont like quinn because i feel like she will just end up hurting barney and i hated the lame ted robin storyline,3
i feel so lousy but i shouldnt be focusing on me now,0
i cant remember ever feeling so exhausted it took trips with the car on the last day to get everything brought to the trailer,0
i wrote two years ago so many things i feel unsure of maybe,4
i feel suspicious of informality and a lack of credentials,4
i receive every month make me proud and feel appreciative,1
i feel that third situation pretty much sums up my feelings toward this title,1
i wanted to feel him in my hands and reached out to take him into my waiting eager mouth,1
i feel more gentle that way wth,2
i got home feeling hot tired and great,2
i feel more creative,1
i feel so talented i can use a computer,1
i feel unfathomably rich in having had a healthy pregnancy so far,1
i wish to know whether i should feel sympathetic towards the airline american if say their plane is on fire or their pilot has exploded or whether i should want to set them on fire if say they just decided to walk on their obligations to save money,2
i don t want them to feel so pressured,4
i still feel frightened of the world yet no where near as much as i used to,4
im not feeling mellow,1
i wake too early so i feel grumpy,3
i believe you all will come to my work place and just try to make me feel humiliated but you know what deep down in my heart i know who is the one who should be ashamed of themselves,0
i did finally get it if you didn t laugh left me feeling delighted exhausted and just so privileged,1
i was remembering this i was feeling skeptical,4
i have some pretty brazen goals and each day i feel stronger and more confident that i m going to reach my desired end result,1
i feel dirty talking to people for my personal gain,0
i sat there cold i flashed back to going to the hockey city classic and the degree weather and it feeling just as cold even though there was about a degree difference this night,3
i feel numb as i carry on and i wonder if i will get over it,0
i was somewhat coerced into this blog review so i feel a bit rushed and flustered,3
i guess i wont feel too jealous since i often do my mothering at the pool but its nice to have a husband again,3
im not sure how i feel about needing to exercise so as to maintain a pleasant demeanor,1
i feel alarmed,4
i think i wanted audiences to feel impressed inspired or entertained when i was on stage,5
i wasnt feeling well yesterday morning afternoon so i just laid in bed and ended up in the all too familiar youtube black hole,1
i have these terrible feelings that i hyped myself up to be more talented than i am,1
i do take on a half marathon challenge then i will wait and see how the body feels as to whether there will be a pb attempt or a casual kilometre shuffle,1
i couldn t help but feel pissed off at both sides of the debate and the unnecessary dichotomy itself,3
i feel like i cant be respected if i have self respect because it is so regular to now hate your self,1
i smiled at him feeling his longing and said maybe later buddy but i have to make lunch now,2
i am truly unfortunate the majority of the time i m usually drained but i obtain it hard to get from bed i really feel restless and others,4
i am feeling rather damaged,0
i said i feel ugly today,0
i left my garmin on my bike so i was going to have to do this by feel coming out of transition its amazing hearing cheers and your adrenaline is just going crazy,1
i feel so smart when i find ways to trick myself like this,1
i love to dance but often feel inhibited by my own body unsure what i am capable of hyper concerned about other people watching me and having opinions on my style or just feeling awkward as if i have no idea what i am supposed to do here,4
i feel like cards are the perfect thing to make with them,1
i feel like some heroine of some tragic manga,0
i just feel safer than working part time casual at hr,1
i was ambushed again it was apparently my fault again i feel worthless,0
i feel privileged to be a part of something so eternal and so precious to the lord jesus he shed his blood so that churches like this could exist,1
i feel wholly inadequate to the task before me,0
i have a feeling this is a bit naughty scanning an article from a magazine but i know that so many people would love to read thi,2
i see you on the pitchers mound at our little league diamond i feel so anxious for you because it looks so isolated over there,4
i feel like i am joining the masses which goes against my rebellion of the popular mentality ha i m so goth but i take peace in knowing that i am not making the same resolutions as everyone else,1
i feel disillusioned with the occult so i have come to feel a greater connection to the earth,0
i feel stupid whenever this happens,0
i come home and feel so shitty i cant bring myself to do all the work i need to do,0
i feel like my irritable sensitive combination skin has finally met it s match,3
i like it though its very over the top but makes me feel clever by association,1
i will practice meditation if i feel overwhelmed and hopefully become successful in peaceful practice,5
i feel like it was all in vain cant be right and feel this wrong this heart of mine is just,0
i hope everyone can help with charity work without feeling stressed about such things,0
i feel so guilty for putting my child in daycare,0
i get frustrated that unresolved issues from my past have had a severe negative effect on my behavior and feel he must be angry that i have not resolved them by now,3
i feel blessed beyond blessed to share my life with you each week,2
i feel devastated over things that i have lost i will remind myself to be grateful for what i still have,0
im feeling energetic,1
i have come to understand that feelings are neither positive nor negative,1
i just don t like to be asked about the reason behind my mood when i m feeling gloomy laughs,0
i feel really bothered about the lack of time i get to find inspiration,3
i used to be able to hang around talk with the cashier when i was putting away my money now i feel rushed and stressed if i take a second to fumble with the coins and put them in my purse,3
i feel frustrated or the world around me lies shattered i just go and walk in the rain so that no body could see my eyes full of tears this is the delivery system of justice as conceptualized by our courts which we are learning the hard way,3
i realized what i am passionate about helping women feel accepted and appreciated,1
i could change the emphasis and say i am stella and i m noticing i m feeling impatient,3
i don t like outsourcing because i m a picky sod and usually end up feeling dissatisfied with the work of others but i have to force myself to outsource because you need to realize you can t do everything yourself,3
i feel so blessed and honored that we get to be its parents,2
i do feel welcomed but it s a little weird,1
i feel like i entertained sd all day,1
ive struggled mightily through today and even though i feel cranky and tired and unmotivated still i really am not going to be going to sleep before eleven thirty,3
i remember sitting out on the porch feeling drained and alone even as sunlight bathed my hair in warm radiance and a light breeze cooled my cheeks,0
i didnt feel i rushed things dhawan tweet script type text javascript src http platform,3
i realized i was feeling really irritated while i was saying that,3
i am balancing on my hands with my feet hanging over and it feels like pretty far and im terrified to let them drop but im totally calm at the same time hanging here,4
i feel so fucking worthless,0
i feel like a lot of men are royally fucked up and go through life wreaking havoc and end up destroying themselves in the process,3
i feel devastated that my art style can be copied,0
i feel fine about feeling well fine,1
i can only begin to feel how distraught she must be,4
i also didnt feel i could be mad at god because i know inside me that god does nothing without a purpose,3
i think we were both feeling a little drained from work as well,0
i gather supplies and start to check her progress via internal exam the head midwife prepares to start an iv and calmly asks others for more assistance i feel reassured by her calmness,1
i feel crappy i eat crappy,0
i feel more of numb now,0
i feel extremely honoured to have received such a prestigious award,1
im feeling adventurous and successful in my quest so far,1
i feel so thrilled to have three such distinguished individuals such as yourselves here,1
i figured my parents wont make me feel accepted so i stopped trying i turned to romantic relationships with men,2
i was left feeling empty,0
i feel pretty much like this scene from a href http www,1
i may not have really been feeling superior but i certainly was feeling that i had the answers wasnt i,1
i just feel are ludicrous and wasting space or so trite they should have looked at the book first and come up with something a little more original,5
i feel like a wimpy canoe floating towards a rising tsunami,4
i feel sympathetic towards her she was tired and weary and i can see how a split second doubt could make the effortless action of standing still seem like the better option,2
i start to feel unloved and unappreciated,0
i just want to know the feeling of loving and be loved,2
i feel strange talking about less serious things right now like cooking,4
i sometimes have urges to just freak out because i feel so bothered and usually nothing has caused me to feel bothered or irritated i scratch my arms when i m mad,3
i feel miserable and he doesnt care,0
i am not surprised cause its like ok when you feel crappy and it just continues for like days or so you really try to avoid getting that sickness again,0
im feeling slightly irritable today,3
i like to add things that i already completed in my day to a new list just to feel more productive when i cross them off,1
i always feel rushed during these emails which i dont like but asa este,3
i feel like now its more of sweet apple now,2
i was so impressed with the show especially for hs and i was moved by these talented kids but then again i feel very passionate about productions and music and theatre in schools so i am always happy to endorse many hs productions throughout their seasons during this time,2
i feel like i should be supporting them somehow but im not sure how,1
i have a lot going on in my life and feel overwhelmed,4
i took for granted a few weeks ago is really weird and makes me feel really agitated and frustrated,3
i also know what it feels like to be in a relationship where you feel like a burden and too much and not worth loving or pursuing and its just,2
i know what you mean about feeling agitated,4
i am feeling pressured to blog the bad,4
i feel like being sociable and just aaaah,1
i didnt feel at all deprived having it in my chai this morning,0
i was feeling very unsure of myself and at near breaking point,4
i remember leaving church feeling invigorated every sunday and tuesday night,1
i will nolonger tell anybody how i feel or what im thinking cause all it seems to do is get me more hated than i already am,0
i asked her what she meant by shes gonna feel jealous having loada of girls over me and then she said maybee i do like you a bitt,3
i feel that i am supporting the troops by demanding that we not send our young men and women into harm s way to bear arms against a country that has done nothing to threaten us at any point,2
i feel all funny sometimes,5
i am feeling crampy and cranky,3
i indicated then i was feeling quite overwhelmed with work responsibilities teaching traveling and writing,4
i just say that i am not even feeling embarrassed when i pause and rewind my dvred commercials if the breaking dawn preview comes on,0
i spend a lot of time feeling disappointed with myself for not doing a better job at attaining my goals,0
i feel stressed but i love the feeling of the calming spirit of my heavenly father and the feeling to keep working,0
i feel more thankful being greeted by many friends and families,1
i no longer feel doomed to falling into the abyss with no way out,0
i bought it at urban outfitters so it could fit mm film and have been feeling remorseful ever since,0
i just can t feel accepted,2
ive a feeling briar beagle would give me one of her disgusted looks if i even tried exercising her in these souless surroundings,3
i just need to accept to be treated like a princess everyday without feeling dumb about the situation,0
i just got up from a nap feeling really rotten so exhausted that i feel like i could just wilt onto the floor just sitting here,0
i feel very indecisive about it,4
i feel if the pressure vessel has been seriously damaged then far more radiation would have leaked he said,0
i have better things to do than to feel humiliated,0
i feel check the wonder in all that you see you ve got to get loving unconditionally,2
ive been feeling a bit melancholy,0
i believe that feeling accepted in a non judgemental way can be healing,1
i do feel stressed,0
i feel benevolent enough to buy them some peanuts and other treats,1
i feel fine class pin it button count layout horizontal pin it,1
i feel so worthless and useless these past weeks just because im a certified by stander at home,0
i feel immensely distracted by the barrage of media i receive solicit,3
ive been feeling from my adoring fans that would be teh whole like of you who are my friends here i felt brave and excited and ventrured forth with guitar in hand to a local open mic night,2
i love and captured an atmospheric feeling in their landscapes that really impressed me,5
is hand started fondling his aching cock through the fabric of his boxers and he instinctively arched his back to feel more of the delicious sensation,1
i am feeling energized productive and creative,1
i am feeling lucky to have him,1
i feel is vital to keeping my spirit young even as my body fades,1
i feel agitated and annoyed more than worried or fearful but these feelings can easily lead to being short tempered with my family and feelings of disharmony,4
i still feel scared every time i go into a strange place,4
i don t feel the author s talented,1
i feel so jaded and bored,0
im pretty sure and its been about a week and a half so although im feeling kind of betrayed and disillusioned by men at the moment everythings okay,0
i feel like ive lost my mind,0
i could feel his breath on me and smell the sweet scent of him,1
i could just take my beliefs and feelings and lock them in a safe somewhere until i get my human life squared away i and just about everyone i know would be a lot happier or perhaps not,1
i am feeling sinfully horny this sunday morning,2
i just feel like someone out there has to listen and be sympathetic and then,2
ive feeling a little blank and could think of nothing to write about which might be interesting to explore or had my mind captivated,0
i feel as the sleep drained from my head i sat up my dog nudging me for affection my wife too has been wanting affection,0
i feel to aid other women with infertility disorders this valuable individual guidance is offered for a restricted number of people,1
i remember feeling envious but then why would a young healthy person envy someone who s just barely survived,3
im still feeling very emotional,0
im in that last bit of sleep before i get up in the morning i feel like that emotional energy just waits for me,0
i know nothing is going to change even i feel very envious to these people but i cant stop feeling jealous to these people because its a human beings instinct to act so,3
im happy i feel out of energy and not very inspired to do my crafts,1
i was struck by the masculine feel of the strong graphics and deep colors in this months painting nighthawks by edward hopper,1
i feel like youre just not there some body that im trying to be affectionate with it feels like im molesting some stranger i dont even know,2
i think it s the opposite i get to feel defeated because i was doing everything possible to keep baby healthy and my sugars in check,0
i am trying not to feel bitter but how else can i feel when it seems my desire is pretty much impossible,3
i feel if i am nagged i stop caring,2
i just feel totally useless today,0
i feel honored to receive the grassroots preservation award,1
i feel contented just hearing him said that hellip,1
i am reminded of pavement yurusei yatsura and coheed and cambria without feeling offended that they have ripped them off,3
i feel no positive regard,1
im feeling a lot less ugly duckling and a lot more a href http,0
i suppose if one was feeling generous one could say i was stressed by the elevator ride,1
im feeling kind of melancholy and really want to go home and cuddle up with my boys,0
i feel like the people that i myself love want and need don t talk to me and don t connect with me anymore because they have fucked up mental health and emotional problems that i can t help contribute contain understand or encompass,3
i feel that the suffering is more than i can bear i take refuge in the lord in the blessed sacrament and i speak to him with profound silence,0
i feel afraid agn lol whats new,4
i am writing and sharing here is much more about my own story and what i believe with all my heart the world needs to know the riches we have in god than me feeling angry towards or trying to bash the people and leaders and parents,3
im feeling dazed and alot of things in my mind,5
i feel so scared when the voices from there start to speak to me,4
i feel very honoured to have been part of the bond family and very much hope i have a chance to work with them again sometime in the future,1
i feel insulted pete edochie responds to death,3
i feel but not to such a hostile extent,3
i always feel so pressured,4
i electrocuted my thumb and i cant type too well because i cant really you know feel some of my fingers as an acceptable excuse for a late paper,1
i carried my phone in my pocket and didn t feel the pull to get lost in it,0
i sit here writing this i feel unhappy inside,0
i could feel my mother s sympathetic dread as i was diagnosed,2
i get disappointed it makes me feel so rejected especially being disappointed by a loved one,0
i left there feeling brow beaten,0
i am feeling vulnerable nervous worried anxious and a bit lost,4
i was feeling defeated i usually pick things up easily this way but i just wasn t getting it,0
i am most certainly an acquired taste but lately many of those around me have seemed to feel the taste to be bitter,3
i feel i am rich because my life both real and online is filled with friends and family with whom i would not want to live without,1
i feel bad saying this because i should be happy but i dont think this way that im going is for me anymore,0
ive been feeling afraid a lot lately,4
i see momo feel shy momo hmmm gt me heyy momo,4
i feel amused looking at the little turtle who sneaked in with them,1
i purple month doesnt feel surprised in fact zhuo feng up many pupils all clear xiao her identity dont even say main star feng of young,5
i feel like there is no way out being humiliated by asa a guy i was obssessed about who played an embarrassing joke on me getting caught by tabbys wife tabby is a lover i once had who was married and i blindly fell in love with him,0
i feel like breathing is as delicate as dried rose petals sometimes,2
im thankful because i feel somewhat energetic instead of the dead fish that i would become every time every chemo,1
i feel so honored today and i want to share the emotion and my gratitude because i received a very complimentary email from someone who reads thought provoking perspectives,1
ive tried bare minerals but it makes me feel like my face is dirty,0
i feel quite passionate about and that is how old should children be to undergo beauty treatments,1
i feel like i m going to struggle and fail and suffer and be really dumb,0
im feel a little bit shy to talked to her for a second but manage myself because i saw from her eyes that theres something with this girl,4
i love that this is a place a series with no real heroes and i love that the way the couples in these books fall in love feels just as violent and crazy as the place that they call home,3
i will feel more lively and full of bounce,1
i am and always have been a very sincere nice feeling sociable compassionate helpful girl,1
i feel like an obnoxious nagging call times everyday tag alonger that he is finally sick of tolerating and is now just giving the cold shoulder,3
i loved the feeling i got during an amazing slalom run whether it was in training or in a race,1
i was feeling especially shy and awkward because i didn t know many people there,4
im still feeling a little groggy from the lack of sleep so i shall try to replenish it,0
i have been sitting at home revising today and all in all feeling quite stressed,3
i guess feelings aren t meant to be inhibited or prohibited,4
i embraced feeling thankful that the middle wall of partition had thus far been broken down,1
i began to feel very strange,4
i didn t feel pressured or constrained in my choices to behave in a particular way i just felt very busy,4
i had one of my low carb meal bars for breakfast and was feeling smug when i spotted the left over pies muffins and attractive foods,1
im going through life feeling now rather than being totally numb,0
i dont want flowers or candy but the kind of guy that knows i like thinly sliced limes in my mineral water because it makes me feel glamorous and is humored by how pretentious that is,1
i feel unprotected a class post count link href http reprogramming in process,0
i always feel really confident of my life and my choices when i go home,1
i was feeling more and more frustrated with each session he attended,3
i feel like in the last year especially i ve gone from a girl to a woman and despite how hesitant i have always been about getting older next year i will be twenty four i am surprised at how pleased i am to have done so,4
i feel attacked or insulted it is helpful to realize that the idea of attack is alive and well in my own mind,3
ive missed that feeling and ive missed being there and ive missed having something to work towards that keeps my focus on me and keeps it off of my phone and the potential trouble it can get me in,0
im feeling a bit uncomfortable with myself too,4
i know that i have it nowhere near as worse as my brethren overseas but right now i feel like im being physically emotionally and spiritually assaulted,4
i am feeling so reluctant and overwhelmed i try to think of the alternative abandoning that dream,4
i usually like sam but sometimes he gets downright whiny and i ll admit that all the mistakes he made due to sibling rivalry and pride that eventually led to the end of season kind of made me feel less tragic about the whole thing,0
i hope shes feeling generous today and treat me to japanese food or something haha have a great day,1
i am feeling a bit offended,3
i offend easily when i feel my intelligence is insulted,3
i always feel a bit awkward when i comment on someone s blog because i invariably go on rabbit trails and feel as though i ve been overstepping myself so i d like to tell you if you find yourself feeling the same way that i do not mind in the slightest,0
i feel like we may be coming to the point in the tv series where the show is incredibly popular but sadly the writers are coming to the end of their story lines and soon there will be nothing left to keep the plot a float,1
i was entertaining myself with this memory while at the same time feeling like that guy in that movie dazed and confused who says i just keep on getin older and the girls stay the same age,5
i had to continue to enforce my no playdate policy which meant i continued to feel angry twice over each day once during a horrible morning drop off and once in the afternoon when i reminded noah that no he couldnt play because of the bad drop off missing mommy,3
i woke up feeling groggy and grumpy and like the last thing i wanted to do was make dinner,0
i wake up feeling like something terrifyingly bad is bound to happen to me before i even get a chance to stick a limb outside of my covers,0
i feel god in my life more now than i ever have before and things are so wonderful right now,1
i do feel like ive been a neglectful friend but its due to the fact that i feel like a hinderance so i just stay away,0
i did not know this i could not look out upon the sea and sky without feeling mildly discontent,0
i hate feeling like this this is bullshit ok i m so done bye,1
i tasted some hari raya cookies and feeling greedy i would go and prebook their kueh makmur and tart because i know their hygiene standard and ingredients,3
i sit here feeling drained i really wonder what will i do when i reach that point,0
i buy something i go out and look at what else i didnt buy and then after a bit of comparison here and there i suddenly feel dissatisfied with my purchase,3
ive been feeling incredibly inadequate more so than usual and its gotten to a point where i almost feel paralyzed by it,0
im amazed how many men say they feel unloved if the house is messy and they have to fix their own dinner,0
i feel a restless weekend heading our way,4
i feel ugly i cover myself with a beautiful blanket in a make believe gown,0
i always said i felt so blessed to have him and today that feeling is been reassured many times,1
i cant do strappy shoes at work i just feel weird so i took these off thrifted ninewest,4
i love the fact that i look as best i can and i feel terrific because i eat right and constantly exercise,1
i decent article which i knew likely had good information because my initial response was to feel offended and want to argue despite the fact that it was talking about not doing exactly that,3
i have moments where i just feel so overwhelmed that my eyes well up with tears,4
i started feeling thankful for food for being able to enjoy such delicious things and got into cooking and baking healthy meals for my family,1
i don t want to tag people who think this is silly but if there are people out there who want to be tagged i wouldn t want to make them feel unwelcome,0
im taking is allowing me to get sleep which is wonderful but its leaving me feeling very groggy and nauseated,0
i feel an unpleasant drop in my stomach as the elevator doors open at my floor,0
i feel that this is a highly talented bunch when roling on all cyclinders,1
i feel his hand on me to stay faithful,2
i was so focused on my heavy breathing my even strides the drops of sweat on my forehead that i forgot to feel socially awkward,0
i cant help feeling this way,0
i feel like i would order carryout from if i lived in the area i am still curious to try some of their other tacos,5
i feel that i am afraid of whatever ad anything that will happen and idc is it good or bad i am just afraid and i hope god you will help me in whatever i do,4
i entered the living room i had a horrible feeling aching in the depths of my stomach,0
i feel very glad that finland s well known visual artist vesa kivinen had called me to work with him,1
i feel relatively safe normal or whatever you might call it,1
i feel bitchy saying it but i think that next saturday i just want to be alone,3
i feel very honored to have been shortlisted within the patient ambassador volunteer category which recognises members of the public and staff who provide outstanding help and support through volunteering or providing patient opinions either on a public partnership forum or on a patients panel,1
i feel quite helpless in all of this so prayer is the most effective tool i have because i have no answers and there is nothing else i can offer them right now,0
i know that you feel pretty disgusted by the nonstop lefty propaganda the ministry churns out but of the public isn t that tuned in,3
i feel complacent and satisfied,1
i ventured into fabrics amp fabrics on a whim yesterday feeling a bit nervous knowing i would be tempted beyond my comfor,4
i havent been feeling homesick knowing they were all getting together to enjoy my mums cooking did make me want a teleporter,0
i feel ugly and hated,0
i was feeling whether it be mad sad disappointed or peaceful,3
i feel as if we have a talented enough team to win some games and go deep into the tournament,1
i feel i was so innocent to have only one dream to fill my brain and to be crazy about it,1
i never feel depressed because my cancer and i have learnt to live and sleep with each other,0
i can feel the pressure falling more so on my shoulders and im feeling slightly doubtful of myself which leads to unhappy thoughts not usually like my optimistic self i must say,4
i kind of feel a little petty about this,3
i hostage negotiator on her case has her feeling hopeful about her future,1
i believe that people should choose the causes they feel passionate about and do what they can and i have no right or desire to push my own charities as more worthy than another,1
i feel privileged to be allowed into the sanctum of her studio the many different paintings and studies lining the walls morph and grow week on week,1
i grew up feeling rejected by my male peers,0
i feel like that is where i can make my most valued input and tried to do as much as possible to ensure i did an equal part in the construction,1
i described how i was feeling the feeling of being out of control and completely restless the fear of what could still happen my obsession with trying to do it all and the fact that it was just not working,4
i feel very important in my fancy room with my fancy furniture and nice view of downtown dallas,1
i wanna feel good again,1
i never feel like im not supporting,1
i want"
    },
    
    "Real_Time_Based_News_Letter_Generation_Using_CrewAI": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
## AI-Powered Real-Time Newsletter Generation

Welcome to the NewsletterGen Crew project, powered by [crewAI](https://crewai.com). This template is designed to help you set up a multi-agent AI system with ease, leveraging the powerful and flexible framework provided by crewAI. The goal is to enable agents to collaborate effectively on complex tasks, maximizing their collective intelligence and capabilities.

This project is a Streamlit application that leverages AI agents to generate customized newsletters based on real-time news data. It uses the CrewAI framework to coordinate a team of AI agents that research, edit, and design newsletters on specified topics.

## Deployed Link

Newsletter Generation App is Deployed And Available [Here](https://realtimenewslettergeneration.streamlit.app/)


## Screenshots

![crew_1](https://github.com/Parthiban-R-3997/Chat_With_Multiple_SQL_Databases/assets/26496805/187984bf-a3fc-49cd-9b20-841629baaa12)
![crew_2](https://github.com/Parthiban-R-3997/Chat_With_Multiple_SQL_Databases/assets/26496805/5419b9d9-2558-49e0-a4c4-e95eaab78b0f)
![crew_3](https://github.com/Parthiban-R-3997/Chat_With_Multiple_SQL_Databases/assets/26496805/05aabb8b-2f64-4caa-a174-0a8dd7f1ab69)
![crew_4](https://github.com/Parthiban-R-3997/Chat_With_Multiple_SQL_Databases/assets/26496805/b550c8fe-518a-48ef-9d3b-0cbd998df00a)
![crew_5](https://github.com/Parthiban-R-3997/Chat_With_Multiple_SQL_Databases/assets/26496805/fd342956-f0cf-490c-8090-0727f877c77a)
![crew_6](https://github.com/Parthiban-R-3997/Chat_With_Multiple_SQL_Databases/assets/26496805/edcde6df-03fe-4928-8ebb-2d7a806aa592)
![crew_7](https://github.com/Parthiban-R-3997/Chat_With_Multiple_SQL_Databases/assets/26496805/ea7e67c4-d69c-4075-b2c9-49e1f2d7b69b)


## Key Features
- **Real-Time News Integration**: Utilizes the Exa API to fetch the latest news articles on specified topics based on semantic meaning and not by keyword search.
- **AI-Driven Content Creation**: Employs a team of AI agents to research, curate, and edit content for the newsletter.
- **Customizable Topics**: Users can input any topic of interest to generate a relevant newsletter.
- **Date Range Selection**: Allows users to specify a start date for news searches, ensuring up-to-date content.
- **Personalized Messaging**: Includes an option to add a custom personal message at the top of the newsletter.
- **HTML Newsletter Generation**: Produces a fully formatted HTML newsletter ready for distribution.
- **One-Click Download**: Enables users to download the generated newsletter as an HTML file.


## Project Uniqueness
This project stands out due to its innovative approach to newsletter creation:

- **AI Agent Collaboration**: Utilizes the CrewAI framework to orchestrate a team of AI agents, each with specialized roles in the newsletter creation process.
- **Real-Time Data Integration**: Incorporates the latest news by leveraging the Exa API, ensuring newsletters are always current and relevant.
- **Flexible Content Generation**: Adapts to any topic specified by the user, making it versatile for various industries and interests.
- **Streamlined User Experience**: Offers a simple, intuitive interface for users to generate complex, AI-crafted newsletters with minimal input.
- **Scalable Architecture**: Designed to handle multiple simultaneous requests and can be easily extended to include additional features or data sources.


## How It Works
User Input: Users specify a topic, personal message, and start date for news search.

- **Research Agent**: Searches for and analyzes recent news articles on the specified topic.
- **Editor Agent**: Curates and refines the content, ensuring relevance and coherence.
- **Designer Agent**: Formats the content into an attractive HTML newsletter template.
- **Output**: Users can preview and download the generated newsletter as an HTML file.


## Impact
This tool revolutionizes the newsletter creation process by:

Reducing the time and effort required to create high-quality, topical newsletters.
Ensuring content is always fresh and relevant, improving reader engagement.
Allowing for rapid creation of newsletters on any topic, enhancing responsiveness to current events.
Providing a scalable solution for businesses and individuals who need to produce regular, customized newsletters.
By automating the research, writing, and design processes, this application empowers users to create professional-grade newsletters without the need for a dedicated content team or extensive time investment.


Consider the following diagram to understand how multi agents are built:

![Agent Architecture](https://github.com/Parthiban-R-3997/Chat_With_Multiple_SQL_Databases/assets/26496805/21e0998b-4d39-4ac2-b47b-cc332bdbca2d)


## Installation

Ensure you have Python >=3.10 <=3.13 installed on your system. This project uses [Poetry](https://python-poetry.org/) for dependency management and package handling, offering a seamless setup and execution experience.

First, if you haven't already, install Poetry:

```bash
pip install poetry
```

Next, navigate to your project directory and install the dependencies:

1. First lock the dependencies and then install them:
```bash
poetry lock
```
```bash
poetry install
```
### Customizing

**Add your  `ANTHROPIC_API_KEY` into the `.env` file**

- Modify `src/newsletter_gen/config/agents.yaml` to define your agents
- Modify `src/newsletter_gen/config/tasks.yaml` to define your tasks
- Modify `src/newsletter_gen/crew.py` to add your own logic, tools and specific args
- Modify `src/newsletter_gen/main.py` to add custom inputs for your agents and tasks

## Running the Project

To kickstart your crew of AI agents and begin task execution, run this from the root folder of your project:

```bash
poetry run newsletter_gen
```

This command initializes the newsletter-gen Crew, assembling the agents and assigning them tasks as defined in your configuration.


## Understanding Your Crew

The newsletter-gen Crew is composed of multiple AI agents, each with unique roles, goals, and tools. These agents collaborate on a series of tasks, defined in `config/tasks.yaml`, leveraging their collective skills to achieve complex objectives. The `config/agents.yaml` file outlines the capabilities and configurations of each agent in your crew.


## Contributing

Contributions to this project are welcome! If you have any ideas, bug fixes, or improvements, feel free to submit a pull request. Please ensure that your code adheres to the project's coding standards and is well-documented.

## License

This project is licensed under the [MIT License](LICENSE).


================================================
File: LICENSE
================================================
                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      'License' shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      'Licensor' shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      'Legal Entity' shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      'control' means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      'You' (or 'Your') shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      'Source' form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      'Object' form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      'Work' shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      'Derivative Works' shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      'Contribution' shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, 'submitted'
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as 'Not a Contribution.'

      'Contributor' shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a 'NOTICE' text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an 'AS IS' BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets '[]'
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same 'printed page' as the copyright notice for easier
      identification within third-party archives.

   Copyright [yyyy] [name of copyright owner]

   Licensed under the Apache License, Version 2.0 (the 'License');
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an 'AS IS' BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.


================================================
File: app.py
================================================
import sys
import subprocess
import pkg_resources

# Install pysqlite3-binary if not present
required = {'pysqlite3-binary'}
installed = {pkg.key for pkg in pkg_resources.working_set}
missing = required - installed

if missing:
    subprocess.check_call([sys.executable, '-m', 'pip', 'install', *missing])

__import__('pysqlite3')
import sys
sys.modules['sqlite3'] = sys.modules.pop('pysqlite3')

import streamlit as st
from datetime import datetime, timedelta
from src.newsletter_gen.crew import NewsletterGenCrew
from crewai.crews.crew_output import CrewOutput

class NewsletterGenUI:

    def load_html_template(self):
        with open('src/newsletter_gen/config/newsletter_template.html', 'r') as file:
            html_template = file.read()
        return html_template

    def generate_newsletter(self, topic, personal_message, start_date):
        end_date = datetime.now()

        st.write(f'Generating newsletter starting from {start_date}.')
        st.write(f'End date: {end_date.strftime('%Y-%m-%d')}')
        
        inputs = {
            'topic': topic,
            'personal_message': personal_message,
            'html_template': self.load_html_template(),
            'start_date': start_date,
            'end_date': end_date.strftime('%Y-%m-%d'),
        }
        crew_output = NewsletterGenCrew().crew().kickoff(inputs=inputs)
        
        # Extract content from CrewOutput
        if isinstance(crew_output, CrewOutput):
            # Inspect the structure of crew_output
            st.write('CrewOutput structure:')
            st.write(crew_output)
            
            # Try to access the content (adjust this based on the actual structure)
            if hasattr(crew_output, 'content'):
                return crew_output.content
            elif hasattr(crew_output, 'output'):
                return crew_output.output
            else:
                # If we can't find the content, return the string representation
                return str(crew_output)
        
        return str(crew_output)  # Fallback to string representation if not CrewOutput

    def newsletter_generation(self):
        if st.session_state.generating:
            newsletter_content = self.generate_newsletter(
                st.session_state.topic, st.session_state.personal_message, st.session_state.start_date
            )
            st.session_state.newsletter = newsletter_content

        if st.session_state.newsletter and st.session_state.newsletter != '':
            with st.container():
                st.write('Newsletter generated successfully!')
                st.markdown(st.session_state.newsletter, unsafe_allow_html=True)
                
                current_date = datetime.now().strftime('%Y-%m-%d')
                file_name = f'{st.session_state.topic}_newsletter_{current_date}.html'
                st.download_button(
                    label='Download HTML file',
                    data=st.session_state.newsletter,
                    file_name=file_name,
                    mime='text/html',
                )
            st.session_state.generating = False


    def sidebar(self):
        with st.sidebar:
            st.title('Newsletter Generator')

            st.write(
                '''
                To generate a newsletter, enter a topic, a personal message, and the start publish date for the news search. \n
                Your team of AI agents will generate a newsletter for you!
                '''
            )

            st.text_input('Topic', key='topic', placeholder='World News')

            st.text_area(
                'Your personal message (to include at the top of the newsletter)',
                key='personal_message',
                placeholder='Dear News Reader,',
            )

            # Add a date input for the start publish date
            st.date_input('Start publish date for news search', key='start_date', value=datetime.now() - timedelta(days=7))

            if st.button('Generate Newsletter'):
                st.session_state.generating = True

    def render(self):
        st.set_page_config(page_title='Newsletter Generation', page_icon='📧')

        if 'topic' not in st.session_state:
            st.session_state.topic = ''

        if 'personal_message' not in st.session_state:
            st.session_state.personal_message = ''

        if 'newsletter' not in st.session_state:
            st.session_state.newsletter = ''

        if 'generating' not in st.session_state:
            st.session_state.generating = False

        if 'start_date' not in st.session_state:
            st.session_state.start_date = datetime.now() - timedelta(days=7)  # Default to 7 days ago

        self.sidebar()
        self.newsletter_generation()


if __name__ == '__main__':
    NewsletterGenUI().render()

================================================
File: packages.txt
================================================
sqlite3 

================================================
File: pyproject.toml
================================================
[tool.poetry]
name = 'newsletter_gen'
version = '0.1.0'
description = 'newsletter-gen using crewAI'
authors = ['Your Name <you@example.com>']

[tool.poetry.dependencies]
python = '>=3.10,<=3.13'
crewai = {extras = ['tools'], version = '^0.28.7'}
exa-py = '^1.0.9'
langchain = '0.1.17'
langchain-core = '0.1.52'
langchain-anthropic = '^0.1.11'
streamlit = '^1.34.0'
pillow = '^10.3.0'

[tool.poetry.scripts]
newsletter_gen = 'newsletter_gen.main:run'

[build-system]
requires = ['poetry-core']
build-backend = 'poetry.core.masonry.api'

================================================
File: requirements.txt
================================================
crewai>=0.11.0
crewai-tools>=0.0.9
langchain-anthropic
langchain-openai
langchain-google-genai
langchain-community
exa_py
langtrace-python-sdk
pysqlite3-binary
chromadb



================================================
File: src/newsletter_gen/crew.py
================================================
import os
from crewai import Agent, Crew, Process, Task
from crewai.project import CrewBase, agent, crew, task
from src.newsletter_gen.tools.research import SearchAndContents, FindSimilar, GetContents
from datetime import datetime, date
import streamlit as st
from typing import Union, List, Tuple, Dict
from langchain_core.agents import AgentFinish
import json
from langchain_google_genai import ChatGoogleGenerativeAI
import langtrace_python_sdk.instrumentation.crewai.patch as langtrace_patch
from langtrace_python_sdk import langtrace


from dotenv import load_dotenv
load_dotenv()

# Custom JSON encoder
class DateTimeEncoder(json.JSONEncoder):
    def default(self, obj):
        if isinstance(obj, (date, datetime)):
            return obj.isoformat()
        return super().default(obj)

# Monkey patch json.dumps in langtrace_python_sdk
original_json_dumps = json.dumps

def custom_json_dumps(*args, **kwargs):
    kwargs['cls'] = DateTimeEncoder
    return original_json_dumps(*args, **kwargs)

langtrace_patch.json.dumps = custom_json_dumps

# Initialize langtrace with custom JSON encoder
langtrace.init(api_key=os.getenv('LANGTRACE_API_KEY'))

@CrewBase
class NewsletterGenCrew:
    '''NewsletterGen crew'''

    agents_config = 'config/agents.yaml'
    tasks_config = 'config/tasks.yaml'

    def llm(self):
        return ChatGoogleGenerativeAI(model='gemini-1.5-pro')

    def step_callback(
        self,
        agent_output: Union[str, List[Tuple[Dict, str]], AgentFinish],
        agent_name,
        *args,
    ):
        with st.chat_message('AI'):
            if isinstance(agent_output, str):
                try:
                    agent_output = json.loads(agent_output)
                except json.JSONDecodeError:
                    pass

            if isinstance(agent_output, list) and all(
                isinstance(item, tuple) for item in agent_output
            ):
                for action, description in agent_output:
                    st.write(f'Agent Name: {agent_name}')
                    st.write(f'Tool used: {getattr(action, 'tool', 'Unknown')}')
                    st.write(f'Tool input: {getattr(action, 'tool_input', 'Unknown')}')
                    st.write(f'{getattr(action, 'log', 'Unknown')}')
                    with st.expander('Show observation'):
                        st.markdown(f'Observation\n\n{description}')

            elif isinstance(agent_output, AgentFinish):
                st.write(f'Agent Name: {agent_name}')
                output = agent_output.return_values
                st.write(f'I finished my task:\n{output['output']}')

            else:
                st.write(type(agent_output))
                st.write(agent_output)

    @agent
    def researcher(self) -> Agent:
        return Agent(
            config=self.agents_config['researcher'],
            tools=[SearchAndContents(), FindSimilar(), GetContents()],
            verbose=True,
            llm=self.llm(),
            step_callback=lambda step: self.step_callback(step, 'Research Agent'),
        )

    @agent
    def editor(self) -> Agent:
        return Agent(
            config=self.agents_config['editor'],
            verbose=True,
            tools=[SearchAndContents(), FindSimilar(), GetContents()],
            llm=self.llm(),
            step_callback=lambda step: self.step_callback(step, 'Chief Editor'),
        )

    @agent
    def designer(self) -> Agent:
        return Agent(
            config=self.agents_config['designer'],
            verbose=True,
            allow_delegation=False,
            llm=self.llm(),
            step_callback=lambda step: self.step_callback(step, 'HTML Writer'),
        )

    @task
    def research_task(self) -> Task:
        return Task(
            config=self.tasks_config['research_task'],
            agent=self.researcher(),
            output_file=f'logs/{datetime.now().strftime('%Y-%m-%d_%H-%M-%S')}_research_task.md',
        )

    @task
    def edit_task(self) -> Task:
        return Task(
            config=self.tasks_config['edit_task'],
            agent=self.editor(),
            output_file=f'logs/{datetime.now().strftime('%Y-%m-%d_%H-%M-%S')}_edit_task.md',
        )

    @task
    def newsletter_task(self) -> Task:
        return Task(
            config=self.tasks_config['newsletter_task'],
            agent=self.designer(),
            output_file=f'logs/{datetime.now().strftime('%Y-%m-%d_%H-%M-%S')}_newsletter_task.html',
        )

    @crew
    def crew(self) -> Crew:
        '''Creates the NewsletterGen crew'''
        return Crew(
            agents=self.agents,
            tasks=self.tasks,
            process=Process.sequential,
            verbose=2,
        )

class NewsletterGenUI:
    def generate_newsletter(self, **inputs):
        return NewsletterGenCrew().crew().kickoff(inputs=inputs)

    def newsletter_generation(self):
        topic = st.text_input('Enter a topic for the newsletter:')
        if st.button('Generate Newsletter'):
            with st.spinner('Generating newsletter...'):
                st.session_state.newsletter = self.generate_newsletter(topic=topic)
            st.success('Newsletter generated!')

    def render(self):
        st.title('Newsletter Generator')
        self.newsletter_generation()
        if 'newsletter' in st.session_state:
            st.subheader('Generated Newsletter')
            st.markdown(st.session_state.newsletter, unsafe_allow_html=True)

if __name__ == '__main__':
    NewsletterGenUI().render()

================================================
File: src/newsletter_gen/main.py
================================================
#!/usr/bin/env python
from newsletter_gen.crew import NewsletterGenCrew

def load_html_template(): 
    with open('src/newsletter_gen/config/newsletter_template.html', 'r') as file:
        html_template = file.read()
        
    return html_template


def run():
    # Replace with your inputs, it will automatically interpolate any tasks and agents information
    inputs = {
        'topic': input('Enter the topic for yout newsletter: '),
        'personal_message': input('Enter a personal message for your newsletter: '),
        'html_template': load_html_template()
    }
    NewsletterGenCrew().crew().kickoff(inputs=inputs)

================================================
File: src/newsletter_gen/config/agents.yaml
================================================
researcher:
  role: >
    Senior Researcher
  goal: >
    Uncover cutting-edge developments in {topic} within the specified date range.
  backstory: >
    You're a seasoned journalist with a nose for news. You're known for your great research skills and ability to dig up the most interesting stories within specific timeframes. Your reports are always thorough and well-researched, making you a trusted source of information.
    You always follow the rules and guidelines provided to you, never forget to include the complete URL of the article where you found the news, and always ensure that the articles are within the specified date range.

editor:
  role: >
    Editor-in-Chief
  goal: >
    Ensure the quality, accuracy, and timeliness of the final newsletter.
  backstory: >
    You are the Editor-in-Chief of a prestigious news organization. You are responsible for overseeing the production of the newsletter and ensuring that it meets the highest standards of quality, that it is accurate, well-written, engaging, and focuses on the most recent and relevant news within the specified timeframe. 

    You review the news articles provided by the researcher, add context to each article (like why the news story is relevant), and have a great sense of what will resonate with the readers. You use this sense of judgment to reorder the news articles in a way that the most important and recent news is at the top of the list.

designer:
  role: >
    Newsletter Compiler
  goal: >
    Fill the HTML template given to you with the news articles provided, ensuring all date-related information is included.
  backstory: >
    You are responsible for compiling the HTML code of the newsletter, making sure that every news article is included in the final document, along with its publication date.
    You do NOT modify the content and only update the design when necessary. You use the HTML template provided to you to create the newsletter, always including the date information for each article.

analyst:
  role: >
    {topic} Reporting Analyst
  goal: >
    Create detailed reports based on {topic} data analysis and research findings, focusing on the specified date range.
  backstory: >
    You're a meticulous analyst with a keen eye for detail and a strong understanding of time-sensitive information. You're known for your ability to turn complex data into clear and concise reports, making it easy for others to understand and act on the information you provide. You always ensure that your analysis is based on the most recent and relevant data within the specified timeframe.

================================================
File: src/newsletter_gen/config/newsletter_template.html
================================================
<!DOCTYPE html>
<html lang='en'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title>Weekly Newsletter</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #e8f4f8;
            color: #333;
        }
        .container {
            width: 90%;
            max-width: 1200px;
            margin: auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
            color: #004d66;
        }
        h2 {
            margin: 0 0 10px 0;
            color: #006680;
        }
        p {
            line-height: 1.6;
        }
        .grid-container {
            display: grid;
            grid-template-columns: 1fr;
            gap: 20px;
        }
        .grid-item {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
        }
        .grid-item img {
            width: 100%;
            border-radius: 8px;
            margin-bottom: 15px;
        }
        .grid-item:nth-child(odd) {
            background-color: #eef6f9;
        }
        .grid-item:nth-child(even) {
            background-color: #e8f4f8;
        }
        .grid-item:hover {
            background-color: #d1ecf3;
            transition: background-color 0.3s ease;
        }
        .grid-item h2 {
            color: #004d66;
        }
        .grid-item p {
            margin-bottom: 10px;
        }
        .read-more {
            margin-top: 10px;
            font-size: 14px;
        }
        .read-more a {
            color: #0066cc;
            text-decoration: none;
        }
        .read-more a:hover {
            text-decoration: underline;
        }
        .goodbye {
            text-align: center;
            margin-top: 30px;
            color: #666;
        }
        button {
            background-color: #0066cc;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            align-self: flex-start;
        }
        button:hover {
            background-color: #004c99;
        }

        @media (min-width: 768px) {
            .grid-container {
                grid-template-columns: 1fr 1fr;
            }
        }

        @media (min-width: 1200px) {
            .grid-container {
                grid-template-columns: 1fr 1fr 1fr;
            }
        }
    </style>
</head>
<body>
    <div class='container'>
        <h1><!-- TITLE OF THE DAY --></h1>
        <p><!-- PERSONAL MESSAGE --></p>
        <div class='grid-container'>
            <!-- Example Grid Item -->
            <div class='grid-item'>
                <h2>1. <!-- TITLE OF THE STORY --></h2>
                <p><!-- SUMMARY OF THE STORY --></p>
                <p><!-- WHY THIS IS IMPORTANT --></p>
                <button onclick='window.open('https://www.example.com', '_blank')'>Read Full Story</button>
            </div>
            <!-- ADD MORE GRID ITEMS HERE FOLLOWING THE SAME FORMAT -->
        </div>
        <p class='goodbye'>Goodbye and see you until we meet!</p>
    </div>
</body>
</html>


================================================
File: src/newsletter_gen/config/tasks.yaml
================================================
research_task:
  description: >
    Conduct a thorough research about the latest news on {topic}, focusing on articles published between {start_date} and the current date. Be sure to look for sources that are reliable and publish recent news. Do not include articles that are not news material or that are not directly related to {topic}.
    With this research, compile a list of the most relevant news stories that you found. 

    Follow these rules:
    - Only include articles that are especially relevant to {topic} and published within the specified date range.
    - Do not include any news that are not directly related to {topic} or outside the date range.
    - Do not include sources that are not a news article. If the content of the page includes a list of articles or looks like the front page of a website, do not include it in the list!
    - Summarize the news in a few sentences. Make the summary as long as necessary to include all the relevant information, but not too long for a newsletter.
    - Include the URL of the article where you found the news.
    - Include a minimum of 5 news articles and a maximum of 10 news articles in the list.
    - When using the Search Tool, your search query should be concise and include the date range (for example, 'latest news on {topic} from {start_date} to {end_date}').

    IMPORTANT INSTRUCTIONS ABOUT USING TOOLS: When using tools, DO NOT ESCAPE the underscore character '_', EVER. If you need to use a tool and pass in a parameter called 'search_query', you should write 'search_query', not 'search\_query'. THIS IS VERY IMPORTANT, else the tool will not work.

  expected_output: >
    A markdown document with the most relevant news stories. Each news story should contain the following:
    - Title of the news
    - Summary of the news
    - URL of the article where the news was found
    - Publication date of the article

    Here is an example of the format of a news article that you could include in the document:
    
    <EXAMPLE>
      Story 1:
      - Title: **Daily briefing: AI now beats humans at basic reading and maths**
      - **Summary:** AI systems can now nearly match and sometimes exceed human performance in basic tasks. The report discusses the need for new benchmarks to assess AI capabilities and highlights the ethical considerations for AI models.
      - **URL:** [Nature Article](https://www.nature.com/articles/d41586-024-01125-1)
      - **Published:** 2024-04-18
    </EXAMPLE>

edit_task:
  description: >
    Given the list of news articles that will be used in the newsletter, do the following things:
    
    - Rewrite the title of each news article to make it more engaging and interesting for the readers of the newsletter.
    - Add a paragraph to each news article that explains why this news is important and how it can impact the readers of the newsletter.
    - Reorder the bullet points in a way that the most relevant news and topics are at the top of the list based on the importance of the news and topics.
    - Verify that the news articles are directly related to {topic} and that they are not off-topic. If they are off-topic, remove them from the list.
    - Verify that the URLs are correct and that they lead to the correct news article. They should lead to a news article and not to a list of articles or the front page of a website. If the URL is incorrect, ask the researcher to provide the correct URL.
    - Ensure that all articles are within the specified date range of {start_date} to the current date.
    - Do not search for additional news articles or change the content of the news articles. Only edit the existing news articles.

    IMPORTANT INSTRUCTIONS ABOUT USING TOOLS: When using tools, DO NOT ESCAPE the underscore character '_', EVER. If you need to use a tool and pass in a parameter called 'search_query', you should write 'search_query', not 'search\_query'. THIS IS VERY IMPORTANT, else the tool will not work.

  expected_output: >
    A markdown document with all the news to be included in the newsletter of the week. The document should have a title related to the curated stories of the week and a list of news articles.
    
    Each one should contain:
    - Title:
    - Summary: 
    - Why this is important:
    - Source: [URL of the article]
    - Published: [Date of publication]

    Here is an example of a document that you are expected to produce:
    <EXAMPLE>
    Title of the day: AI is taking over the world

      - **Title:** AI Surpasses Human Capabilities in Basic Reading and Maths
        **Summary:** Recent advancements in AI technology have enabled systems to match and sometimes exceed human performance in fundamental tasks such as reading and arithmetic. This shift necessitates the creation of new benchmarks to appropriately evaluate AI capabilities.
        **Why this is important:** This development is crucial as it not only showcases the rapid progress in AI but also prompts a reevaluation of how AI is integrated into educational and professional settings. It raises significant ethical questions about the future role of AI in society.
        **Source:** 'Title of the article' by ['Source'](https://www.nature.com/articles/d41586-024-01125-1)
        **Published:** 2024-04-18

        [... more news articles ...]

    </EXAMPLE>

newsletter_task:
  description: >
    Fill the following HTML template with exactly the same information that is given to you. Also, include the following personal message at the beginning of the newsletter in the space provided: {personal_message}

    (If there is no personal message, leave the space empty.)
    
    Follow these rules:
    - Do not truncate the information or change the order of the elements. 
    - Do not modify the content of the news articles.
    - Do not add any additional information to the newsletter.
    - Add ALL the news stories provided to the newsletter. Even if the template only shows one news story, you should include all the news stories provided as context using the format provided in the template.
    - Include the publication date for each article in the newsletter.

    {html_template}
  expected_output: >
    Return ONLY the contents of the HTML template, without any tripple quotes like '```', '```html' or any other text. 
    This output will be saved as a HTML file and sent to the subscribers.

================================================
File: src/newsletter_gen/tools/research.py
================================================
from langchain.tools import BaseTool
from exa_py import Exa
import os
from datetime import datetime

class SearchAndContents(BaseTool):
    name: str = 'Search and Contents Tool'
    description: str = (
        'Searches the web based on a search query for the latest results. '
        'Results are only from the custom date range entered by the user. Uses the Exa API. This also returns the contents of the search results.'
    )

    def _run(self, search_query: str, start_date: str) -> str:
        exa = Exa(api_key=os.getenv('EXA_API_KEY'))

        # Validate and format the start_date
        try:
            start_published_date = datetime.strptime(start_date, '%Y-%m-%d').strftime('%Y-%m-%d')
        except ValueError:
            return 'Invalid date format. Please use YYYY-MM-DD.'

        end_published_date = datetime.now().strftime('%Y-%m-%d')

        # Log the dates for debugging
        print(f'Searching from {start_published_date} to {end_published_date}')

        search_results = exa.search_and_contents(
            query=search_query,
            use_autoprompt=True,
            start_published_date=start_published_date,
            text={'include_html_tags': False, 'max_characters': 8000},
        )

        return search_results


class FindSimilar(BaseTool):
    name: str = 'Find Similar Tool'
    description: str = (
        'Searches for similar articles to a given article using the Exa API. Takes in a URL of the article.'
    )

    def _run(self, article_url: str, start_date: str) -> str:
        # Validate and format the start_date
        try:
            start_published_date = datetime.strptime(start_date, '%Y-%m-%d').strftime('%Y-%m-%d')
        except ValueError:
            return 'Invalid date format. Please use YYYY-MM-DD.'

        end_published_date = datetime.now().strftime('%Y-%m-%d')

        # Log the dates for debugging
        print(f'Searching from {start_published_date} to {end_published_date}')

        exa = Exa(api_key=os.getenv('EXA_API_KEY'))

        search_results = exa.find_similar_and_contents(
            url=article_url,
            start_published_date=start_published_date,
            text={'include_html_tags': False, 'max_characters': 8000},
        )

        return search_results


class GetContents(BaseTool):
    name: str = 'Get Contents Tool'
    description: str = (
        'Gets the contents of a specific article using the Exa API. '
        'Takes in the ID of the article in a list, like this: ['https://www.cnbc.com/2024/04/18/my-news-story'].'
    )

    def _run(self, article_ids: list) -> str:
        exa = Exa(api_key=os.getenv('EXA_API_KEY'))

        contents = exa.contents(ids=article_ids)
        return contents


"
    },
    "SensibleAutonomousMachine": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
# Sensible Autonomous Machine #

## INTRODUCTION ##
In recent times, automation has achieved improvements by quality, accuracy and precision. At the same time, the technology itself continues to evolve, bringing new waves of advances in robotics, analytics, and artificial intelligence (AI), and especially machine learning. Together they amount to a step change in technical capabilities that could have profound implications for business, for the economy, and more broadly, for society.  

The modules used in this program include

### 1.1  Robotics ### 
Robotics is a branch of engineering which incorporates multiple disciplines to design, build, program and use robotic machines.  Robots are used in industries for speeding up the manufacturing process. AI is a highly useful tool in robotic assembly applications. When combined with advanced vision systems, AI can help with real-time course correction, which is particularly useful in complex manufacturing sectors. A handful of robotic systems are now being sold as open source systems with AI capability. Users train robots to do custom tasks based on their specific application, such as small-scale agriculture. The convergence of open source robotics and AI could be a huge trend in the future of AI robots.

### 1.2 Automation in Machines ###

Automation is any individual involved in the creation and application of technology to monitor and control the production and delivery of products and services. Automakers are moving at a frenzied pace to add more and more intelligence to vehicles developed a scale to describe the six different levels of automation for self-driving cars. Level 0 is the driver actually steps on the gas to go faster, steps on the brake to slow down and uses the steering wheel to turn. Level 1 is the driver is still in control of the overall operation and safety of the vehicle. Level 2 is the driver is still responsible for the safe operation of the vehicle. Level 3 states that the car can drive itself, but the human driver must still pay attention and be prepared to take over at any time. Level 4 explains that the car can be driven by a person, but it doesn’t always need to be. It can drive itself full-time under the right circumstances. Level 5 proposes that the car controls itself under all circumstances with no expectation of human intervention. 

### 1.3 Deep Learning ###

Deep Learning is a new area of Machine Learning research, which has been introduced with the objective of moving Machine Learning closer to one of its original goals, Artificial Intelligence. Deep Learning provides computers with the ability to learn without being explicitly programmed. Deep learning focuses on the development of computer programs that can change when exposed to new data.  The process of Deep Learning is similar to that of data mining. Both systems search through data to look for patterns.

### 1.4  RCNN ###
 
Region-CNN (R-CNN) is one of the state-of-the-art CNN-based deep learning object detection approaches. Based on this, there are fast R-CNN and faster RCNN for faster speed object detection as well as mask R-CNN for object instance segmentation. On the other hand, there are also other object detection approaches, such as YOLO and SSD. 

### 1.5 Python-3.5.2 ###

Python’s standard library is very extensive, offering a wide range of facilities as indicated by the long table of contents listed below. The library contains built-in modules (written in C) that provide access to system functionality such as file I/O that would otherwise be inaccessible to Python programmers, as well as modules written in Python that provide standardized solutions for many problems that occur in everyday programming. Some of these modules are explicitly designed to encourage and enhance the portability of Python programs by abstracting away platform-specifics into platform-neutral APIs.

### 1.6  TensorFlow 1.12.0 ###

TensorFlow™ is an open source software library for numerical computation using data flow graphs. Nodes in the graph represent mathematical operations, while the graph edges represent the multidimensional data arrays (tensors) communicated between them.

### 1.7  Pip ###

pip is a package management system used to install and manage software packages written in Python. Many packages can be found in the default source for packages and their dependencies —Python Package Index (PyPI). 
Python 2.7.9 and later (on the python2 series), and Python 3.4 and later include pip (pip3 for Python 3) by default. pip is a recursive acronym that can stand for either 'Pip Installs Packages' or 'Pip Installs Python'. Alternatively, pip stands for 'preferred installer program'.

### 1.8  NumPy ###

NumPy is a library for the Python programming language, adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays. The ancestor of NumPy, Numeric, was originally created by Jim Hugunin with contributions from several other developers. In 2005, Travis Oliphant created NumPy by incorporating features of the competing num array into Numeric, with extensive modifications. NumPy is open-source software and has many contributors.

## OVERVIEW ##

The main idea of the project is to initiate a self-driving machine, observing the surroundings across a transport region and act accordingly by the provider’s instructions. This initiative brings many real-world things to autonomous creature and the main purpose is to save time from user’s point of view. 

### 2.1 Primary goal ###

Interfacing SAM to follow back an object by crossing obstacles and to reach destination by sensing the response signal from Smartphone. Monitoring entire surrounding to identify the color patterns of traffic signal and performing right/left turn by getting trained in predicting static/dynamic models. Maintain ratio of frames captured and running status of machine.
 
### 2.2 Secondary Goal ###

![2](https://user-images.githubusercontent.com/24918359/56951544-bedc1f80-6b55-11e9-9130-c8da5accd3aa.JPG) 

## ARCHITECTURE DIAGRAM ##

![21](https://user-images.githubusercontent.com/24918359/56954402-52185380-6b5c-11e9-8096-6df731268d7d.jpg)

## MODULE DESCRIPTION ##

1) Processing Real Time Data
2)  Calibration of Machine by embedding sensors
3)  Manipulation of the Machine
4) Integration of the Machine with Mobile Application

### 3.1 Processing Real Time Data ###

* Pi camera is integrated with Raspberry Pi.
* Image processing is done in real time scenario by recognizing object patterns and detecting traffic light using R-CNN.
* Deep Learning implements feed-forward artificial neural networks or, more particularly, multi-layer perceptron (MLP), the most commonly used type of neural networks. MLP consists of the input layer, output layer, and one or more hidden layers. 
* Each layer of MLP includes one or more neurons directionally linked with the neurons from the previous and the next layer.

![4](https://user-images.githubusercontent.com/24918359/56951984-cd770680-6b56-11e9-9087-ae2db5096b56.jpg)

### 3.2 Calibration of the Machine by embedding sensors###

### 3.2.1 Detection of Obstacles  ###

* Absorption and Reflection of black and white signals to make the machine sense the road patterns for moving forward and turn operations (left and right).

![5](https://user-images.githubusercontent.com/24918359/56951990-d1a32400-6b56-11e9-8447-28f125895c5d.jpg)

### 3.2.2 Measurement of distance between objects ###

* Measuring the distance between the machine and other objects on-road by sensing frequency through Ultrasonic Sensor.

![6](https://user-images.githubusercontent.com/24918359/56952001-d5cf4180-6b56-11e9-87b6-1876523f667b.jpg)

### 3.3 Manipulation of the Machine ###

* L293D Motor IC is interfaced with Raspberry PI to perform start and stop operations.

![7](https://user-images.githubusercontent.com/24918359/56952009-d8ca3200-6b56-11e9-9e6c-6797e0520cb4.jpg)

### 3.4 Integration of the Machine with Mobile Application ###

* User provides the Geo Location via Android Application to the Machine where Latitude and Longitude data is fed to the machine to reach destination.

![8](https://user-images.githubusercontent.com/24918359/56952013-db2c8c00-6b56-11e9-9878-e0b2318743a2.jpg)

## PROCESSING AND TRAINING ##

### Installing TensorFlow ###

### 1. Update the Raspberry Pi ###

First, the Raspberry Pi needs to be fully updated. Open a terminal and issue:

    sudo apt-get update
    sudo apt-get dist-upgrade

![1](https://user-images.githubusercontent.com/24918359/56953172-8dfde980-6b59-11e9-90bd-ad1ec2777631.png)

### 2. Install TensorFlow ###

Next, we’ll install TensorFlow. In the /home/pi directory, create a folder called ‘tf’, which will be used to hold all the installation files for TensorFlow and Protobuf, and cd into it:

mkdir tf
cd tf
wget https://github.com/lhelontra/tensorflow-on-arm/releases/download/v1.8.0/tensorflow-1.12.0-cp35-none-linux_armv7l.whl

    sudo pip3 install /home/pi/tf/tensorflow-1.12.0-cp35-none-linux_armv7l.whl

TensorFlow also needs the LibAtlas package. Install it by issuing 

    sudo apt-get install libatlas-base-dev

While we’re at it, let’s install other dependencies that will be used by the TensorFlow Object Detection API. These are listed on the installation instructions in TensorFlow’s Object Detection GitHub repository. Issue:

    sudo pip3 install pillow lxml jupyter matplotlib cython
    sudo apt-get install python-tk

### 3. Install OpenCV ###

TensorFlow’s object detection examples typically use matplotlib to display images, but I prefer to use OpenCV because it’s easier to work with and less error prone. The object detection scripts in this guide’s GitHub repository use OpenCV. So, we need to install OpenCV.

To get OpenCV working on the Raspberry Pi, there’s quite a few dependencies that need to be installed through apt-get. If any of the following commands don’t work, issue “sudo apt-get update” and then try again. Issue:

    sudo apt-get install libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev
    sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
    sudo apt-get install libxvidcore-dev libx264-dev
    sudo apt-get install qt4-dev-tools

Now that we’ve got all those installed, we can install OpenCV. Issue:

    pip3 install opencv-python

### 4. Compile and Install Protobuf ###

The TensorFlow object detection API uses Protobuf, a package that implements Google’s Protocol Buffer data format. Unfortunately, there’s currently no easy way to install Protobuf on the Raspberry Pi. We have to compile it from source ourselves and then install it.

First, get the packages needed to compile Protobuf from source. Issue:

    sudo apt-get install autoconf automake libtool curl

Then download the protobuf release from its GitHub repository by issuing:

wget https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-all-3.5.1.tar.gz

If a more recent version of protobuf is available, download that instead. Unpack the file and cd into the folder:

    tar -zxvf protobuf-all-3.5.1.tar.gz
    cd protobuf-3.5.1

Configure the build by issuing the following command (it takes about 2 minutes):

    ./configure

Build the package by issuing:

    make

When it’s finished, issue:

    make check 

This process takes even longer, clocking in at 107 minutes on Pi. According to other guides I’ve seen, this command may exit out with errors, but Protobuf will still work. Now that it’s built, install it by issuing:

    sudo make install

Then move into the python directory and export the library path: 
    
    cd python
    export LD_LIBRARY_PATH=../src/.libs

Next, issue:

    python3 setup.py build --cpp_implementation 
    python3 setup.py test --cpp_implementation
    sudo python3 setup.py install --cpp_implementation

Then issue the following path commands:

    export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=cpp
    export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION_VERSION=3

Finally, issue:

    sudo ldconfig

Now Protobuf is installed on the Pi. Verify it’s installed correctly by issuing the command below and making sure it puts out the default help text.

Protoc

For some reason, the Raspberry Pi needs to be restarted after this process, or TensorFlow will not work. Go ahead and reboot the Pi by issuing:

    sudo reboot now

### 5. Set up TensorFlow Directory Structure and PYTHONPATH Variable ###

Now that we’ve installed all the packages, we need to set up the TensorFlow directory. Move back to your home directory, then make a directory called “tensorflow1”, and cd into it.

    mkdir tensorflow1
    cd tensorflow1

Download the tensorflow repository from GitHub by issuing:

    git clone --recurse-submodules https://github.com/tensorflow/models.git

Next, we need to modify the PYTHONPATH environment variable to point at some directories inside the TensorFlow repository we just downloaded. We want PYTHONPATH to be set every time we open a terminal, so we have to modify the .bashrc file. Open it by issuing:

    sudo nano ~/.bashrc

    export PYTHONPATH=$PYTHONPATH:/home/pi/tensorflow1/models/research:/home/pi/tensorflow1/models/research/slim

![2](https://user-images.githubusercontent.com/24918359/56953173-8dfde980-6b59-11e9-99d4-6fcecf96bf92.png)

Then, save and exit the file. This makes it so the “export PYTHONPATH” command is called every time you open a new terminal, so the PYTHONPATH variable will always be set appropriately. Close and then re-open the terminal.

Now, we need to use Protoc to compile the Protocol Buffer (.proto) files used by the Object Detection API. The .proto files are located in /research/object_detection/protos, but we need to execute the command from the /research directory. Issue:

    cd /home/pi/tensorflow1/models/research
    protoc object_detection/protos/*.proto --python_out=.

This command converts all the 'name'.proto files to 'name_pb2'.py files. Next, move into the object_detection directory:

    cd /home/pi/tensorflow1/models/research/object_detection

Now, we’ll download the SSD_Mobilenet model from the TensorFlow detection model zoo. The model zoo is Google’s collection of pre-trained object detection models that have various levels of speed and accuracy. The Raspberry Pi has a weak processor, so we need to use a model that takes less processing power. Though the model will run faster, it comes at a tradeoff of having lower accuracy. For this tutorial, we’ll use SSD-MobileNet, which is the fastest model available.

Google is continuously releasing models with improved speed and performance, so check back at the model zoo often to see if there are any better models.

Download the SSD-MobileNet model and unpack it by issuing:

    wget http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v2_coco_2018_05_09.tar.gz
    tar -xzvf ssdlite_mobilenet_v2_coco_2018_05_09.tar.gz

Now the model is in the object_detection directory and ready to be used.

### 6. Detect Objects ###

Okay, now everything is set up for performing object detection on the Pi! The Python script in this repository, Object_detection_picamera.py, detects objects in live feeds from a Picamera or USB webcam. Basically, the script sets paths to the model and label map, loads the model into memory, initializes the Picamera, and then begins performing object detection on each video frame from the Picamera.

If you’re using a Picamera, make sure it is enabled in the Raspberry Pi configuration menu.

![3](https://user-images.githubusercontent.com/24918359/56953174-8dfde980-6b59-11e9-9563-c660969fbe23.png)

Download the Object_detection_picamera.py file into the object_detection directory by issuing:

wget https://raw.githubusercontent.com/Parthi_Koushik/TensorFlow-Object-Detection-on-the-Raspberry-Pi/master/Object_detection_picamera.py

Run the script by issuing:

    python3 Object_detection_picamera.py 

The script defaults to using an attached Picamera. If you have a USB webcam instead, add --usbcam to the end of the command:
python3 Object_detection_picamera.py –usbcam

Once the script initializes (which can take up to 30 seconds), you will see a window showing a live view from your camera. Common objects inside the view will be identified and have a rectangle drawn around them.

![4](https://user-images.githubusercontent.com/24918359/56953175-8e968000-6b59-11e9-812f-8067e6aac3c0.png)

You can also use a model by adding the frozen inference graph into the object_detection directory and changing the model path in the script. You can test this out using my playing card detector model (transferred from ssd_mobilenet_v2 model and trained on TensorFlow v1.12). Once downloaded and extracted the model, or if you have your own model, place the model folder into the object_detection directory. Place the label_map.pbtxt file into the object_detection/data directory.

![5](https://user-images.githubusercontent.com/24918359/56953176-8e968000-6b59-11e9-9fce-152c5938dc39.png)

Then, open the Object_detection_picamera.py script in a text editor. Go to the line where MODEL_NAME is set and change the string to match the name of the new model folder. Then, on the line where PATH_TO_LABELS is set, change the name of the labelmap file to match the new label map. Change the NUM_CLASSES variable to the number of classes your model can identify.   

![6](https://user-images.githubusercontent.com/24918359/56953177-8e968000-6b59-11e9-89c9-b7573f63d4ff.png)

Now, when you run the script, it will use your model rather than the SSDLite_MobileNet model. 

### Training Datasets ###

### 1. Set up TensorFlow Directory and Anaconda Virtual Environment ###

The TensorFlow Object Detection API requires using the specific directory structure provided in its GitHub repository. It also requires several additional Python packages, specific additions to the PATH and PYTHONPATH variables, and a few extra setup commands to get everything set up to run or train an object detection model.

### 1a. Download TensorFlow Object Detection API repository from GitHub ###

Create a folder directly in C: and name it “tensorflow1”. This working directory will contain the full TensorFlow object detection framework, as well as your training images, training data, trained classifier, configuration files, and everything else needed for the object detection classifier.

### 1b. Download the SSD_MobileNet-V2-COCO model from TensorFlow's model zoo ###

TensorFlow provides several object detection models (pre-trained classifiers with specific neural network architectures) in its model zoo. Some models (such as the SSD-MobileNet model) have an architecture that allows for faster detection but with less accuracy, while some models (such as the Faster-RCNN model) give slower detection but with more accuracy. Use the SSD-MobileNet model for training.

### 1c. Download repository ###

Download the full repository located on this page (scroll to the top and click Clone or Download) and extract all the contents directly into the C:\tensorflow1\models\research\object_detection directory. (You can overwrite the existing 'README.md' file.) This establishes a specific directory structure that will be used.

![7](https://user-images.githubusercontent.com/24918359/56953179-8e968000-6b59-11e9-9b27-2a64e62dcaf5.jpg)

This contains the images, annotation data, .csv files, and TFRecords needed to train a 'Pinochle Deck' playing card detector. You can use these images and data to practice making your own Pinochle Card Detector. It also contains Python scripts that are used to generate the training data. It has scripts to test out the object detection classifier on images, videos, or a webcam feed. You can ignore the \doc folder and its files; they are just there to hold the images used for this readme.

If you want to practice training your own 'Pinochle Deck' card detector, you can leave all the files as they are. You can follow along with this tutorial to see how each of the files were generated, and then run the training. You will still need to generate the TFRecord files (train.record and test.record) as described in Step 4.

If you want to train your own object detector, delete the following files (do not delete the folders):

• All files in \object_detection\training
• All files in \object_detection\inference_graph

Now, you are ready to start from scratch in training your own object detector. This tutorial will assume that all the files listed above were deleted, and will go on to explain how to generate the files for your own training dataset.

### 1d. Set up new Anaconda virtual environment ###

Next, we'll work on setting up a virtual environment in Anaconda for tensorflow-gpu. From the Start menu in Windows, search for the Anaconda Prompt utility, right click on it, and click “Run as Administrator”. If Windows asks you if you would like to allow it to make changes to your computer, click Yes.

In the command terminal that pops up, create a new virtual environment called “tensorflow1” by issuing the following command:
C:\> conda create -n tensorflow1 pip python=3.5

Then, activate the environment by issuing:

C:\> activate tensorflow1

Install tensorflow-gpu in this environment by issuing:

(tensorflow1) C:\> pip install --ignore-installed --upgrade tensorflow-gpu

Install the other necessary packages by issuing the following commands:

(tensorflow1) C:\> conda install -c anaconda protobuf
(tensorflow1) C:\> pip install pillow
(tensorflow1) C:\> pip install lxml
(tensorflow1) C:\> pip install Cython
(tensorflow1) C:\> pip install jupyter
(tensorflow1) C:\> pip install matplotlib
(tensorflow1) C:\> pip install pandas
(tensorflow1) C:\> pip install opencv-python
(Note: The ‘pandas’ and ‘opencv-python’ packages are not needed by TensorFlow, but they are used in the Python scripts to generate TFRecords and to work with images, videos, and webcam feeds.)

### 1e. Configure PYTHONPATH environment variable ###

A PYTHONPATH variable must be created that points to the \models, \models\research, and \models\research\slim directories. Do this by issuing the following commands (from any directory):
(tensorflow1) C:\> set PYTHONPATH=C:\tensorflow1\models;C:\tensorflow1\models\research;C:\tensorflow1\models\research\slim

(Note: Every time the 'tensorflow1' virtual environment is exited, the PYTHONPATH variable is reset and needs to be set up again.)

### 1f. Compile Protobufs and run setup.py ###

Next, compile the Protobuf files, which are used by TensorFlow to configure model and training parameters. Unfortunately, the short protoc compilation command posted on TensorFlow’s Object Detection API installation page does not work on Windows. Every .proto file in the \object_detection\protos directory must be called out individually by the command.

In the Anaconda Command Prompt, change directories to the \models\research directory and copy and paste the following command into the command line and press Enter:

protoc --python_out=. .\object_detection\protos\anchor_generator.proto .\object_detection\protos\argmax_matcher.proto .\object_detection\protos\bipartite_matcher.proto .\object_detection\protos\box_coder.proto .\object_detection\protos\box_predictor.proto .\object_detection\protos\eval.proto .\object_detection\protos\faster_rcnn.proto .\object_detection\protos\faster_rcnn_box_coder.proto .\object_detection\protos\grid_anchor_generator.proto .\object_detection\protos\hyperparams.proto .\object_detection\protos\image_resizer.proto .\object_detection\protos\input_reader.proto .\object_detection\protos\losses.proto .\object_detection\protos\matcher.proto .\object_detection\protos\mean_stddev_box_coder.proto .\object_detection\protos\model.proto .\object_detection\protos\optimizer.proto .\object_detection\protos\pipeline.proto .\object_detection\protos\post_processing.proto .\object_detection\protos\preprocessor.proto .\object_detection\protos\region_similarity_calculator.proto .\object_detection\protos\square_box_coder.proto .\object_detection\protos\ssd.proto .\object_detection\protos\ssd_anchor_generator.proto .\object_detection\protos\string_int_label_map.proto .\object_detection\protos\train.proto .\object_detection\protos\keypoint_box_coder.proto .\object_detection\protos\multiscale_anchor_generator.proto .\object_detection\protos\graph_rewriter.proto

This creates a name_pb2.py file from every name.proto file in the \object_detection\protos folder.

Finally, run the following commands from the C:\tensorflow1\models\research directory:

(tensorflow1) C:\tensorflow1\models\research> python setup.py build
(tensorflow1) C:\tensorflow1\models\research> python setup.py install

### 1g. Test TensorFlow setup to verify it works ###

The TensorFlow Object Detection API is now all set up to use pre-trained models for object detection, or to train a new one. You can test it out and verify your installation is working by launching the object_detection_tutorial.ipynb script with Jupyter. From the \object_detection directory, issue this command:

(tensorflow1) C:\tensorflow1\models\research\object_detection> jupyter notebook object_detection_tutorial.ipynb
This opens the script in your default web browser and allows you to step through the code one section at a time. You can step through each section by clicking the “Run” button in the upper toolbar. The section is done running when the “In [ * ]” text next to the section populates with a number (e.g. “In [1]”).
Once you have stepped all the way through the script, you should see two labelled images at the bottom section the page. If you see this, then everything is working properly! If not, the bottom section will report any errors encountered.

### 2. Gather and Label Pictures ###

### 2a. Gather Pictures ###

TensorFlow needs hundreds of images of an object to train a good detection classifier. To train a robust classifier, the training images should have random objects in the image along with the desired objects, and should have a variety of backgrounds and lighting conditions. There should be some images where the desired object is partially obscured, overlapped with something else, or only halfway in the picture.

We have two different objects I want to detect (red, green). Then, it took about another 169 pictures with multiple images in the picture. I know I want to be able to detect the cards when they’re overlapping, so I made sure to have the cards be overlapped in many images.

![8](https://user-images.githubusercontent.com/24918359/56953180-8f2f1680-6b59-11e9-8df3-c8369b8fac26.png)

Make sure the images aren’t too large. They should be less than 200KB each, and their resolution shouldn’t be more than 720x1280. The larger the images are, the longer it will take to train the classifier. You can use the resizer.py script in this repository to reduce the size of the images.

![9](https://user-images.githubusercontent.com/24918359/56953182-8f2f1680-6b59-11e9-8446-305b2d82e0d2.png)

After you have all the pictures you need, move 20% of them to the \object_detection\images\test directory, and 80% of them to the \object_detection\images\train directory. Make sure there are a variety of pictures in both the \test and \train directories.

### 2b. Label Pictures ###

With all the pictures gathered, it’s time to label the desired objects in every picture. LabelImg is a great tool for labeling images, and its GitHub page has very clear instructions on how to install and use it.

Download and install LabelImg, point it to your \images\train directory, and then draw a box around each object in each image. Repeat the process for all the images in the \images\test directory. 

![10](https://user-images.githubusercontent.com/24918359/56953184-8f2f1680-6b59-11e9-8184-7ec582bca87e.png)

LabelImg saves a .xml file containing the label data for each image. These .xml files will be used to generate TFRecords, which are one of the inputs to the TensorFlow trainer. Once you have labeled and saved each image, there will be one .xml file for each image in the \test and \train directories.

![11](https://user-images.githubusercontent.com/24918359/56953163-8c342600-6b59-11e9-9ab1-8d7a5ac1bbc0.png)

Also, can check if the size of each bounding box is correct by running sizeChecker.py

(tensorflow1) C:\tensorflow1\models\research\object_detection> python sizeChecker.py --move

![12](https://user-images.githubusercontent.com/24918359/56953164-8cccbc80-6b59-11e9-9080-308976164e9c.png)

### 3. Generate Training Data ###

With the images labeled, it’s time to generate the TFRecords that serve as input data to the TensorFlow training model. This tutorial uses the xml_to_csv.py and generate_tfrecord.py scripts from Dat Tran’s Raccoon Detector dataset, with some slight modifications to work with our directory structure.
First, the image .xml data will be used to create .csv files containing all the data for the train and test images. From the \object_detection folder, issue the following command in the Anaconda command prompt:
(tensorflow1) C:\tensorflow1\models\research\object_detection> python xml_to_csv.py
This creates a train_labels.csv and test_labels.csv file in the \object_detection\images folder.
Next, open the generate_tfrecord.py file in a text editor. Replace the label map starting at line 31 with your own label map, where each object is assigned an ID number. This same number assignment will be used when configuring the labelmap.pbtxt file.

def class_text_to_int(row_label):
    if row_label == 'red':
        return 1
    elif row_label == 'green':
        return 2
    else:
        return None

For example:

def class_text_to_int(row_label):
    if row_label == 'basketball':
        return 1
    elif row_label == 'shirt':
        return 2
    elif row_label == 'shoe':
        return 3
    else:
        return None

Then, generate the TFRecord files by issuing these commands from the \object_detection folder:
python generate_tfrecord.py --csv_input=images\train_labels.csv --image_dir=images\train --output_path=train.record
python generate_tfrecord.py --csv_input=images\test_labels.csv --image_dir=images\test --output_path=test.record

These generate a train.record and a test.record file in \object_detection. These will be used to train the new object detection classifier.

### 4. Create Label Map and Configure Training ###

The last thing to do before training is to create a label map and edit the training configuration file.

### 4a. Label map ###

The label map tells the trainer what each object is by defining a mapping of class names to class ID numbers. Use a text editor to create a new file and save it as labelmap.pbtxt in the C:\tensorflow1\models\research\object_detection\training folder. 
item {
  id: 1
  name: 'red'
}

item {
  id: 2
  name: 'green'
}
}

The label map ID numbers should be the same as what is defined in the generate_tfrecord.py file. For the basketball, shirt, and shoe detector example mentioned, the labelmap.pbtxt file will look like:

item {
  id: 1
  name: 'basketball'
}

item {
  id: 2
  name: 'shirt'
}

item {
  id: 3
  name: 'shoe'
}

### 4b. Configure training ###

Finally, the object detection training pipeline must be configured. It defines which model and what parameters will be used for training. This is the last step before running training!
 
Navigate to C:\tensorflow1\models\research\object_detection\samples\configs and copy the faster_rcnn_inception_v2_pets.config file into the \object_detection\training directory

![13](https://user-images.githubusercontent.com/24918359/56953165-8cccbc80-6b59-11e9-82c8-056788bb04d2.png)

![14](https://user-images.githubusercontent.com/24918359/56953166-8cccbc80-6b59-11e9-8d61-bc1a36e04202.jpg)

Save the file after the changes have been made. That’s it! The training job is all configured and ready to go!

### 5. Run the Training ###

Here we go! From the \object_detection directory, issue the following command to begin training:
python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/faster_rcnn_inception_v2_signals.config

Each step of training reports the loss. It will start high and get lower and lower as training progresses. For my training on the Faster-RCNN-Inception-V2 model, it started at about 3.0 and quickly dropped below 0.8.

![15](https://user-images.githubusercontent.com/24918359/56953168-8d655300-6b59-11e9-8ee0-d3f22e9ddf33.png)

![16](https://user-images.githubusercontent.com/24918359/56953169-8d655300-6b59-11e9-8c76-9e9da0d354dc.png)


You can view the progress of the training job by using TensorBoard. To do this, open a new instance of Anaconda Prompt, activate the tensorflow1 virtual environment, change to the C:\tensorflow1\models\research\object_detection directory, and issue the following command:
(tensorflow1) C:\tensorflow1\models\research\object_detection>tensorboard --logdir=training

![17](https://user-images.githubusercontent.com/24918359/56953170-8d655300-6b59-11e9-97f0-b71c18cbf2db.png)

The training routine periodically saves checkpoints about every five minutes. You can terminate the training by pressing Ctrl+C while in the command prompt window. I typically wait until just after a checkpoint has been saved to terminate the training. You can terminate training and start it later, and it will restart from the last saved checkpoint. The checkpoint at the highest number of steps will be used to generate the frozen inference graph.

### 6. Export Inference Graph ###

Now that training is complete, the last step is to generate the frozen inference graph (.pb file). From the \object_detection folder, issue the following command, where “XXXX” in “model.ckpt-1962” should be replaced with the highest-numbered .ckpt file in the training folder:

python export_inference_graph.py --input_type image_tensor --pipeline_config_path training/ssd_mobilenet_v2_signal.config --trained_checkpoint_prefix training/model.ckpt-1962 --output_directory inference_graph

![18](https://user-images.githubusercontent.com/24918359/56953171-8d655300-6b59-11e9-95d1-5ae14ae023c6.png)

This creates a frozen_inference_graph.pb file in the \object_detection\inference_graph folder. The .pb file contains the object detection classifier.

### 7. Use Newly Trained Object Detection Classifier ###

Before running the Python scripts, you need to modify the NUM_CLASSES variable in the script to equal the number of classes you want to detect. So NUM_CLASSES = 2. To test your object detector, move a picture of the object or objects into the \object_detection folder, and change the IMAGE_NAME variable in the Object_detection_image.py to match the file name of the picture. Alternatively, you can use a video of the objects (using Object_detection_video.py), or just plug in a USB webcam and point it at the objects (using Object_detection_webcam.py).

## Working with Machine ##
Producing control systems capable of analyzing sensory data in order to provide accurate detection of other vehicles and the road ahead fusing data from multiple sensors. Data Replication between sensory data and real time camera [8]. Monitoring entire surrounding to identify the colour patterns of traffic signal and performing right/left turn by getting trained in predicting static/dynamic models. Maintain ratio of frames captured and running status of machine.

## Sensor Testing ##

IR sensor sends binary values by receiving and decoding signals. The led sends and receives live data of road patterns and communicate the output value with mo-tor IC. Absorption and Reflection of black and white signals to make the machine sense the road patterns for moving forward and turn operations (left and right).

### Motor Testing ###

L293D Motor Driver IC consists of 4 input pins, 4 output pins and 2 enable pins. When enable A is high, left motor (input 1 and input 2) works. When enable B is high, right motor (input 3 and input 4) works. 

Input 1 Input 2  Result
   0        0      Stop
   0        1      Anti-Clockwise
   1        0      Clockwise
   1        1      Stop
   

A GPS aerial is mounted at the rear for location information featuring gyroscopes, altimeters and a tachometer to avoid a minute miscalculation of the machine’s positions.

The machine can safely drive itself under specific conditions such as expressway merging, high speed cruising, low speed traffic jam, closed-campus operations by classifying object patterns and traffic signals. Infrared Sensor performs identification of road patterns during self-parking scenarios by absorbing and reflecting Infrared signals [9]. Pi camera is fixed on top of the machine to detect signal patterns by clas-sifying colors from comparing with the trained data at frequent measure of time

## Conclusion and Future Work ##

The proposed work uses different modules for providing automation to the robotic machine. There are certain systems providing security in existence but with less effi-ciency but our project deals with live data in the form of continuous images which gets automatically deleted after some point of time. This improves the efficiency of the system. Although the machine senses traffic signals and proceed moving opera-tions, installation of higher-grade cameras and motor power shall improve efficiency, performance and speed control of the machine respectively. More complicated im-ages are given as input to train the machine act according to emergency situations by predicting and analyzing. 




================================================
File: Object_detection_picamera.py
================================================
# Import packages
import os
import cv2
import numpy as np
from picamera.array import PiRGBArray
from picamera import PiCamera
import tensorflow as tf
import argparse
import sys
#import final_robo.py

# Set up camera constants
IM_WIDTH = 1280
IM_HEIGHT = 720
#IM_WIDTH = 640    
#IM_HEIGHT = 480   

# Select camera type (if user enters --usbcam when calling this script,
# a USB webcam will be used)
camera_type = 'picamera'
parser = argparse.ArgumentParser()
parser.add_argument('--usbcam', help='Use a USB webcam instead of picamera',
                    action='store_true')
args = parser.parse_args()
if args.usbcam:
    camera_type = 'usb'

sys.path.append('..')

# Import utilites
from utils import label_map_util
from utils import visualization_utils as vis_util

# Name of the directory containing the object detection module we're using
MODEL_NAME = 'ssdlite_mobilenet_v2_coco_2018_05_09'

# Grab path to current working directory
CWD_PATH = os.getcwd()

# Path to frozen detection graph .pb file, which contains the model that is used
# for object detection.
PATH_TO_CKPT = os.path.join(CWD_PATH,MODEL_NAME,'frozen_inference_graph.pb')

# Path to label map file
PATH_TO_LABELS = os.path.join(CWD_PATH,'data','mscoco_label_map.pbtxt')

# Number of classes the object detector can identify
NUM_CLASSES = 2

## Load the label map.

label_map = label_map_util.load_labelmap(PATH_TO_LABELS)
categories = label_map_util.convert_label_map_to_categories(label_map, max_num_classes=NUM_CLASSES, use_display_name=True)
category_index = label_map_util.create_category_index(categories)

# Load the Tensorflow model into memory.
detection_graph = tf.Graph()
with detection_graph.as_default():
    od_graph_def = tf.GraphDef()
    with tf.gfile.GFile(PATH_TO_CKPT, 'rb') as fid:
        serialized_graph = fid.read()
        od_graph_def.ParseFromString(serialized_graph)
        tf.import_graph_def(od_graph_def, name='')

    sess = tf.Session(graph=detection_graph)


# Define input and output tensors (i.e. data) for the object detection classifier

# Input tensor is the image
image_tensor = detection_graph.get_tensor_by_name('image_tensor:0')

# Output tensors are the detection boxes, scores, and classes
# Each box represents a part of the image where a particular object was detected
detection_boxes = detection_graph.get_tensor_by_name('detection_boxes:0')

# Each score represents level of confidence for each of the objects.
# The score is shown on the result image, together with the class label.
detection_scores = detection_graph.get_tensor_by_name('detection_scores:0')
detection_classes = detection_graph.get_tensor_by_name('detection_classes:0')
#print (detection_classes)

      
# Number of objects detected
num_detections = detection_graph.get_tensor_by_name('num_detections:0')

# Initialize frame rate calculation
frame_rate_calc = 1
freq = cv2.getTickFrequency()
font = cv2.FONT_HERSHEY_SIMPLEX

# Initialize camera and perform object detection.
# The camera has to be set up and used differently depending on if it's a
# Picamera or USB webcam.

### Picamera ###
if camera_type == 'picamera':
    # Initialize Picamera and grab reference to the raw capture
    camera = PiCamera()
    camera.resolution = (IM_WIDTH,IM_HEIGHT)
    camera.framerate = 10
    rawCapture = PiRGBArray(camera, size=(IM_WIDTH,IM_HEIGHT))
    rawCapture.truncate(0)

    for frame1 in camera.capture_continuous(rawCapture, format='bgr',use_video_port=True):

        t1 = cv2.getTickCount()
            
        frame = np.copy(frame1.array)
        frame.setflags(write=1)
        frame_expanded = np.expand_dims(frame, axis=0)

        # Perform the actual detection by running the model with the image as input
        (boxes, scores, classes, num) = sess.run(
            [detection_boxes, detection_scores, detection_classes, num_detections],
            feed_dict={image_tensor: frame_expanded})

        # Draw the results of the detection 
        vis_util.visualize_boxes_and_labels_on_image_array(
            frame,
            np.squeeze(boxes),
            np.squeeze(classes).astype(np.int32),
            np.squeeze(scores),
            category_index,
            use_normalized_coordinates=True,
            line_thickness=8,
            min_score_thresh=0.5)
            

        cv2.putText(frame,'FPS: {0:.2f}'.format(frame_rate_calc),(30,50),font,1,(255,255,0),2,cv2.LINE_AA)
                # All the results have been drawn on the frame, so it's time to display it.
        cv2.imshow('Object detector', frame)
        
       #if(int(categories) == NUM_CLASSES[1])
           # print('Red')
       #elif(int(categories) == NUM_CLASSES[2]):
           #print('Green')
        #else:
         #   print('none')

       # min_score_thresh = 0.5

       # print([category.get(1)] for i in classes[0] if scores[0, i] > min_score_thresh)
             # if detection_classes == 'green':
        #    print('green')
        #else:
        
         #  print('red')
        #print(category_index)
        #print([category_index.get(i) for i in classes[0]])
        #print(scores)
        #print(detection_classes)
        
        #print(num)

        t2 = cv2.getTickCount()
        time1 = (t2-t1)/freq
        frame_rate_calc = 1/time1
        
        # Press 'q' to quit
        if cv2.waitKey(1) == ord('q'):
            break

        rawCapture.truncate(0)

    camera.close()

### USB webcam ###
elif camera_type == 'usb':
    # Initialize USB webcam feed
    camera = cv2.VideoCapture(0)
    ret = camera.set(3,IM_WIDTH)
    ret = camera.set(4,IM_HEIGHT)

    while(True):

        t1 = cv2.getTickCount()

        # Acquire frame and expand frame dimensions to have shape: [1, None, None, 3]
        ret, frame = camera.read()
        frame_expanded = np.expand_dims(frame, axis=0)

        # Perform the actual detection by running the model with the image as input
        (boxes, scores, classes, num) = sess.run(
            [detection_boxes, detection_scores, detection_classes, num_detections],
            feed_dict={image_tensor: frame_expanded})

        # Draw the results of the detection (aka 'visulaize the results')
        vis_util.visualize_boxes_and_labels_on_image_array(
            frame,
            np.squeeze(boxes),
            np.squeeze(classes).astype(np.int32),
            np.squeeze(scores),
            category_index,
            use_normalized_coordinates=True,
            line_thickness=8,
            min_score_thresh=0.85)

        cv2.putText(frame,'FPS: {0:.2f}'.format(frame_rate_calc),(30,50),font,1,(255,255,0),2,cv2.LINE_AA)
        
        # All the results have been drawn on the frame, so it's time to display it.
        cv2.imshow('Object detector', frame)

        t2 = cv2.getTickCount()
        time1 = (t2-t1)/freq
        frame_rate_calc = 1/time1

        # Press 'q' to quit
        if cv2.waitKey(1) == ord('q'):
            break

    camera.release()

cv2.destroyAllWindows()



"
    },
    "Smart-ATS-System-Using-Google-Gemini": {
        "description": null,
        "readme": "================================================
File: README.md
================================================
# Smart ATS System 💼🔍

This Streamlit web application serves as a Smart ATS (Applicant Tracking System), utilizing Google's Gemini Pro AI model to evaluate resumes against job descriptions. By harnessing the power of AI, it streamlines the hiring process and enhances HR efficiency.

## Deployed Link
The Smart ATS System is Deployed And Available [Here](https://huggingface.co/spaces/Parthiban97/ATS_Smart_System)

## Features & Impact

- **Resume Evaluation**: Upload resumes in PDF or DOCX format and paste job descriptions to assess candidate suitability for roles efficiently.

- **Skill Enhancement Recommendations**: Get insights into improving candidates' skills tailored to the job requirements, aiding HR professionals in talent development.

- **Keyword Identification**: Identify missing keywords in resumes compared to job descriptions, ensuring thorough evaluation and highlighting areas for improvement.

- **Match Percentage Calculation**: Calculate the percentage match between resumes and job descriptions, providing a quantitative measure of alignment.

- **Query Resolution**: Answer queries based on provided resumes and job descriptions, facilitating clearer understanding and decision-making.

## Screenshots

![ats_1](https://github.com/Parthiban-R-3997/Smart-ATS-System-Using-Google-Gemini/assets/26496805/eed50921-ef63-4158-9905-03bbf202d72e)





================================================
File: launch.py
================================================
## Importing Libraries
import streamlit as st
import os
from PyPDF2 import PdfReader
import google.generativeai as genai
from dotenv import load_dotenv
import docx

# Loading the .env keys
load_dotenv()

# Define functions
def get_gemini_response(model_id, prompt, pdf_content, input_text):
    model = genai.GenerativeModel(model_id)
    response = model.generate_content([prompt, pdf_content, input_text])
    return response.text

def get_pdf_text(pdf_docs):
    text = ''
    for doc in pdf_docs:
        if doc.name.endswith('.pdf'):
            pdf_reader = PdfReader(doc)
            for page in pdf_reader.pages:
                text += page.extract_text()
        elif doc.name.endswith('.docx'):
            doc_reader = docx.Document(doc)
            for para in doc_reader.paragraphs:
                text += para.text + '\n'        
    return text

# Define input prompts
input_prompts = {
    'evaluate_resume': '''
        You are an experienced Technical Human Resource Manager. Your task is to review the provided resume against the job description. 
        Please share your professional evaluation on whether the candidate's profile aligns with the role. 
        Highlight the strengths and weaknesses of the applicant in relation to the specified job requirements.

    ''',
    'improve_skills': '''
        You are a Technical Human Resource Manager with expertise in all domains. 
        Your role is to scrutinize the resume in light of the job description provided. 
        Share your insights on the candidate's suitability for the role from an HR perspective. 
        Additionally, offer advice on enhancing the candidate's skills and identify areas where improvement is needed.

    ''',
    'missing_keywords': '''
        You are a skilled ATS (Applicant Tracking System) scanner with a deep understanding of ATS functionality across various domains. 
        Your task is to evaluate the resume against the provided job description. As a Human Resource Manager,
        assess the compatibility of the resume with the role. Identify the keywords that are missing.
        Also, provide recommendations for enhancing the candidate's skills and indicate which areas require further development.

    ''',
    'percentage_match': '''
        You are a skilled ATS (Applicant Tracking System) scanner with a deep understanding of ATS functionality across various domains. 
        Your task is to evaluate the resume against the provided job description. Give the percentage of match if the resume matches
        the job description. First, present the percentage match, then list the missing keywords, and finally provide your overall thoughts.

    ''',
    'answer_query': '''
        You are an experienced Technical Human Resource Manager. Please answer the following query based on the resume and job description provided.
    '''
}

# Define model options
model_options = [
    'gemini-1.5-flash',
    'gemini-1.5-pro',
    'gemini-1.0-pro',
    'gemini-pro'
]


# Streamlit App
st.set_page_config(page_title='Resume Expert System', page_icon=':chart_with_upwards_trend:')
st.title('Smart ATS System 💼🔍')

# Sidebar for API key, model selection, and resume uploader
with st.sidebar:
    st.markdown('[Get your Google API Key](https://aistudio.google.com/app/apikey)')
    api_key = st.text_input('Enter your Google API Key', type='password')
    selected_model = st.selectbox('Select Gemini Model', model_options)
    uploaded_files = st.file_uploader('Upload Your Resume in .PDF or .DOCX format 📂', type=['pdf', 'docx'], accept_multiple_files=True)
    if uploaded_files:
        st.success('Files Uploaded Successfully.')

# Set the API key for genai
if api_key:
    genai.configure(api_key=api_key)

input_text = st.text_area('Paste the Job Description 📄')

# Align buttons in one row
col1, col2, col3, col4, col5 = st.columns(5)

with col1:
    evaluate_resume_btn = st.button('Evaluate Resume')
with col2:
    improve_skills_btn = st.button('Improve Skills')
with col3:
    missing_keywords_btn = st.button('Identify Missing Keywords')
with col4:
    percentage_match_btn = st.button('Calculate Match Percentage')
with col5:
    answer_query_btn = st.button('Answer My Query')

show_error_api_key = False
show_error_uploaded_files = False
show_error_input_text = False

if evaluate_resume_btn or improve_skills_btn or missing_keywords_btn or percentage_match_btn or answer_query_btn:
    if not api_key:
        show_error_api_key = True
    if not uploaded_files:
        show_error_uploaded_files = True
    if not input_text:
        show_error_input_text = True

    if not show_error_api_key and not show_error_uploaded_files and not show_error_input_text:
        pdf_content = get_pdf_text(uploaded_files)

        if evaluate_resume_btn:
            response = get_gemini_response(selected_model, input_prompts['evaluate_resume'], pdf_content, input_text)
            st.subheader('The Response is')
            st.write(response)
        elif improve_skills_btn:
            response = get_gemini_response(selected_model, input_prompts['improve_skills'], pdf_content, input_text)
            st.subheader('The Response is')
            st.write(response)
        elif missing_keywords_btn:
            response = get_gemini_response(selected_model, input_prompts['missing_keywords'], pdf_content, input_text)
            st.subheader('The Response is')
            st.write(response)
        elif percentage_match_btn:
            response = get_gemini_response(selected_model, input_prompts['percentage_match'], pdf_content, input_text)
            st.subheader('The Response is')
            st.write(response)
        elif answer_query_btn:
            response = get_gemini_response(selected_model, input_prompts['answer_query'], pdf_content, input_text)
            st.subheader('The Response is')
            st.write(response)

# Display error messages near respective fields
if show_error_api_key:
    with st.sidebar:
        st.error('Please enter your Google API Key.')
if show_error_input_text:
    st.error('Please paste the job description to proceed.', icon='📄')


================================================
File: requirements.txt
================================================
streamlit
PyPDF2
google.generativeai
python-dotenv
langchain-groq
python-docx
docx


"
    }
}
{information}
LinkedIn Information:
{linkedin_information}

Human: {query}  
Assistant:
"""



summary_prompt_template = PromptTemplate(
    input_variables=["information", "query", "num_repos", "projects", "linkedin_information"],
    template=summary_template
)

llm = ChatGoogleGenerativeAI(model="gemini-2.0-flash")
chain = LLMChain(llm=llm, prompt=summary_prompt_template)

memory = ConversationBufferMemory(memory_key="chat_history", return_messages=True)

def prepare_repo_information(repo_details):
    num_repos = len(repo_details)
    projects = ', '.join(repo_details.keys())
    readme_contents = '\n\n'.join([f"Repo Name: {name}\nDescription: {details['description']}\nREADME:\n{details['readme']}" for name, details in repo_details.items()])
    return {
        'num_repos': num_repos,
        'projects': projects,
        'information': readme_contents
    }

def main(query):
    try:
        with open("github_data.json", "r") as file:
            repo_details = json.load(file)

        repo_info = prepare_repo_information(repo_details)

        linkedin_profile_url = "https://www.linkedin.com/in/parthiban-ravichandran/"
        with open("linkedin_data.json", "r") as file:
            linkedin_data = json.load(file)

        linkedin_information = "\n".join([f"{key}: {value}" for key, value in linkedin_data.items()])

        response = chain.invoke({
            "information": repo_info['information'],
            "query": query,
            "num_repos": repo_info['num_repos'],
            "projects": repo_info['projects'],
            "linkedin_information": linkedin_information
        })

        memory.save_context({"input": query}, {"output": response["text"]})

        return response["text"]  # Return the raw response without formatting

    except Exception as e:
        print(f"Error: {e}")
        return "An error occurred while processing your request."

if __name__ == "__main__":
    if len(sys.argv) > 1:
        query = sys.argv[1]
        print(main(query))
    else:
        print("No query provided.")
